// Code generated by goyacc -o lyx/gram.go -p yy lyx/gram.y. DO NOT EDIT.

//line lyx/gram.y:3
package lyx

import __yyfmt__ "fmt"

//line lyx/gram.y:3

import (
	"crypto/rand"
	"encoding/hex"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

//line lyx/gram.y:21
type yySymType struct {
	yys     int
	str     string
	strlist []string
	byte    byte
	bytes   []byte
	int     int
	bool    bool
	empty   struct{}

	node      Node
	from_list []FromClauseNode
	from      FromClauseNode
	tableelt  []TableElt
	tableref  FromClauseNode

	selectStmt *Select

	nodeList []Node
}

const SCONST = 57346
const IDENT = 57347
const CREATE = 57348
const ALTER = 57349
const ROLE = 57350
const DATABASE = 57351
const NATURAL = 57352
const TABLE = 57353
const INDEX = 57354
const SELECT = 57355
const UPDATE = 57356
const INSERT = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const AND = 57361
const VALUES = 57362
const OR = 57363
const EXPLAIN = 57364
const EXECUTE = 57365
const PREPARE = 57366
const BEGIN = 57367
const COMMIT = 57368
const ROLLBACK = 57369
const VACUUM = 57370
const CLUSTER = 57371
const ANALYZE = 57372
const INTO = 57373
const OUTER_P = 57374
const FULL = 57375
const RIGHT = 57376
const LEFT = 57377
const INNER_P = 57378
const DROP = 57379
const TRUNCATE = 57380
const FETCH = 57381
const FOR = 57382
const ORDER = 57383
const GROUP = 57384
const BY = 57385
const OFFSET = 57386
const LIMIT = 57387
const WINDOW = 57388
const CROSS = 57389
const SET = 57390
const RESET = 57391
const LOCAL = 57392
const ALL = 57393
const PRIMARY = 57394
const KEY = 57395
const FOREIGN = 57396
const REFERENCES = 57397
const USING = 57398
const TCOLON = 57399
const TCOMMA = 57400
const TOPENBR = 57401
const TCLOSEBR = 57402
const TSQOPENBR = 57403
const TSQCLOSEBR = 57404
const TSEMICOLON = 57405
const TNOT_EQUALS = 57406
const TDOT = 57407
const NULL_P = 57408
const ISNULL = 57409
const ON = 57410
const JOIN = 57411
const TPLUS = 57412
const TMINUS = 57413
const TMUL = 57414
const TDIV = 57415
const TGREATER = 57416
const TGREATER_EQUALS = 57417
const TLESS = 57418
const TLESS_EQUALS = 57419
const TMOD = 57420
const TPOW = 57421
const FALSE_P = 57422
const TRUE_P = 57423
const TEQ = 57424
const OP = 57425
const ONLY = 57426
const RETURNING = 57427
const COPY = 57428
const ARRAY = 57429
const IS = 57430
const NOT = 57431
const NULL = 57432
const DISTINCT = 57433
const DEFAULT = 57434
const NORMALIZED = 57435
const NOTNULL = 57436
const DOCUMENT_P = 57437
const TO = 57438
const STDOUT = 57439
const LATERAL_P = 57440
const ORDINALITY = 57441
const WITH_LA = 57442
const COLLATE = 57443
const AS = 57444
const UNION = 57445
const EXCEPT = 57446
const INTERSECT = 57447
const BETWEEN = 57448
const IN_P = 57449
const LIKE = 57450
const ILIKE = 57451
const SIMILAR = 57452
const NOT_LA = 57453
const ESCAPE = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const CUBE = 57462
const ROLLUP = 57463
const Op = 57464
const OPERATOR = 57465
const AT = 57466
const UMINUS = 57467
const TYPECAST = 57468

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SCONST",
	"IDENT",
	"CREATE",
	"ALTER",
	"ROLE",
	"DATABASE",
	"NATURAL",
	"TABLE",
	"INDEX",
	"SELECT",
	"UPDATE",
	"INSERT",
	"DELETE",
	"FROM",
	"WHERE",
	"AND",
	"VALUES",
	"OR",
	"EXPLAIN",
	"EXECUTE",
	"PREPARE",
	"BEGIN",
	"COMMIT",
	"ROLLBACK",
	"VACUUM",
	"CLUSTER",
	"ANALYZE",
	"INTO",
	"OUTER_P",
	"FULL",
	"RIGHT",
	"LEFT",
	"INNER_P",
	"DROP",
	"TRUNCATE",
	"FETCH",
	"FOR",
	"ORDER",
	"GROUP",
	"BY",
	"OFFSET",
	"LIMIT",
	"WINDOW",
	"CROSS",
	"SET",
	"RESET",
	"LOCAL",
	"ALL",
	"PRIMARY",
	"KEY",
	"FOREIGN",
	"REFERENCES",
	"USING",
	"TCOLON",
	"TCOMMA",
	"TOPENBR",
	"TCLOSEBR",
	"TSQOPENBR",
	"TSQCLOSEBR",
	"TSEMICOLON",
	"TNOT_EQUALS",
	"TDOT",
	"NULL_P",
	"ISNULL",
	"ON",
	"JOIN",
	"TPLUS",
	"TMINUS",
	"TMUL",
	"TDIV",
	"TGREATER",
	"TGREATER_EQUALS",
	"TLESS",
	"TLESS_EQUALS",
	"TMOD",
	"TPOW",
	"FALSE_P",
	"TRUE_P",
	"TEQ",
	"OP",
	"ONLY",
	"RETURNING",
	"COPY",
	"ARRAY",
	"IS",
	"NOT",
	"NULL",
	"DISTINCT",
	"DEFAULT",
	"NORMALIZED",
	"NOTNULL",
	"DOCUMENT_P",
	"TO",
	"STDOUT",
	"LATERAL_P",
	"ORDINALITY",
	"WITH_LA",
	"COLLATE",
	"AS",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"BETWEEN",
	"IN_P",
	"LIKE",
	"ILIKE",
	"SIMILAR",
	"NOT_LA",
	"ESCAPE",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"CUBE",
	"ROLLUP",
	"Op",
	"OPERATOR",
	"AT",
	"UMINUS",
	"TYPECAST",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lyx/gram.y:1740

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 159,
	59, 107,
	-2, 241,
	-1, 231,
	59, 107,
	-2, 91,
	-1, 239,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 142,
	-1, 240,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 143,
	-1, 241,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 144,
	-1, 242,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 145,
	-1, 243,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 146,
	-1, 244,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 147,
	-1, 298,
	59, 241,
	-2, 91,
	-1, 351,
	67, 0,
	88, 0,
	94, 0,
	-2, 160,
	-1, 385,
	67, 0,
	88, 0,
	94, 0,
	-2, 161,
}

const yyPrivate = 57344

const yyLast = 841

var yyAct = [...]int{

	166, 140, 59, 215, 57, 387, 156, 361, 380, 393,
	221, 375, 172, 320, 295, 379, 275, 294, 283, 339,
	17, 212, 228, 226, 139, 51, 199, 50, 52, 54,
	56, 421, 304, 349, 162, 225, 129, 130, 131, 132,
	193, 137, 194, 248, 224, 324, 298, 271, 394, 185,
	163, 192, 214, 192, 169, 167, 158, 251, 250, 377,
	359, 170, 231, 171, 218, 168, 249, 335, 252, 334,
	254, 206, 253, 193, 312, 194, 43, 165, 313, 205,
	326, 37, 39, 38, 40, 191, 437, 404, 196, 422,
	22, 180, 181, 182, 183, 187, 190, 186, 189, 184,
	185, 395, 414, 188, 192, 193, 404, 194, 408, 195,
	409, 404, 410, 405, 434, 197, 229, 326, 191, 327,
	355, 196, 292, 198, 180, 181, 182, 183, 187, 190,
	186, 189, 184, 185, 348, 315, 188, 192, 314, 174,
	175, 176, 195, 296, 382, 200, 201, 202, 197, 368,
	191, 203, 354, 196, 41, 227, 180, 181, 182, 183,
	187, 190, 186, 189, 184, 185, 213, 346, 188, 192,
	268, 216, 219, 358, 195, 298, 207, 281, 179, 272,
	197, 323, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 208, 209, 210,
	425, 276, 220, 305, 396, 182, 183, 259, 193, 265,
	194, 184, 185, 260, 356, 273, 192, 307, 306, 177,
	329, 216, 274, 367, 280, 269, 293, 293, 308, 344,
	310, 51, 309, 297, 51, 399, 232, 331, 416, 279,
	291, 400, 286, 288, 287, 289, 270, 332, 370, 256,
	277, 299, 301, 191, 432, 427, 196, 340, 161, 180,
	181, 182, 183, 187, 190, 186, 189, 184, 185, 213,
	321, 188, 192, 213, 302, 3, 53, 195, 338, 316,
	55, 222, 350, 197, 232, 311, 232, 164, 317, 37,
	318, 51, 261, 343, 325, 173, 328, 343, 49, 357,
	293, 300, 255, 345, 337, 211, 297, 341, 342, 424,
	366, 204, 150, 351, 352, 135, 136, 347, 133, 134,
	160, 1, 285, 431, 362, 426, 333, 415, 398, 336,
	369, 330, 365, 360, 278, 363, 371, 372, 232, 290,
	319, 232, 322, 364, 58, 286, 288, 287, 289, 293,
	267, 381, 385, 381, 353, 266, 388, 321, 386, 282,
	257, 392, 383, 384, 180, 181, 182, 183, 390, 397,
	389, 391, 184, 185, 157, 148, 138, 192, 402, 373,
	374, 284, 21, 378, 216, 406, 401, 147, 42, 381,
	230, 232, 232, 420, 14, 232, 362, 13, 407, 412,
	411, 12, 11, 413, 417, 418, 44, 45, 46, 47,
	48, 381, 388, 419, 10, 16, 423, 15, 6, 5,
	4, 428, 403, 9, 216, 429, 430, 8, 20, 19,
	18, 7, 433, 142, 232, 436, 303, 435, 60, 61,
	82, 83, 90, 91, 263, 71, 89, 62, 63, 64,
	65, 66, 67, 68, 70, 69, 72, 73, 74, 75,
	76, 77, 84, 85, 86, 95, 223, 178, 2, 0,
	0, 87, 88, 99, 98, 92, 93, 94, 97, 96,
	0, 118, 78, 79, 80, 81, 110, 108, 109, 111,
	0, 103, 102, 100, 101, 0, 0, 105, 127, 0,
	0, 0, 122, 117, 113, 0, 112, 116, 125, 126,
	123, 124, 114, 115, 121, 120, 0, 128, 104, 107,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 82, 83, 90, 91, 106, 71, 89, 62,
	63, 64, 65, 66, 67, 68, 70, 69, 72, 73,
	74, 75, 76, 77, 84, 85, 86, 95, 0, 0,
	0, 0, 0, 87, 88, 99, 98, 92, 93, 94,
	97, 96, 0, 118, 78, 79, 80, 81, 110, 108,
	109, 111, 193, 103, 102, 100, 101, 0, 0, 105,
	127, 0, 0, 0, 122, 117, 113, 0, 112, 116,
	125, 126, 123, 124, 114, 115, 121, 120, 0, 128,
	104, 107, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 106, 0,
	196, 0, 0, 180, 181, 182, 183, 187, 190, 186,
	189, 184, 185, 0, 0, 188, 192, 0, 152, 159,
	0, 195, 191, 0, 0, 196, 0, 197, 180, 181,
	182, 183, 187, 190, 186, 189, 184, 185, 152, 159,
	188, 192, 0, 0, 0, 0, 195, 35, 36, 0,
	0, 0, 197, 0, 37, 39, 38, 40, 0, 0,
	0, 0, 0, 22, 26, 29, 23, 24, 25, 30,
	31, 32, 0, 149, 262, 152, 159, 0, 34, 33,
	153, 0, 0, 0, 143, 144, 264, 285, 0, 27,
	28, 0, 0, 149, 155, 154, 258, 0, 0, 0,
	153, 151, 0, 145, 143, 144, 146, 152, 159, 0,
	286, 288, 287, 289, 155, 154, 0, 0, 0, 0,
	0, 151, 0, 145, 282, 0, 146, 41, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 143, 144, 141, 0, 376, 284, 0, 0, 0,
	0, 155, 154, 0, 0, 0, 0, 0, 151, 0,
	145, 0, 149, 146, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 143, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 154, 0, 0, 0, 0, 0,
	151, 191, 145, 0, 0, 146, 0, 180, 181, 182,
	183, 187, 190, 186, 189, 184, 185, 0, 0, 188,
	192,
}
var yyPact = [...]int{

	671, -1000, 13, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13, 13, 13,
	13, 13, 68, -1000, -1000, -1000, 286, 226, 229, 286,
	434, 434, 434, 434, 434, 307, 434, 701, 227, -34,
	270, 286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	434, -1000, -17, 286, -1000, -1000, 434, -1000, 434, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 290, 434, 434, 434, -1000, 161, -1000,
	21, -1000, -1000, 733, 733, 733, -1000, -1000, -1000, 733,
	-1000, 18, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6,
	117, 286, 286, -1000, -34, 286, -13, -1000, 526, -18,
	-1000, -1000, 113, -1000, -1000, -1000, -1000, 701, 263, 57,
	733, 733, 733, 733, 733, 733, 733, 733, 733, 733,
	733, 733, 733, 733, 733, -23, -1000, -1000, 297, -1000,
	133, 133, 588, 189, -1000, 664, 287, 644, 111, 177,
	286, -49, -1000, 121, 286, -1000, -1000, -1000, 526, 196,
	-1000, 197, 733, 119, 312, 20, 41, 296, -1000, 57,
	-68, -1000, -1000, 133, 133, -30, -30, -30, -32, 294,
	294, 294, 294, 294, 294, 86, 588, 563, -1000, 137,
	-1000, -1000, 268, -1000, -1000, -1000, -1000, 16, -1000, 86,
	-1000, -1000, -1000, 78, 75, 86, 259, 276, 286, 286,
	125, -52, 286, -1000, -1000, 59, 291, 167, 191, 204,
	86, 57, 0, -2, 57, 209, 225, 225, 225, -1000,
	-1000, -1000, 286, -1000, -1000, -1000, 170, 108, -1000, 41,
	-1000, 74, 312, -1000, -66, -1000, -1000, -1000, 265, -1000,
	-1000, 733, 733, -1000, -1000, -1000, 93, -1000, 60, 156,
	-1000, -22, 263, 286, 263, -1000, 196, 434, 171, 90,
	207, 434, 434, 312, 57, 57, 707, -10, 57, -1000,
	-1000, -1000, -1000, -1000, 287, 85, 287, -1000, 20, -1000,
	733, 757, 86, 434, 733, -1000, 286, 263, 290, 733,
	-37, -1000, 43, -1000, 22, -1000, -1000, 151, 286, 190,
	198, -1000, -1000, -1000, 707, -1000, 733, 57, -1000, 53,
	-1000, 526, 287, 48, -1000, 757, -1000, 50, 54, -1000,
	-37, -1000, 86, -1000, 434, 286, -1000, 42, 194, 434,
	434, -1000, 86, -1000, 287, -1000, -70, 29, -1000, -1000,
	733, -1000, -1000, -1000, 145, 216, 434, -1000, -1000, -1000,
	-1000, 526, -1000, -1000, -1000, 286, 214, 434, -1000, -1000,
	55, -1000, 434, -1000, 286, -1000, 26, -1000,
}
var yyPgo = [...]int{

	0, 468, 275, 0, 3, 12, 10, 467, 466, 44,
	35, 22, 444, 436, 436, 17, 1, 433, 433, 2,
	431, 20, 430, 429, 428, 427, 423, 420, 419, 418,
	417, 415, 414, 402, 401, 397, 394, 388, 393, 56,
	23, 390, 387, 382, 24, 382, 376, 375, 374, 360,
	6, 21, 355, 5, 354, 350, 344, 342, 7, 340,
	16, 34, 339, 14, 4, 13, 339, 8, 15, 339,
	334, 331, 330, 328, 327, 325, 323, 321, 320, 312,
	311, 310, 309, 19, 18, 11, 305, 9, 299,
}
var yyR1 = [...]int{

	0, 77, 37, 37, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 56, 56, 56, 64, 64, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 5, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 38, 38, 78, 69, 69,
	68, 68, 67, 39, 39, 39, 12, 14, 14, 42,
	42, 42, 42, 79, 49, 49, 80, 80, 17, 17,
	17, 17, 17, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 48, 47, 47,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 6, 6, 45, 45, 46,
	46, 44, 44, 44, 44, 25, 25, 25, 25, 27,
	28, 29, 20, 26, 2, 2, 2, 2, 2, 2,
	81, 81, 82, 82, 60, 60, 60, 30, 30, 30,
	30, 31, 32, 33, 34, 36, 35, 70, 70, 71,
	71, 72, 72, 73, 73, 74, 74, 75, 75, 76,
	76, 50, 7, 7, 8, 8, 10, 10, 63, 63,
	62, 62, 41, 13, 13, 15, 15, 15, 15, 15,
	40, 9, 9, 9, 9, 9, 83, 83, 84, 84,
	84, 84, 85, 11, 11, 11, 11, 11, 11, 21,
	21, 51, 51, 86, 86, 52, 55, 55, 53, 53,
	54, 87, 87, 22, 22, 61, 61, 88, 88, 59,
	59, 65, 23, 58, 58, 57, 57, 24, 43,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 0, 1, 1, 0,
	1, 3, 3, 3, 4, 4, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 2, 4, 2, 3, 4, 3, 4,
	5, 6, 3, 4, 3, 4, 1, 3, 1, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 4, 5, 2, 2, 1,
	1, 1, 3, 3, 2, 2, 2, 2, 2, 2,
	0, 2, 0, 5, 3, 6, 3, 7, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 0, 3, 0,
	2, 0, 3, 0, 2, 0, 2, 0, 2, 0,
	2, 1, 2, 0, 1, 3, 1, 3, 2, 1,
	0, 1, 1, 2, 0, 1, 4, 5, 4, 0,
	2, 2, 2, 3, 1, 4, 1, 0, 2, 2,
	2, 1, 2, 3, 4, 5, 4, 5, 4, 11,
	2, 1, 3, 0, 1, 3, 0, 1, 1, 3,
	3, 0, 2, 7, 5, 0, 1, 0, 2, 1,
	3, 3, 8, 1, 3, 0, 2, 7, 6,
}
var yyChk = [...]int{

	-1000, -77, -1, -2, -27, -28, -29, -20, -25, -26,
	-32, -33, -34, -35, -36, -30, -31, -21, -22, -23,
	-24, -43, 22, 25, 26, 27, 23, 48, 49, 24,
	28, 29, 30, 38, 37, 6, 7, 13, 15, 14,
	16, 86, -37, 63, -37, -37, -37, -37, -37, -2,
	-3, 5, -3, 50, -3, 51, -3, -64, -56, -19,
	4, 5, 13, 14, 15, 16, 17, 18, 19, 21,
	20, 11, 22, 23, 24, 25, 26, 27, 48, 49,
	50, 51, 6, 7, 28, 29, 30, 37, 38, 12,
	8, 9, 41, 42, 43, 31, 45, 44, 40, 39,
	59, 60, 58, 57, 84, 63, 102, 85, 53, 54,
	52, 55, 72, 70, 78, 79, 73, 69, 47, 88,
	81, 80, 68, 76, 77, 74, 75, 64, 83, -64,
	-64, -64, -64, 11, 12, 8, 9, -64, -46, -44,
	-16, 72, -17, 70, 71, 89, 92, -42, -47, 59,
	-79, 87, 4, 66, 81, 80, -50, -48, -39, 5,
	-78, 31, -61, 84, 17, -10, -3, -64, 82, -3,
	-64, -64, -5, 5, -64, -64, -64, 58, -7, 17,
	70, 71, 72, 73, 78, 79, 76, 74, 82, 77,
	75, 64, 83, 19, 21, 88, 67, 94, 102, 5,
	-16, -16, -16, -16, -80, 61, 65, 59, -10, -10,
	-61, -86, -51, -3, 65, -4, -19, 4, 82, 59,
	-44, -6, 18, -8, -9, -10, -40, 98, -11, 59,
	-41, 5, -39, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, 66, 89,
	81, 80, 91, 95, 93, 5, 60, -49, 62, -16,
	-50, 5, 60, -12, 72, -16, -52, -55, 59, 48,
	-10, 96, 58, -3, -4, -60, 5, 54, -70, 42,
	-16, 58, 47, -84, 69, 10, 33, 35, 34, 36,
	-62, -63, 102, -3, -15, -63, 102, -50, 5, -40,
	5, -11, -9, -13, 100, 66, 81, 80, 91, 95,
	93, 17, 58, 62, 60, 60, 20, -21, -51, -59,
	-65, -3, -57, 56, 97, -51, 58, 60, 5, 53,
	-71, 46, 43, -9, 69, 69, -9, -84, 69, -83,
	32, -83, -83, -3, 59, -50, 59, -15, 60, 99,
	17, -16, -16, -54, 59, 60, 58, -88, 17, 82,
	-6, -58, -3, -6, -60, -64, -81, 52, 59, -72,
	41, -64, -64, -9, -9, -85, 68, 69, -9, -68,
	-67, -50, 59, -68, -63, -16, -64, -53, -16, -65,
	-6, -5, -16, -87, 85, 58, 53, -3, -73, 45,
	43, -85, -16, -9, 58, 60, -4, -68, 60, 60,
	58, -87, -64, -58, 60, -74, 44, -64, -64, -67,
	-38, 101, 60, -53, -82, 55, -75, 39, -64, -4,
	-3, -76, 40, -64, 59, -64, -3, 60,
}
var yyDef = [...]int{

	76, -2, 2, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 2, 2, 2,
	2, 2, 0, 199, 200, 201, 0, 0, 0, 0,
	74, 74, 74, 74, 74, 0, 74, 0, 0, 295,
	0, 0, 1, 3, 204, 205, 206, 207, 208, 209,
	74, 91, 0, 0, 197, 198, 74, 222, 74, 71,
	72, 73, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 223,
	224, 226, 225, 0, 74, 74, 74, 221, 243, 189,
	193, 194, 133, 0, 0, 0, 166, 128, 129, 0,
	131, 0, 119, 120, 121, 122, 168, 169, 123, -2,
	0, 0, 0, 296, 295, 283, 246, 202, 0, 0,
	203, 75, 0, 94, 218, 219, 220, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 155, 0, 192,
	134, 135, 151, 0, 132, 0, 0, 0, 286, 0,
	0, 0, 284, 281, 0, 195, 92, 93, 0, 0,
	190, 227, 0, 242, 244, 250, 259, 0, 264, 0,
	254, -2, 252, 136, 137, 138, 139, 140, 141, -2,
	-2, -2, -2, -2, -2, 148, 149, 150, 152, 0,
	156, 158, 0, 162, 164, 191, 130, 0, 127, 124,
	167, 241, 113, 0, 0, 116, 287, 0, 0, 0,
	305, 0, 0, 247, 196, 0, 0, 0, 229, 0,
	186, 0, 0, 0, 0, 0, 267, 267, 267, 271,
	261, 251, 0, 249, 262, 255, 0, 0, -2, 259,
	107, 264, 0, 260, 0, 154, 157, 159, 0, 163,
	165, 0, 0, 126, 114, 115, 0, 294, 0, 297,
	299, 0, 185, 0, 185, 282, 0, 74, 210, 0,
	231, 74, 74, 245, 0, 0, 0, 0, 0, 268,
	266, 269, 270, 248, 0, 0, 0, 263, 273, 253,
	0, -2, 125, 74, 0, 285, 0, 185, 0, 0,
	291, 306, 303, 308, 216, 217, 214, 0, 0, 233,
	0, 230, 228, 274, 0, 276, 0, 0, 278, 0,
	110, 0, 0, 0, 265, -2, 293, 0, 288, 300,
	291, 298, 301, 307, 74, 0, 211, 0, 235, 74,
	74, 275, 272, 277, 0, 256, 106, 0, 258, 290,
	0, 302, 292, 304, 212, 237, 74, 234, 232, 111,
	112, 0, 257, 289, 215, 0, 239, 74, 236, 105,
	0, 279, 74, 238, 0, 240, 0, 213,
}
var yyTok1 = [...]int{

	1,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:327
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:328
		{

		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:334
		{
			yyVAL.str = yyDollar[1].str
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:335
		{
			yyVAL.str = yyDollar[1].str
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:336
		{
			yyVAL.str = yyDollar[1].str
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:337
		{
			yyVAL.str = yyDollar[1].str
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:338
		{
			yyVAL.str = yyDollar[1].str
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:339
		{
			yyVAL.str = yyDollar[1].str
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:340
		{
			yyVAL.str = yyDollar[1].str
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:341
		{
			yyVAL.str = yyDollar[1].str
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:342
		{
			yyVAL.str = yyDollar[1].str
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:343
		{
			yyVAL.str = yyDollar[1].str
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:344
		{
			yyVAL.str = yyDollar[1].str
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:345
		{
			yyVAL.str = yyDollar[1].str
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:346
		{
			yyVAL.str = yyDollar[1].str
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:347
		{
			yyVAL.str = yyDollar[1].str
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:348
		{
			yyVAL.str = yyDollar[1].str
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:349
		{
			yyVAL.str = yyDollar[1].str
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:350
		{
			yyVAL.str = yyDollar[1].str
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:351
		{
			yyVAL.str = yyDollar[1].str
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:352
		{
			yyVAL.str = yyDollar[1].str
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:353
		{
			yyVAL.str = yyDollar[1].str
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:354
		{
			yyVAL.str = yyDollar[1].str
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:355
		{
			yyVAL.str = yyDollar[1].str
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:356
		{
			yyVAL.str = yyDollar[1].str
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:357
		{
			yyVAL.str = yyDollar[1].str
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:358
		{
			yyVAL.str = yyDollar[1].str
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:359
		{
			yyVAL.str = yyDollar[1].str
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:360
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:362
		{
			yyVAL.str = yyDollar[1].str
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:364
		{
			yyVAL.str = yyDollar[1].str
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:365
		{
			yyVAL.str = yyDollar[1].str
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:366
		{
			yyVAL.str = yyDollar[1].str
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:368
		{
			yyVAL.str = yyDollar[1].str
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:369
		{
			yyVAL.str = yyDollar[1].str
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:370
		{
			yyVAL.str = yyDollar[1].str
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:371
		{
			yyVAL.str = yyDollar[1].str
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:372
		{
			yyVAL.str = yyDollar[1].str
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:374
		{
			yyVAL.str = yyDollar[1].str
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:376
		{
			yyVAL.str = yyDollar[1].str
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:377
		{
			yyVAL.str = yyDollar[1].str
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:378
		{
			yyVAL.str = yyDollar[1].str
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:379
		{
			yyVAL.str = yyDollar[1].str
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:380
		{
			yyVAL.str = yyDollar[1].str
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:381
		{
			yyVAL.str = yyDollar[1].str
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:385
		{
			yyVAL.str = yyDollar[1].str
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:386
		{
			yyVAL.str = yyDollar[1].str
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:387
		{
			yyVAL.str = yyDollar[1].str
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:388
		{
			yyVAL.str = yyDollar[1].str
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:389
		{
			yyVAL.str = yyDollar[1].str
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:390
		{
			yyVAL.str = yyDollar[1].str
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:391
		{
			yyVAL.str = yyDollar[1].str
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:392
		{
			yyVAL.str = yyDollar[1].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:393
		{
			yyVAL.str = yyDollar[1].str
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:397
		{
			yyVAL.str = yyDollar[1].str
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:398
		{
			yyVAL.str = yyDollar[1].str
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:399
		{
			yyVAL.str = yyDollar[1].str
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:400
		{
			yyVAL.str = yyDollar[1].str
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:407
		{
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:408
		{
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:414
		{
			yyVAL.node = nil
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:416
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:418
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:420
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:422
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:424
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:426
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:428
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:430
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:432
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:434
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:436
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:438
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:440
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:442
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:463
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:468
		{
			yyVAL.str = yyDollar[1].str
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:470
		{
			yyVAL.str = "AND"
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:472
		{
			yyVAL.str = "OR"
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:474
		{
			yyVAL.str = "!="
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:476
		{
			yyVAL.str = "="
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:478
		{
			yyVAL.str = "<"
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:480
		{
			yyVAL.str = ">"
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:482
		{
			yyVAL.str = ">="
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:484
		{
			yyVAL.str = "<="
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:486
		{
			yyVAL.str = yyDollar[1].str
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:515
		{

		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:518
		{
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:526
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:527
		{
			yyVAL.strlist = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:532
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:536
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:542
		{
			yyVAL.str = yyDollar[1].str
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:550
		{
			yyVAL.node = nil
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:553
		{
			yyVAL.node = nil
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:557
		{
			yyVAL.node = nil
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:561
		{
			yyVAL.node = nil
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:566
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:570
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:578
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:582
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:586
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:590
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:599
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:603
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:610
		{

		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:618
		{

		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:624
		{
			yyVAL.node = yyDollar[1].node
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:627
		{
			yyVAL.node = yyDollar[1].node
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:630
		{
			yyVAL.node = yyDollar[2].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:633
		{
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:635
		{
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:639
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:669
		{
			yyVAL.node = yyDollar[2].node
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:671
		{
			yyVAL.node = yyDollar[2].node
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:673
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:681
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:689
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:697
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:705
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:713
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:721
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:729
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:737
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:745
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:753
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:761
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:770
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:783
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:791
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:799
		{
			yyVAL.node = yyDollar[2].node
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:909
		{
			yyVAL.node = yyDollar[1].node
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:911
		{
			yyVAL.node = yyDollar[1].node
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:913
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:915
		{
			yyVAL.node = yyDollar[1].node
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:934
		{
			yyVAL.node = yyDollar[1].node
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:936
		{
			yyVAL.node = yyDollar[1].node
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:938
		{
			yyVAL.node = yyDollar[1].node
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:940
		{
			yyVAL.node = yyDollar[1].node
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:960
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[5].node,
				Op:    yyDollar[3].str,
			}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:968
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[6].node,
				Op:    yyDollar[3].str,
			}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1087
		{
			yyVAL.node = yyDollar[1].node
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1089
		{
			yyVAL.node = yyDollar[1].node
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1091
		{
			yyVAL.node = yyDollar[1].node
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1095
		{
			yyVAL.node = yyDollar[1].node
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1105
		{
			/*
			 * The SQL spec only allows DEFAULT in "contextually typed
			 * expressions", but for us, it's easier to allow it in
			 * any a_expr and then throw error during parse analysis
			 * if it's in an inappropriate context.  This way also
			 * lets us say something smarter than "syntax error".
			 */

		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1119
		{
			yyVAL.node = &ColumnRef{
				ColName:    yyDollar[3].str,
				TableAlias: yyDollar[1].str,
			}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1127
		{
			yyVAL.node = &ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1131
		{
			yyVAL.node = yyDollar[1].node
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1139
		{ /* result not matter */
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1141
		{ /* result not matter */
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1143
		{ /* result not matter */
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1145
		{ /* result not matter */
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1147
		{ /* result not matter */
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1149
		{ /* result not matter */
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1151
		{ /* result not matter */
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1153
		{ /* result not matter */
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1155
		{ /* result not matter */
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1157
		{ /* result not matter */
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1159
		{ /* result not matter */
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1161
		{ /* result not matter */
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1163
		{ /* result not matter */
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1165
		{ /* result not matter */
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1166
		{ /* result not matter */
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1171
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1175
		{
			yyVAL.node = yyDollar[2].node
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1180
		{
			yyVAL.nodeList = yyDollar[1].nodeList
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1181
		{
			yyVAL.nodeList = nil
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1185
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1186
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1190
		{
			yyVAL.node = yyDollar[1].node
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1194
		{
			yyVAL.node = yyDollar[1].node
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1198
		{
			yyVAL.node = yyDollar[1].node
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1202
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1209
		{
			yyVAL.node = &VarSet{
				Name:  yyDollar[2].str,
				Value: yyDollar[4].str,
			}
		}
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1215
		{
			yyVAL.node = &VarSet{
				IsLocal: true,
				Name:    yyDollar[3].str,
				Value:   yyDollar[5].str,
			}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1222
		{
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1223
		{
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1228
		{
			yyVAL.node = &Begin{}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1237
		{
			yyVAL.node = &Commit{}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1246
		{
			yyVAL.node = &Rollback{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1254
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1262
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1269
		{
			yyVAL.node = yyDollar[1].node
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1271
		{
			yyVAL.node = yyDollar[1].node
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1273
		{
			yyVAL.node = yyDollar[1].node
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1275
		{
			yyVAL.node = yyDollar[1].node
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1277
		{
			yyVAL.node = yyDollar[1].node
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1279
		{
			yyVAL.node = &Explain{
				Stmt: yyDollar[2].node,
			}
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1286
		{
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1287
		{
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1290
		{
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1291
		{
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1294
		{
			yyVAL.tableelt = []TableElt{{
				ColName: yyDollar[1].str,
				ColType: yyDollar[2].str,
			},
			}
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1301
		{
			yyVAL.tableelt = nil
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1304
		{
			yyVAL.tableelt = append(yyDollar[1].tableelt, yyDollar[3].tableelt...)
		}
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1309
		{
			yyVAL.node = &CreateTable{
				TableName: yyDollar[3].str,
				TableElts: yyDollar[5].tableelt,
			}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1314
		{
			yyVAL.node = &Index{}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1318
		{
			yyVAL.node = &CreateRole{}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1322
		{
			yyVAL.node = &CreateDatabase{}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1329
		{
			yyVAL.node = &Alter{}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1336
		{
			yyVAL.node = &Vacuum{}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1343
		{
			yyVAL.node = &Cluster{}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1351
		{
			yyVAL.node = &Analyze{}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1358
		{
			yyVAL.node = &Drop{}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1366
		{
			yyVAL.node = &Truncate{}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1373
		{
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1373
		{
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1374
		{
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1374
		{
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1375
		{
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1375
		{
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1376
		{
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1376
		{
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1377
		{
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1377
		{
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1378
		{
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1378
		{
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1379
		{
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1379
		{
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1391
		{
			yyVAL.from_list = yyDollar[2].from_list
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1392
		{
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1396
		{
			yyVAL.from_list = []FromClauseNode{yyDollar[1].from}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1397
		{
			yyVAL.from_list = append(yyDollar[1].from_list, yyDollar[3].from)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1401
		{
			yyVAL.tableref = &RangeVar{
				SchemaName:   "",
				RelationName: yyDollar[1].str,
				Alias:        "",
			}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1408
		{
			yyVAL.tableref = &RangeVar{
				SchemaName:   yyDollar[1].str,
				RelationName: yyDollar[3].str,
				Alias:        "",
			}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1418
		{
			yyVAL.str = yyDollar[2].str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1422
		{
			yyVAL.str = yyDollar[1].str
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1428
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1439
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1444
		{
			yyVAL.bool = true
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1445
		{
			yyVAL.bool = false
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1456
		{
			yyVAL.node = nil
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1460
		{
			yyVAL.node = nil
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1464
		{

		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1468
		{

		}
	case 259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1472
		{
			yyVAL.node = nil
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1490
		{
			yyVAL.node = yyDollar[1].node
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1498
		{
			yyDollar[1].tableref.SetAlias(yyDollar[2].str)
			yyVAL.from = yyDollar[1].tableref
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1503
		{

		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1507
		{

		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1511
		{
			yyVAL.from = yyDollar[1].tableref
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1515
		{
			yyDollar[2].tableref.SetAlias(yyDollar[4].str)
			yyVAL.from = yyDollar[2].tableref
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1523
		{
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1524
		{
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1528
		{
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1529
		{
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1530
		{
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1531
		{
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1542
		{

		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1550
		{
			yyVAL.tableref = yyDollar[2].tableref
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1554
		{
			/* CROSS JOIN is same as unqualified inner join */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1562
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1569
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[3].from,
			}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1577
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[5].from,
			}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1584
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 279:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lyx/gram.y:1599
		{
			yyVAL.node = &Select{
				FromClause: yyDollar[3].from_list,
				Where:      yyDollar[4].node,
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1605
		{
			yyVAL.node = &Select{
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1613
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1614
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1619
		{
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1619
		{
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1622
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1628
		{
			yyVAL.strlist = nil
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1631
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1639
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1641
		{
			yyVAL.nodeList = append(yyDollar[3].nodeList, yyDollar[1].node)
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1646
		{
			yyVAL.nodeList = yyDollar[2].nodeList
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1652
		{
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1653
		{
		}
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1659
		{
			yyVAL.node = &Insert{
				TableRef: yyDollar[3].tableref,
				Columns:  yyDollar[4].strlist,
				Values:   yyDollar[6].nodeList,
			}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1665
		{
			yyVAL.node = &Insert{
				TableRef:  yyDollar[3].tableref,
				Columns:   yyDollar[4].strlist,
				SubSelect: yyDollar[5].node,
			}
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1674
		{
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1675
		{
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1678
		{
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1679
		{
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1685
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1686
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1691
		{
			yyVAL.str = yyDollar[1].str
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lyx/gram.y:1701
		{
			yyVAL.node = &Update{
				TableRef: yyDollar[3].tableref,
				Where:    yyDollar[7].node,
			}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1712
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1713
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1718
		{
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1719
		{
		}
	case 307:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1723
		{
			yyVAL.node = &Delete{
				TableRef: yyDollar[4].tableref,
				Where:    yyDollar[6].node,
			}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1732
		{
			yyVAL.node = &Copy{
				TableRef: yyDollar[2].tableref,
				Where:    yyDollar[6].node,
				IsFrom:   false,
			}
		}
	}
	goto yystack /* stack new state and value */
}
