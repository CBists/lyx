// Code generated by goyacc -o lyx/gram.go -p yy lyx/gram.y. DO NOT EDIT.

//line lyx/gram.y:3
package lyx

import __yyfmt__ "fmt"

//line lyx/gram.y:3

import (
	"crypto/rand"
	"encoding/hex"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

type LyxParser yyParser

func NewLyxParser() LyxParser {
	return yyNewParser()
}

//line lyx/gram.y:29
type yySymType struct {
	yys     int
	str     string
	strlist []string
	byte    byte
	bytes   []byte
	int     int
	bool    bool
	empty   struct{}

	node      Node
	from_list []FromClauseNode
	from      FromClauseNode
	tableelt  []TableElt
	tableref  FromClauseNode

	nodeList []Node
}

const SCONST = 57346
const IDENT = 57347
const CREATE = 57348
const ALTER = 57349
const ROLE = 57350
const DATABASE = 57351
const NATURAL = 57352
const TABLE = 57353
const INDEX = 57354
const SELECT = 57355
const UPDATE = 57356
const INSERT = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const AND = 57361
const VALUES = 57362
const OR = 57363
const EXPLAIN = 57364
const EXECUTE = 57365
const PREPARE = 57366
const BEGIN = 57367
const COMMIT = 57368
const ROLLBACK = 57369
const VACUUM = 57370
const CLUSTER = 57371
const ANALYZE = 57372
const INTO = 57373
const OUTER_P = 57374
const FULL = 57375
const RIGHT = 57376
const LEFT = 57377
const INNER_P = 57378
const DROP = 57379
const TRUNCATE = 57380
const FETCH = 57381
const FOR = 57382
const ORDER = 57383
const GROUP = 57384
const BY = 57385
const OFFSET = 57386
const LIMIT = 57387
const WINDOW = 57388
const CROSS = 57389
const SET = 57390
const RESET = 57391
const LOCAL = 57392
const ALL = 57393
const PRIMARY = 57394
const KEY = 57395
const FOREIGN = 57396
const REFERENCES = 57397
const USING = 57398
const TCOLON = 57399
const TCOMMA = 57400
const TOPENBR = 57401
const TCLOSEBR = 57402
const TSQOPENBR = 57403
const TSQCLOSEBR = 57404
const TSEMICOLON = 57405
const TNOT_EQUALS = 57406
const TDOT = 57407
const NULL_P = 57408
const ISNULL = 57409
const ON = 57410
const JOIN = 57411
const TPLUS = 57412
const TMINUS = 57413
const TMUL = 57414
const TDIV = 57415
const TGREATER = 57416
const TGREATER_EQUALS = 57417
const TLESS = 57418
const TLESS_EQUALS = 57419
const TMOD = 57420
const TPOW = 57421
const DELIMITERS = 57422
const PROGRAM = 57423
const STDIN = 57424
const FALSE_P = 57425
const TRUE_P = 57426
const copy_generic_opt_list = 57427
const BINARY = 57428
const FREEZE = 57429
const DELIMITER = 57430
const CSV = 57431
const HEADER_P = 57432
const QUOTE = 57433
const ESCAPE = 57434
const FORCE = 57435
const ENCODING = 57436
const TEQ = 57437
const OP = 57438
const ONLY = 57439
const RETURNING = 57440
const COPY = 57441
const ARRAY = 57442
const ROW = 57443
const SETOF = 57444
const INT_P = 57445
const INTEGER = 57446
const SMALLINT = 57447
const BIGINT = 57448
const REAL = 57449
const FLOAT_P = 57450
const DOUBLE_P = 57451
const DECIMAL_P = 57452
const DEC = 57453
const NUMERIC = 57454
const BOOLEAN_P = 57455
const BIT = 57456
const YEAR_P = 57457
const MONTH_P = 57458
const DAY_P = 57459
const HOUR_P = 57460
const MINUTE_P = 57461
const SECOND_P = 57462
const CHARACTER = 57463
const CHAR_P = 57464
const VARCHAR = 57465
const NATIONAL = 57466
const NCHAR = 57467
const PRECISION = 57468
const VARYING = 57469
const TIMESTAMP = 57470
const TIME = 57471
const INTERVAL = 57472
const WITHOUT = 57473
const ZONE = 57474
const IF_P = 57475
const DEALLOCATE = 57476
const EXISTS = 57477
const DELETE_P = 57478
const OIDS = 57479
const PRESERVE = 57480
const TABLESPACE = 57481
const PARAM = 57482
const IS = 57483
const NOT = 57484
const NULL = 57485
const DISTINCT = 57486
const DEFAULT = 57487
const NORMALIZED = 57488
const NOTNULL = 57489
const DOCUMENT_P = 57490
const ASYMMETRIC = 57491
const ASC = 57492
const DESC = 57493
const NULLS_LA = 57494
const FIRST_P = 57495
const LAST_P = 57496
const TO = 57497
const STDOUT = 57498
const TEMPORARY = 57499
const GLOBAL = 57500
const TEMP = 57501
const UNLOGGED = 57502
const LATERAL_P = 57503
const ORDINALITY = 57504
const WITH_LA = 57505
const WITH = 57506
const COLLATE = 57507
const AS = 57508
const DATA_P = 57509
const NO = 57510
const UNION = 57511
const EXCEPT = 57512
const INTERSECT = 57513
const BETWEEN = 57514
const IN_P = 57515
const LIKE = 57516
const ILIKE = 57517
const SIMILAR = 57518
const NOT_LA = 57519
const UNBOUNDED = 57520
const PARTITION = 57521
const RANGE = 57522
const ROWS = 57523
const GROUPS = 57524
const PRECEDING = 57525
const FOLLOWING = 57526
const CUBE = 57527
const ROLLUP = 57528
const Op = 57529
const OPERATOR = 57530
const AT = 57531
const UMINUS = 57532
const TYPECAST = 57533

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SCONST",
	"IDENT",
	"CREATE",
	"ALTER",
	"ROLE",
	"DATABASE",
	"NATURAL",
	"TABLE",
	"INDEX",
	"SELECT",
	"UPDATE",
	"INSERT",
	"DELETE",
	"FROM",
	"WHERE",
	"AND",
	"VALUES",
	"OR",
	"EXPLAIN",
	"EXECUTE",
	"PREPARE",
	"BEGIN",
	"COMMIT",
	"ROLLBACK",
	"VACUUM",
	"CLUSTER",
	"ANALYZE",
	"INTO",
	"OUTER_P",
	"FULL",
	"RIGHT",
	"LEFT",
	"INNER_P",
	"DROP",
	"TRUNCATE",
	"FETCH",
	"FOR",
	"ORDER",
	"GROUP",
	"BY",
	"OFFSET",
	"LIMIT",
	"WINDOW",
	"CROSS",
	"SET",
	"RESET",
	"LOCAL",
	"ALL",
	"PRIMARY",
	"KEY",
	"FOREIGN",
	"REFERENCES",
	"USING",
	"TCOLON",
	"TCOMMA",
	"TOPENBR",
	"TCLOSEBR",
	"TSQOPENBR",
	"TSQCLOSEBR",
	"TSEMICOLON",
	"TNOT_EQUALS",
	"TDOT",
	"NULL_P",
	"ISNULL",
	"ON",
	"JOIN",
	"TPLUS",
	"TMINUS",
	"TMUL",
	"TDIV",
	"TGREATER",
	"TGREATER_EQUALS",
	"TLESS",
	"TLESS_EQUALS",
	"TMOD",
	"TPOW",
	"DELIMITERS",
	"PROGRAM",
	"STDIN",
	"FALSE_P",
	"TRUE_P",
	"copy_generic_opt_list",
	"BINARY",
	"FREEZE",
	"DELIMITER",
	"CSV",
	"HEADER_P",
	"QUOTE",
	"ESCAPE",
	"FORCE",
	"ENCODING",
	"TEQ",
	"OP",
	"ONLY",
	"RETURNING",
	"COPY",
	"ARRAY",
	"ROW",
	"SETOF",
	"INT_P",
	"INTEGER",
	"SMALLINT",
	"BIGINT",
	"REAL",
	"FLOAT_P",
	"DOUBLE_P",
	"DECIMAL_P",
	"DEC",
	"NUMERIC",
	"BOOLEAN_P",
	"BIT",
	"YEAR_P",
	"MONTH_P",
	"DAY_P",
	"HOUR_P",
	"MINUTE_P",
	"SECOND_P",
	"CHARACTER",
	"CHAR_P",
	"VARCHAR",
	"NATIONAL",
	"NCHAR",
	"PRECISION",
	"VARYING",
	"TIMESTAMP",
	"TIME",
	"INTERVAL",
	"WITHOUT",
	"ZONE",
	"IF_P",
	"DEALLOCATE",
	"EXISTS",
	"DELETE_P",
	"OIDS",
	"PRESERVE",
	"TABLESPACE",
	"PARAM",
	"IS",
	"NOT",
	"NULL",
	"DISTINCT",
	"DEFAULT",
	"NORMALIZED",
	"NOTNULL",
	"DOCUMENT_P",
	"ASYMMETRIC",
	"ASC",
	"DESC",
	"NULLS_LA",
	"FIRST_P",
	"LAST_P",
	"TO",
	"STDOUT",
	"TEMPORARY",
	"GLOBAL",
	"TEMP",
	"UNLOGGED",
	"LATERAL_P",
	"ORDINALITY",
	"WITH_LA",
	"WITH",
	"COLLATE",
	"AS",
	"DATA_P",
	"NO",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"BETWEEN",
	"IN_P",
	"LIKE",
	"ILIKE",
	"SIMILAR",
	"NOT_LA",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"CUBE",
	"ROLLUP",
	"Op",
	"OPERATOR",
	"AT",
	"UMINUS",
	"TYPECAST",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lyx/gram.y:2753

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 174,
	59, 209,
	-2, 376,
	-1, 309,
	59, 209,
	-2, 376,
	-1, 317,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 266,
	-1, 318,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 267,
	-1, 319,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 268,
	-1, 320,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 269,
	-1, 321,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 270,
	-1, 322,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 271,
	-1, 425,
	59, 376,
	-2, 90,
	-1, 525,
	67, 0,
	141, 0,
	147, 0,
	-2, 284,
	-1, 610,
	67, 0,
	141, 0,
	147, 0,
	-2, 285,
	-1, 611,
	172, 0,
	-2, 286,
	-1, 618,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 305,
	-1, 619,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 306,
	-1, 620,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 307,
	-1, 621,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 308,
	-1, 622,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 309,
	-1, 623,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 310,
	-1, 636,
	80, 464,
	-2, 526,
}

const yyPrivate = 57344

const yyLast = 1998

var yyAct = [...]int{

	170, 74, 719, 469, 754, 683, 298, 698, 250, 708,
	183, 76, 255, 679, 446, 420, 701, 650, 605, 593,
	464, 52, 552, 633, 600, 392, 470, 604, 53, 172,
	636, 301, 53, 53, 462, 450, 144, 145, 146, 147,
	148, 361, 422, 252, 554, 65, 68, 421, 151, 239,
	203, 231, 513, 70, 71, 371, 410, 397, 187, 188,
	189, 444, 162, 261, 305, 18, 262, 303, 21, 381,
	211, 20, 19, 53, 356, 244, 383, 201, 218, 302,
	219, 150, 196, 206, 207, 208, 209, 218, 717, 716,
	744, 210, 211, 755, 199, 713, 714, 67, 645, 364,
	259, 702, 425, 177, 681, 680, 684, 431, 482, 218,
	57, 58, 523, 55, 56, 193, 394, 194, 206, 207,
	208, 209, 492, 208, 209, 217, 210, 211, 222, 210,
	211, 206, 207, 208, 209, 213, 216, 212, 215, 210,
	211, 481, 770, 771, 218, 309, 752, 218, 393, 191,
	467, 192, 62, 637, 491, 490, 214, 218, 489, 472,
	395, 334, 761, 227, 228, 229, 365, 647, 571, 479,
	232, 570, 54, 205, 589, 588, 498, 240, 240, 497,
	398, 240, 205, 387, 382, 224, 577, 759, 402, 403,
	687, 240, 634, 391, 578, 579, 382, 581, 382, 306,
	487, 178, 221, 372, 205, 240, 746, 256, 223, 550,
	258, 151, 195, 742, 181, 311, 312, 313, 314, 315,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
	243, 638, 394, 224, 308, 555, 249, 345, 760, 205,
	254, 182, 205, 240, 707, 532, 349, 245, 602, 569,
	248, 509, 205, 247, 246, 439, 238, 241, 419, 60,
	63, 61, 64, 423, 393, 394, 54, 217, 153, 310,
	256, 367, 567, 206, 207, 208, 209, 213, 216, 212,
	215, 210, 211, 242, 297, 693, 341, 343, 468, 688,
	508, 689, 778, 39, 41, 40, 42, 393, 214, 218,
	253, 304, 23, 353, 424, 639, 236, 240, 407, 527,
	528, 529, 530, 396, 45, 692, 694, 531, 532, 338,
	529, 530, 355, 337, 671, 245, 531, 532, 248, 366,
	373, 247, 246, 777, 308, 368, 308, 573, 429, 783,
	653, 375, 359, 326, 575, 418, 452, 449, 451, 448,
	400, 401, 652, 459, 404, 388, 389, 390, 471, 484,
	329, 328, 665, 485, 704, 448, 234, 691, 473, 690,
	463, 428, 426, 763, 217, 224, 672, 222, 673, 43,
	206, 207, 208, 209, 213, 216, 212, 215, 210, 211,
	665, 682, 670, 764, 205, 572, 443, 376, 377, 378,
	379, 380, 382, 655, 592, 214, 218, 184, 665, 240,
	666, 590, 240, 432, 359, 460, 658, 457, 359, 327,
	585, 330, 587, 332, 519, 331, 476, 424, 586, 486,
	434, 433, 557, 483, 556, 517, 494, 576, 308, 517,
	507, 308, 546, 510, 547, 522, 474, 525, 475, 425,
	455, 221, 413, 415, 414, 416, 359, 223, 453, 454,
	502, 503, 369, 359, 370, 360, 358, 515, 516, 511,
	710, 551, 607, 563, 521, 545, 520, 560, 557, 53,
	240, 553, 224, 204, 500, 493, 399, 384, 512, 386,
	357, 435, 352, 437, 251, 436, 237, 235, 198, 724,
	564, 205, 204, 518, 443, 443, 474, 596, 597, 240,
	240, 635, 549, 240, 408, 339, 559, 558, 542, 606,
	465, 606, 712, 565, 548, 362, 642, 477, 562, 254,
	54, 54, 354, 610, 67, 611, 67, 505, 308, 308,
	598, 599, 308, 202, 603, 660, 626, 629, 608, 72,
	723, 625, 591, 661, 628, 506, 631, 406, 471, 632,
	580, 582, 583, 595, 463, 609, 514, 768, 176, 748,
	648, 685, 478, 456, 363, 644, 73, 200, 624, 643,
	69, 66, 448, 630, 640, 651, 299, 3, 524, 641,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 440, 240, 438, 179, 44, 39, 606, 190,
	663, 51, 54, 656, 67, 427, 657, 735, 256, 667,
	335, 166, 174, 186, 662, 46, 47, 48, 49, 50,
	775, 774, 308, 773, 664, 669, 675, 732, 733, 734,
	736, 737, 738, 739, 740, 741, 772, 720, 53, 762,
	730, 553, 654, 584, 574, 674, 501, 678, 676, 499,
	496, 495, 696, 488, 677, 180, 606, 697, 751, 686,
	699, 39, 41, 40, 42, 725, 161, 711, 561, 695,
	164, 705, 165, 167, 700, 703, 53, 441, 442, 233,
	333, 706, 175, 646, 566, 480, 1, 539, 540, 767,
	169, 168, 747, 448, 722, 448, 651, 715, 721, 718,
	440, 440, 659, 594, 256, 728, 729, 163, 173, 504,
	405, 336, 412, 230, 197, 749, 745, 260, 743, 270,
	264, 265, 750, 699, 385, 266, 753, 282, 283, 267,
	756, 284, 285, 757, 758, 413, 415, 414, 416, 766,
	769, 765, 291, 268, 269, 374, 417, 160, 461, 409,
	471, 59, 471, 776, 731, 779, 75, 709, 351, 544,
	781, 627, 350, 458, 649, 568, 171, 159, 149, 471,
	780, 411, 782, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 22, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 77, 78,
	99, 100, 107, 108, 158, 88, 106, 79, 80, 81,
	82, 83, 84, 85, 87, 86, 89, 90, 91, 92,
	93, 94, 101, 102, 103, 112, 307, 15, 14, 526,
	13, 104, 105, 116, 115, 109, 110, 111, 114, 113,
	12, 134, 95, 96, 97, 98, 126, 124, 125, 127,
	11, 120, 119, 117, 118, 17, 16, 6, 5, 4,
	8, 9, 138, 133, 129, 466, 128, 132, 430, 347,
	7, 10, 130, 131, 538, 300, 185, 137, 136, 2,
	527, 528, 529, 530, 534, 537, 533, 536, 531, 532,
	139, 121, 123, 0, 0, 0, 0, 140, 143, 0,
	0, 0, 141, 142, 0, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	668, 99, 100, 107, 108, 135, 88, 106, 79, 80,
	81, 82, 83, 84, 85, 87, 86, 89, 90, 91,
	92, 93, 94, 101, 102, 103, 112, 0, 0, 0,
	122, 0, 104, 105, 116, 115, 109, 110, 111, 114,
	113, 0, 134, 95, 96, 97, 98, 126, 124, 125,
	127, 0, 120, 119, 117, 118, 0, 412, 0, 0,
	0, 0, 0, 138, 133, 129, 0, 128, 132, 0,
	0, 0, 0, 130, 131, 0, 0, 0, 137, 136,
	413, 415, 414, 416, 0, 0, 0, 0, 0, 0,
	0, 139, 121, 123, 409, 0, 0, 0, 140, 143,
	0, 0, 0, 141, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 99, 100, 107, 108, 135, 88, 106, 79,
	80, 81, 82, 83, 84, 85, 87, 86, 89, 90,
	91, 92, 93, 94, 101, 102, 103, 112, 0, 0,
	0, 122, 0, 104, 105, 116, 115, 109, 110, 111,
	114, 113, 0, 134, 95, 96, 97, 98, 126, 124,
	125, 127, 0, 120, 119, 117, 118, 0, 0, 0,
	0, 0, 0, 0, 138, 133, 129, 0, 128, 132,
	0, 0, 0, 0, 130, 131, 0, 0, 0, 137,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 121, 123, 0, 0, 0, 0, 140,
	143, 0, 0, 0, 141, 142, 447, 99, 100, 107,
	108, 0, 88, 106, 79, 80, 81, 82, 83, 84,
	85, 87, 86, 89, 90, 91, 92, 93, 94, 101,
	102, 103, 112, 0, 0, 0, 0, 135, 104, 105,
	116, 115, 109, 110, 111, 114, 113, 0, 134, 95,
	96, 97, 98, 126, 124, 125, 127, 0, 120, 119,
	117, 118, 122, 0, 0, 0, 0, 0, 0, 138,
	133, 129, 0, 128, 132, 0, 0, 0, 0, 130,
	131, 0, 0, 0, 137, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 121, 123,
	0, 0, 0, 0, 140, 143, 0, 0, 0, 141,
	142, 447, 99, 100, 107, 108, 0, 88, 106, 79,
	80, 81, 82, 83, 84, 85, 87, 86, 89, 90,
	91, 92, 93, 94, 101, 102, 103, 112, 0, 0,
	0, 0, 135, 104, 105, 116, 115, 109, 110, 111,
	114, 113, 0, 134, 95, 96, 97, 98, 126, 124,
	125, 127, 0, 120, 119, 117, 118, 122, 219, 0,
	220, 0, 0, 0, 138, 133, 129, 0, 445, 132,
	0, 0, 0, 0, 130, 131, 0, 0, 0, 137,
	136, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 121, 123, 219, 0, 220, 0, 140,
	143, 0, 0, 217, 141, 142, 222, 0, 0, 206,
	207, 208, 209, 213, 216, 212, 215, 210, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 218, 0, 135, 0, 0,
	217, 0, 0, 222, 0, 0, 206, 207, 208, 209,
	213, 216, 212, 215, 210, 211, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 218, 0, 0, 0, 0, 0, 0, 0,
	221, 219, 0, 220, 0, 0, 223, 0, 0, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 221, 219, 0,
	220, 0, 543, 223, 0, 0, 217, 0, 0, 222,
	205, 0, 206, 207, 208, 209, 213, 216, 212, 215,
	210, 211, 225, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 218, 0,
	219, 541, 220, 217, 0, 0, 222, 205, 0, 206,
	207, 208, 209, 213, 216, 212, 215, 210, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 174,
	0, 0, 0, 0, 214, 218, 0, 0, 0, 0,
	0, 340, 0, 221, 0, 217, 0, 0, 222, 223,
	0, 206, 207, 208, 209, 213, 216, 212, 215, 210,
	211, 219, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 214, 218, 0, 0,
	221, 0, 0, 161, 346, 0, 223, 0, 166, 174,
	167, 0, 0, 205, 154, 155, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 169, 168, 222,
	0, 224, 206, 207, 208, 209, 213, 216, 212, 215,
	210, 211, 221, 0, 163, 173, 0, 0, 223, 0,
	205, 0, 0, 0, 0, 0, 0, 214, 218, 166,
	174, 0, 0, 161, 344, 0, 0, 0, 0, 0,
	167, 0, 0, 224, 154, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 156, 169, 168, 157,
	0, 0, 205, 0, 0, 166, 174, 0, 0, 0,
	0, 0, 0, 221, 163, 173, 0, 0, 0, 223,
	166, 174, 0, 0, 161, 0, 0, 342, 0, 0,
	0, 167, 0, 0, 0, 154, 155, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 169, 168,
	0, 0, 0, 0, 160, 0, 156, 0, 0, 157,
	161, 0, 0, 205, 0, 163, 173, 167, 0, 0,
	0, 154, 155, 152, 0, 161, 0, 0, 0, 0,
	0, 0, 167, 0, 169, 168, 154, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	168, 163, 173, 0, 0, 160, 289, 156, 0, 0,
	157, 0, 0, 0, 0, 0, 163, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 160, 0, 156, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 156, 28,
	38, 157, 0, 0, 0, 0, 39, 41, 40, 42,
	0, 0, 0, 0, 0, 23, 27, 31, 24, 25,
	26, 33, 34, 35, 0, 0, 0, 0, 0, 0,
	37, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 29, 30, 263, 271, 272, 273, 274, 275, 276,
	277, 278, 279, 280, 281, 290, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 296, 0, 0, 286,
	287, 288, 0, 0, 0, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 290, 0, 0, 0,
	0, 0, 43, 292, 293, 294, 295, 296, 0, 0,
	286, 287, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 32,
}
var yyPact = [...]int{

	1863, -1000, 251, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 251, 251,
	251, 251, 251, 280, -1000, -1000, -1000, 607, 102, 531,
	529, 607, 525, 804, 804, 804, 804, 804, 804, 1711,
	537, 104, 588, 155, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 348, -1000, -1000, 618, 804, 804, 804, 598,
	-1000, -1000, -8, -42, -1000, 117, 609, -1000, -1000, -1000,
	439, -1000, 526, -1000, -1000, 804, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 485,
	-1000, 1356, -1000, -1000, 1726, 1726, 1726, -1000, -1000, -1000,
	-1000, 1726, -1000, 305, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 438, 241, 437, 607, 607, -1000, 104,
	607, 658, -1000, -1000, 1726, 435, -1000, -1000, -1000, -1000,
	167, -1000, -1000, -1000, -1000, 1066, 115, -66, 1811, -1000,
	-1000, -1000, 1711, 568, 140, 1811, 1726, 1726, 1726, 1726,
	1726, 1726, 1726, 1726, 1726, 1726, 1726, 1726, 1726, 1726,
	1726, 277, -1000, -1000, 12, 615, -1000, 51, 51, 310,
	258, 457, 1521, -1000, 1675, 1624, 607, 1564, 433, -1000,
	238, 484, 607, 431, 406, -1000, -1000, -1000, -1000, 405,
	1582, 520, -67, 24, 431, -1000, -1000, -1000, 1066, 658,
	404, -1000, 103, 1842, -1000, -1000, -1000, -1000, -1000, 282,
	428, -1000, -1000, -1000, -1000, -1000, 430, 57, 428, 428,
	428, -1000, -1000, -1000, -1000, -1000, 134, 101, -1000, -1000,
	53, 427, 53, 53, -1000, 67, 53, -1000, 515, 1726,
	456, 712, 92, 97, 610, -1000, 140, -56, -1000, -1000,
	-1000, 51, 51, -9, -9, -9, -18, 13, 13, 13,
	13, 13, 13, 1582, 310, 61, -1000, 347, -1000, -1000,
	587, -1000, -1000, 617, -1000, -1000, -1000, 1276, 1726, 1726,
	-1000, 284, -1000, 398, -1000, -1000, -1000, 399, 390, 1582,
	553, 594, 607, 1171, 609, 464, 133, 607, 4, 1726,
	-1000, 388, 1811, 474, 549, 34, -23, -1000, -1000, 1811,
	-1000, 298, 302, 100, -1000, 659, 3, -1000, 0, -1,
	-33, -1000, 426, -1000, 1726, -1000, 657, -1000, -1000, -1000,
	-1000, 656, -1000, 50, 47, 655, -1000, 425, -1000, 652,
	-1000, -1000, 53, 53, -1000, 491, 512, 1582, 140, 221,
	182, 140, 419, 534, 534, 534, -1000, -1000, -1000, 609,
	-1000, -1000, -1000, 444, 417, -1000, 97, -1000, 385, 712,
	-1000, -50, -1000, -1000, -1000, 571, -1000, -1000, 1726, 820,
	-1000, 617, 617, -1000, -1000, -1000, -1000, -1000, -1000, 1479,
	461, 1442, -1000, -1000, -1000, -1000, 416, -1000, 384, -1000,
	-1000, 466, -1000, 114, 568, 609, 154, -1000, -1000, 374,
	-1000, -1000, 154, 1582, 520, 804, 476, 414, 607, 607,
	204, 112, 31, -1000, 333, 650, 298, 283, 377, 70,
	76, 78, 64, 649, 360, 368, 362, 43, 42, 351,
	1726, 344, -1000, -1000, 522, 804, 804, 712, 140, 140,
	987, 179, 140, -1000, -1000, -1000, -1000, -1000, 607, 413,
	607, -1000, 92, -1000, 1726, 203, 1726, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 248,
	248, -1000, 1726, -1000, 804, 1726, 607, -1000, 609, 568,
	1726, 94, -1000, 453, 149, -1000, -1000, 607, 149, 448,
	-1000, -1000, 473, 609, 348, -68, 28, 544, -1000, -1000,
	1171, -1000, -1000, 290, 278, 648, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 343, -1000, -1000, -15, -1000, -1000,
	-15, 356, -1000, 500, -1000, 510, -1000, -1000, -1000, 987,
	-1000, 1726, 140, -1000, 350, -1000, 935, 607, 332, -1000,
	203, 48, 248, 248, 166, 166, 166, -1000, 239, 239,
	239, 239, 239, 239, 262, 1582, -1000, 318, 1582, -1000,
	-1000, 94, 1582, -1000, 804, 609, 464, -1000, -1000, -1000,
	-1000, -59, -1000, 331, -58, 548, -1000, 607, 153, 309,
	-1000, 220, -1000, -1000, 254, -1000, -1000, -1000, -1000, 522,
	804, 1726, -1000, 1582, -1000, 607, -1000, -64, -64, 304,
	-1000, -1000, 1726, -1000, -1000, -1000, -1000, -59, 164, 411,
	-1000, -1000, 467, -1000, -72, 607, -1000, -1000, -92, -93,
	-1000, 1171, 643, 1171, -1000, 506, -1000, 441, -1000, 1319,
	-1000, -1000, 1066, -1000, -1000, 1582, 411, 646, -1000, 551,
	128, -1000, 609, -1000, -77, 348, -1000, -1000, -1000, -1000,
	-1000, 111, 530, 804, 1726, -6, -1000, -1000, -1000, 568,
	-1000, -1000, -1000, -1000, -73, -73, -1000, -1000, -73, -73,
	96, 645, 313, 334, -1000, -58, 643, 527, 804, -1000,
	-1000, -1000, -11, -1000, 642, -1000, 629, 627, 626, 261,
	226, 607, -1000, -1000, 609, -1000, -1000, -1000, 804, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 420, -1000, 607, 420,
	279, -1000, 420, -1000,
}
var yyPgo = [...]int{

	0, 889, 587, 15, 12, 886, 44, 6, 50, 885,
	881, 10, 880, 75, 31, 79, 64, 879, 878, 875,
	875, 47, 8, 268, 255, 11, 65, 72, 71, 68,
	871, 870, 869, 868, 867, 866, 865, 860, 850, 840,
	838, 837, 606, 16, 29, 67, 836, 814, 795, 81,
	795, 778, 777, 776, 51, 5, 0, 776, 776, 21,
	776, 776, 776, 776, 775, 774, 774, 773, 772, 771,
	769, 768, 3, 74, 768, 768, 767, 766, 26, 766,
	766, 764, 761, 9, 61, 14, 761, 49, 20, 22,
	758, 41, 103, 756, 42, 1, 34, 756, 18, 27,
	756, 69, 755, 25, 754, 753, 57, 752, 742, 741,
	741, 739, 738, 737, 737, 735, 734, 731, 76, 730,
	730, 66, 55, 63, 729, 727, 724, 723, 723, 35,
	721, 720, 719, 713, 712, 704, 702, 699, 696, 17,
	2, 43, 695, 694, 693, 692, 62, 690, 689, 682,
	680, 678, 677, 675, 668, 19, 667, 7, 52, 56,
	24, 667, 23, 667, 665, 665, 4, 13, 665, 665,
	30, 664,
}
var yyR1 = [...]int{

	0, 138, 42, 42, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 77,
	77, 77, 95, 95, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 5, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 123, 123, 123, 123, 123, 123,
	122, 122, 122, 121, 121, 121, 121, 121, 121, 121,
	120, 120, 120, 120, 124, 119, 118, 118, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 116,
	116, 115, 115, 114, 114, 113, 112, 64, 66, 66,
	65, 65, 139, 139, 139, 139, 140, 111, 111, 110,
	110, 109, 108, 107, 107, 107, 107, 107, 107, 106,
	106, 105, 105, 105, 105, 104, 103, 103, 103, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 101, 101, 82, 82, 82, 82, 82,
	82, 82, 82, 141, 55, 55, 55, 43, 43, 145,
	100, 100, 99, 99, 98, 98, 44, 44, 44, 17,
	20, 20, 47, 47, 47, 47, 146, 54, 54, 147,
	147, 125, 125, 148, 148, 149, 149, 150, 130, 130,
	130, 130, 129, 129, 128, 128, 127, 127, 23, 23,
	23, 23, 23, 23, 23, 23, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 53, 52, 52, 57, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 7, 7, 50, 50, 51, 51, 49, 49,
	49, 49, 31, 31, 31, 31, 32, 33, 34, 2,
	2, 2, 2, 2, 2, 151, 151, 152, 152, 91,
	91, 91, 35, 35, 35, 35, 36, 37, 38, 39,
	41, 40, 153, 153, 153, 154, 154, 154, 155, 155,
	133, 156, 156, 157, 131, 131, 132, 132, 134, 134,
	135, 135, 136, 136, 137, 137, 56, 124, 58, 85,
	85, 87, 87, 8, 8, 9, 9, 15, 94, 94,
	93, 93, 46, 18, 18, 21, 21, 21, 21, 21,
	45, 14, 14, 14, 14, 14, 158, 158, 159, 159,
	159, 159, 160, 16, 16, 16, 16, 16, 16, 26,
	26, 67, 67, 161, 161, 68, 73, 73, 78, 72,
	72, 71, 71, 69, 69, 70, 162, 162, 30, 126,
	126, 13, 13, 13, 13, 12, 12, 12, 11, 11,
	10, 10, 10, 10, 27, 27, 92, 92, 90, 90,
	96, 28, 89, 89, 88, 88, 29, 163, 163, 163,
	163, 164, 164, 74, 74, 79, 165, 165, 165, 165,
	75, 75, 80, 83, 83, 76, 76, 166, 166, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 19, 19, 6, 6, 167, 167, 167, 142,
	142, 142, 142, 143, 143, 143, 143, 144, 144, 168,
	168, 169, 170, 170, 170, 171, 171, 48, 48, 63,
	63, 59, 60, 61, 84, 62, 86,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 5, 6, 2, 3,
	3, 4, 0, 1, 1, 1, 1, 1, 2, 4,
	1, 1, 1, 1, 1, 2, 3, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 1, 1, 1, 1, 5, 2, 3, 2, 0,
	1, 3, 3, 1, 5, 3, 1, 1, 1, 1,
	1, 4, 1, 2, 2, 1, 3, 3, 2, 1,
	0, 5, 2, 5, 2, 1, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 1, 4, 1, 1, 2, 2, 2,
	2, 1, 0, 5, 2, 3, 0, 2, 0, 1,
	1, 0, 1, 3, 3, 3, 3, 4, 4, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 1,
	0, 1, 3, 3, 2, 4, 3, 5, 2, 2,
	3, 5, 1, 0, 1, 2, 0, 2, 1, 1,
	2, 3, 1, 2, 1, 1, 1, 3, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 2, 4, 2,
	3, 4, 3, 4, 5, 6, 6, 3, 4, 3,
	4, 1, 3, 1, 1, 1, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 4, 5, 2, 2, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 0, 2, 0, 5, 3,
	6, 3, 7, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 2, 0, 1, 0,
	3, 1, 3, 3, 0, 3, 0, 2, 0, 2,
	0, 2, 0, 2, 0, 2, 1, 1, 1, 1,
	1, 1, 3, 2, 0, 1, 3, 1, 2, 1,
	0, 1, 1, 2, 0, 1, 4, 5, 4, 0,
	2, 2, 2, 3, 1, 4, 1, 0, 2, 2,
	2, 1, 2, 3, 4, 5, 4, 5, 4, 12,
	2, 1, 3, 0, 1, 3, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 0, 2, 5, 3,
	0, 1, 1, 1, 1, 3, 9, 12, 3, 0,
	2, 3, 2, 3, 7, 5, 0, 1, 1, 3,
	3, 8, 1, 3, 0, 2, 7, 1, 1, 1,
	1, 1, 0, 1, 3, 2, 1, 1, 3, 0,
	1, 3, 1, 1, 3, 2, 0, 1, 0, 1,
	1, 3, 3, 1, 1, 3, 3, 3, 3, 4,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 2,
	2, 2, 0, 3, 4, 4, 0, 2, 0, 4,
	0, 3, 1, 1, 1, 3, 0, 11, 9, 1,
	3, 1, 1, 1, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -138, -1, -2, -32, -33, -34, -12, -31, -30,
	-10, -37, -38, -39, -40, -41, -35, -36, -26, -27,
	-28, -29, -48, 22, 25, 26, 27, 23, 6, 48,
	49, 24, 134, 28, 29, 30, 38, 37, 7, 13,
	15, 14, 16, 99, -42, 63, -42, -42, -42, -42,
	-42, -2, -59, -56, 5, 11, 12, 8, 9, -82,
	157, 159, 50, 158, 160, -3, 50, 5, -3, 51,
	-59, -59, 24, 51, -95, -77, -25, 4, 5, 13,
	14, 15, 16, 17, 18, 19, 21, 20, 11, 22,
	23, 24, 25, 26, 27, 48, 49, 50, 51, 6,
	7, 28, 29, 30, 37, 38, 12, 8, 9, 41,
	42, 43, 31, 45, 44, 40, 39, 59, 60, 58,
	57, 97, 166, 98, 53, 54, 52, 55, 72, 70,
	78, 79, 73, 69, 47, 141, 84, 83, 68, 96,
	103, 108, 109, 104, -95, -95, -95, -95, -95, -51,
	-49, -22, 72, -23, 70, 71, 142, 145, -47, -52,
	140, 59, -146, 100, -150, -149, 4, 66, 84, 83,
	-56, -53, -44, 101, 5, -145, 31, -92, 97, 17,
	-164, 59, 86, -11, 59, -5, 5, -95, -95, -95,
	11, 157, 159, 157, 159, 95, -3, -126, 59, -59,
	51, -95, 58, -8, 17, 191, 70, 71, 72, 73,
	78, 79, 76, 74, 95, 77, 75, 64, 96, 19,
	21, 141, 67, 147, 172, 166, 5, -22, -22, -22,
	-127, -54, -22, -148, 61, 59, 65, 59, -15, -87,
	-56, -15, -92, -87, -13, -26, -27, -28, -29, -54,
	-22, 59, -141, 133, -87, -4, -25, 4, 95, 166,
	-125, -123, -121, 102, -119, -117, -115, -111, -105, -104,
	-124, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, -113, -112, -109, -108, 128, 129, 130, 5,
	114, -107, 121, 122, 123, 124, 125, -49, -7, 18,
	-9, -14, -15, -45, 161, -16, 59, -46, -44, 5,
	-123, -22, -22, -22, -22, -22, -22, -22, -22, -22,
	-22, -22, -22, -22, -22, -22, 66, 142, 84, 83,
	144, 148, 146, -147, 149, 5, -130, 65, 61, 58,
	60, -54, 62, -54, 60, -56, 60, -17, 72, -22,
	-68, -71, 59, 65, 48, -15, -73, 59, 60, 58,
	60, -91, 5, 54, 166, 142, -73, -4, -13, 58,
	60, -122, 100, -121, -102, 59, 115, 116, 117, 118,
	119, -101, 120, -118, 59, -116, 59, 126, -118, -118,
	-118, 59, -103, 163, 131, 59, -103, -106, 127, 59,
	-106, -106, 121, 122, -106, -131, 42, -22, 58, 47,
	-159, 69, 10, 33, 35, 34, 36, -93, -94, 166,
	-3, -21, -94, 166, -56, 5, -45, 5, -16, -14,
	-18, 163, 66, 84, 83, 144, 148, 146, 17, -24,
	-23, 70, 71, -146, -84, 72, -85, 5, -25, -22,
	-129, -22, 62, 60, 60, 60, 20, -26, -67, -56,
	-84, -90, -96, -3, -88, 56, -19, 17, 155, -72,
	-78, -56, 155, -22, 58, 60, -123, 53, 23, 135,
	-142, 164, 131, -123, 61, 61, -122, 100, 4, 155,
	155, 155, 155, 59, -54, 4, 4, 129, 129, 4,
	59, 4, -106, -106, -132, 46, 43, -14, 69, 69,
	-14, -159, 69, -158, 32, -158, -158, -3, 59, -56,
	59, -21, 60, 162, 17, -22, 19, 70, 71, 72,
	73, 78, 79, 76, 74, 95, 77, 75, 64, -24,
	-24, 62, 57, 60, -70, 59, 58, 60, 58, -8,
	95, -7, -89, -3, -6, 81, 60, 58, -6, -91,
	-95, -151, 52, 59, -59, -141, -143, 68, -64, 137,
	59, 137, 62, 4, 4, 61, 60, 116, 118, 119,
	-101, 119, -101, -101, 4, 60, 60, 60, 132, 132,
	60, -54, 60, -155, -133, 41, -95, -95, -14, -14,
	-160, 68, 69, -14, -99, -98, -56, 59, -99, -94,
	-22, -22, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -129, -22, -95, -69, -22, -56,
	-96, -7, -22, -162, 98, 58, -170, 4, 82, 156,
	-78, -170, 53, -3, -11, 166, -144, 139, 26, -65,
	-139, -85, 62, 62, 4, 60, -103, -103, 60, -134,
	45, 43, -160, -22, -14, 58, 60, -4, 5, -99,
	60, 62, 58, 60, -162, -95, -89, -171, -88, -167,
	164, 163, 60, -55, 164, 23, -59, 37, 136, 138,
	60, 58, 95, 65, 62, -155, -95, -156, -157, -22,
	-98, -43, 165, -43, 60, -22, -167, 80, -83, -76,
	59, -152, 55, 167, 168, -59, 181, 181, -139, -140,
	4, -85, -135, 44, 58, -153, 150, 151, -4, -83,
	4, -81, 86, 87, 88, 66, 89, 90, 91, 92,
	93, 94, 85, -3, 167, -11, 95, -136, 39, -95,
	-157, -154, 152, -7, -166, 166, -166, -166, -166, 91,
	142, 66, 4, 60, 59, -55, -140, -137, 40, -95,
	153, 154, 4, 4, 4, 4, -72, 72, 66, -72,
	-3, -95, -72, 60,
}
var yyDef = [...]int{

	74, -2, 2, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 2, 2,
	2, 2, 2, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 72, 72, 72, 72, 72, 72, 0,
	0, 456, 0, 472, 1, 3, 329, 330, 331, 332,
	333, 334, 449, 531, 376, 0, 72, 72, 72, 0,
	195, 196, 0, 0, 201, 0, 0, 90, 324, 325,
	440, 450, 0, 452, 347, 72, 69, 70, 71, 4,
	5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
	35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
	45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 348, 349, 351, 350, 346, 384,
	316, 320, 321, 256, 0, 0, 0, 291, 248, 249,
	246, 0, 252, 0, 254, 255, 222, 223, 224, 225,
	293, 294, 226, 0, -2, 0, 0, 0, 457, 456,
	0, 0, 471, 445, 0, 0, 93, 343, 344, 345,
	0, 197, 198, 199, 200, 0, 0, 0, 0, 451,
	453, 73, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 230, 0, 319, 258, 259, 275,
	250, 0, 227, 253, 0, 0, 0, 0, 431, 387,
	381, 0, 0, 427, 0, 441, 442, 443, 444, 0,
	227, 0, 0, 0, 427, 322, 91, 92, 0, 0,
	0, 231, 112, 0, 113, 114, 115, 116, 117, 192,
	127, 128, 129, 130, 131, 132, 140, 0, 127, 127,
	127, 138, 141, 142, 157, 158, 178, 178, 175, 124,
	170, 162, 170, 170, 165, 0, 170, 317, 364, 0,
	383, 385, 390, 399, 0, 404, 0, 394, 392, -2,
	257, 260, 261, 262, 263, 264, 265, -2, -2, -2,
	-2, -2, -2, 272, 273, 274, 276, 0, 280, 282,
	0, 287, 289, 0, 229, 318, 247, 0, 243, 0,
	251, 0, 234, 0, 236, 292, 216, 0, 0, 219,
	432, 0, 0, 0, 0, 464, 0, 0, 0, 0,
	448, 0, 0, 0, 0, 0, 512, 323, 438, 0,
	439, 104, 108, 112, 118, 0, 179, 180, 181, 182,
	183, 184, 193, 125, 0, 133, 0, 134, 135, 136,
	137, 0, 172, 0, 0, 0, 174, 146, 169, 0,
	163, 164, 170, 170, 168, 366, 0, 313, 0, 0,
	0, 0, 0, 407, 407, 407, 411, 401, 391, 0,
	389, 402, 395, 0, 0, -2, 399, 209, 404, 0,
	400, 0, 278, 281, 283, 0, 288, 290, 0, 0,
	296, 0, 0, 252, 238, 53, 534, 379, 380, 242,
	0, 228, 233, 235, 217, 218, 0, 455, 0, 421,
	382, 384, 458, 0, 312, 0, 505, 502, 503, 0,
	429, 428, 505, 228, 0, 72, 335, 0, 0, 0,
	516, 0, 0, 232, 0, 0, 105, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 359, 72, 72, 386, 0, 0,
	0, 0, 0, 408, 406, 409, 410, 388, 0, 0,
	0, 403, 413, 393, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 240, 243, 237, 72, 0, 0, 425, 0, 312,
	0, 436, 465, 462, 0, 504, 426, 0, 0, 341,
	342, 339, 0, 0, 449, 0, 518, 0, 509, 510,
	0, 511, 110, 0, 0, 0, 119, 185, 186, 187,
	188, 189, 190, 191, 0, 126, 139, 178, 176, 177,
	178, 0, 161, 368, 358, 0, 367, 365, 414, 0,
	416, 0, 0, 418, 0, 212, 0, 0, 0, 405,
	-2, -2, 299, 300, 301, 302, 303, 304, -2, -2,
	-2, -2, -2, -2, 0, 242, 454, 0, 433, 422,
	459, 436, 460, 466, 72, 0, -2, 522, 523, 524,
	430, 508, 336, 0, 206, 0, 203, 0, 0, 0,
	150, 153, 111, 106, 0, 194, 171, 173, 145, 359,
	72, 0, 415, 412, 417, 0, 396, 208, 208, 0,
	398, 241, 0, 435, 461, 437, 463, 508, 0, 486,
	506, 507, 337, 446, 0, 0, 517, 513, 0, 0,
	147, 0, 0, 0, 107, 370, 369, 360, 361, 354,
	213, 214, 0, 215, 397, 434, 486, 0, 528, 483,
	0, 340, 0, 204, 0, 449, 514, 515, 151, 152,
	156, 155, 372, 72, 0, 357, 352, 353, 207, 312,
	525, 485, 489, 490, 488, 488, 493, 494, 488, 488,
	0, 0, 0, 0, 205, 206, 0, 374, 72, 371,
	362, 363, 0, 527, 0, 487, 0, 0, 0, 0,
	0, 0, 501, 484, 0, 447, 154, 419, 72, 373,
	355, 356, 491, 492, 495, 496, 497, 498, 0, 500,
	0, 375, 499, 338,
}
var yyTok1 = [...]int{

	1,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:396
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:397
		{

		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:404
		{
			yyVAL.str = yyDollar[1].str
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:405
		{
			yyVAL.str = yyDollar[1].str
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:406
		{
			yyVAL.str = yyDollar[1].str
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:407
		{
			yyVAL.str = yyDollar[1].str
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:409
		{
			yyVAL.str = yyDollar[1].str
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:410
		{
			yyVAL.str = yyDollar[1].str
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:411
		{
			yyVAL.str = yyDollar[1].str
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:412
		{
			yyVAL.str = yyDollar[1].str
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:413
		{
			yyVAL.str = yyDollar[1].str
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:414
		{
			yyVAL.str = yyDollar[1].str
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:415
		{
			yyVAL.str = yyDollar[1].str
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:416
		{
			yyVAL.str = yyDollar[1].str
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:417
		{
			yyVAL.str = yyDollar[1].str
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:418
		{
			yyVAL.str = yyDollar[1].str
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:419
		{
			yyVAL.str = yyDollar[1].str
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:420
		{
			yyVAL.str = yyDollar[1].str
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:421
		{
			yyVAL.str = yyDollar[1].str
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:422
		{
			yyVAL.str = yyDollar[1].str
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:423
		{
			yyVAL.str = yyDollar[1].str
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:424
		{
			yyVAL.str = yyDollar[1].str
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:426
		{
			yyVAL.str = yyDollar[1].str
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:427
		{
			yyVAL.str = yyDollar[1].str
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:428
		{
			yyVAL.str = yyDollar[1].str
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:429
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:430
		{
			yyVAL.str = yyDollar[1].str
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:431
		{
			yyVAL.str = yyDollar[1].str
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:432
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:433
		{
			yyVAL.str = yyDollar[1].str
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:434
		{
			yyVAL.str = yyDollar[1].str
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:435
		{
			yyVAL.str = yyDollar[1].str
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:436
		{
			yyVAL.str = yyDollar[1].str
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:437
		{
			yyVAL.str = yyDollar[1].str
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:438
		{
			yyVAL.str = yyDollar[1].str
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:446
		{
			yyVAL.str = yyDollar[1].str
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:450
		{
			yyVAL.str = yyDollar[1].str
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:455
		{
			yyVAL.str = yyDollar[1].str
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:456
		{
			yyVAL.str = yyDollar[1].str
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:457
		{
			yyVAL.str = yyDollar[1].str
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:458
		{
			yyVAL.str = yyDollar[1].str
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:459
		{
			yyVAL.str = yyDollar[1].str
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:460
		{
			yyVAL.str = yyDollar[1].str
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:461
		{
			yyVAL.str = yyDollar[1].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:462
		{
			yyVAL.str = yyDollar[1].str
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:465
		{
			yyVAL.str = yyDollar[1].str
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:466
		{
			yyVAL.str = yyDollar[1].str
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:474
		{
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:475
		{
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:481
		{
			yyVAL.node = nil
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:483
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:485
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:487
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:489
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:491
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:493
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:495
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:497
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:499
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:501
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:503
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:505
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:507
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:509
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:511
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:522
		{
			yyVAL.str = yyDollar[1].str
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:532
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:537
		{
			yyVAL.str = yyDollar[1].str
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:539
		{
			yyVAL.str = "AND"
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:541
		{
			yyVAL.str = "OR"
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:543
		{
			yyVAL.str = "!="
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:545
		{
			yyVAL.str = "="
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:547
		{
			yyVAL.str = "<"
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:549
		{
			yyVAL.str = ">"
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:551
		{
			yyVAL.str = ">="
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:553
		{
			yyVAL.str = "<="
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:555
		{
			yyVAL.str = yyDollar[1].str
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:571
		{
			yyVAL.str = yyDollar[1].str
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:575
		{
			yyVAL.str = yyDollar[2].str
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:580
		{
			yyVAL.str = yyDollar[1].str
		}
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:584
		{
			yyVAL.str = yyDollar[2].str
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:588
		{

			yyVAL.str = yyDollar[1].str
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:593
		{
			yyVAL.str = yyDollar[2].str
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:601
		{
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:603
		{
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:605
		{
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:609
		{
			yyVAL.str = yyDollar[1].str
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:611
		{
			yyVAL.str = yyDollar[1].str
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:613
		{
			yyVAL.str = yyDollar[1].str
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:615
		{
			yyVAL.str = yyDollar[1].str
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:617
		{
			yyVAL.str = yyDollar[1].str
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:620
		{

		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:624
		{

		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:640
		{
			yyVAL.str = yyDollar[1].str
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:641
		{
			yyVAL.str = yyDollar[1].str
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:642
		{
			yyVAL.str = yyDollar[1].str
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:643
		{
			yyVAL.str = yyDollar[1].str
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:647
		{
			yyVAL.str = yyDollar[1].str
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:660
		{

			yyVAL.str = yyDollar[1].str
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:669
		{
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:670
		{
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:677
		{

			yyVAL.str = yyDollar[1].str
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:682
		{
			yyVAL.str = yyDollar[1].str
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:686
		{
			yyVAL.str = yyDollar[1].str
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:690
		{
			yyVAL.str = yyDollar[1].str
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:694
		{
			yyVAL.str = yyDollar[1].str
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:698
		{
			yyVAL.str = yyDollar[1].str
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:702
		{
			yyVAL.str = yyDollar[1].str
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:706
		{
			yyVAL.str = yyDollar[1].str
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:710
		{
			yyVAL.str = yyDollar[1].str
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:714
		{
			yyVAL.str = yyDollar[1].str
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:718
		{
			yyVAL.str = yyDollar[1].str
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:724
		{
			/*
			 * Check FLOAT() precision limits assuming IEEE floating
			 * types - thomas 1997-09-18
			 */

		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:732
		{
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:741
		{
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:744
		{
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:751
		{
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:754
		{
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:760
		{

		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:767
		{
			/* bit defaults to bit(1), varbit to no limit */

		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:776
		{
			yyVAL.str = yyDollar[2].str
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:779
		{
			yyVAL.str = yyDollar[2].str
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:780
		{
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:784
		{
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:785
		{
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:791
		{

		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:795
		{
		}
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:798
		{
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:801
		{
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:812
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:823
		{
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:826
		{
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:831
		{
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:834
		{
			/* Length was not specified so allow to be unrestricted.
			 * This handles problems with fixed-length (bpchar) strings
			 * which in column definitions must default to a length
			 * of one, but should not be constrained if the length
			 * was not specified.
			 */

		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:847
		{

		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:853
		{
			/* char defaults to char(1), varchar to no limit */

		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:861
		{
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:863
		{
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:865
		{
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:867
		{
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:869
		{
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:871
		{
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:875
		{
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:876
		{
		}
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:885
		{

		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:889
		{

		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:893
		{

		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:897
		{

		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:905
		{

		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:911
		{
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:912
		{
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:913
		{
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:918
		{
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:920
		{
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:922
		{
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:924
		{
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:926
		{
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:928
		{
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:930
		{

		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:934
		{

		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:938
		{

		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:942
		{

		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:946
		{

		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:950
		{

		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:954
		{

		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:958
		{
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:963
		{
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:966
		{
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:983
		{
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:984
		{
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:985
		{
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:986
		{
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:988
		{
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:991
		{
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:993
		{
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:994
		{
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1001
		{

		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1007
		{
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1008
		{
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1009
		{
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1037
		{

		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1040
		{
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1048
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1049
		{
			yyVAL.strlist = nil
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1054
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1058
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1064
		{
			yyVAL.str = yyDollar[1].str
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1068
		{
			yyVAL.str = yyDollar[1].str
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1076
		{
			yyVAL.node = nil
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1079
		{
			yyVAL.node = nil
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1083
		{
			yyVAL.node = nil
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1087
		{
			yyVAL.node = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1092
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1096
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1104
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1108
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1112
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1116
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1125
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1129
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1138
		{
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1139
		{
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1143
		{

		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1151
		{

		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1156
		{
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1157
		{
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1161
		{
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1167
		{
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1170
		{
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1173
		{

		}
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1177
		{

		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1183
		{
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1184
		{
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1188
		{
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1189
		{
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1193
		{
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1194
		{
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1216
		{
			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1217
		{
			yyVAL.node = yyDollar[1].node
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1221
		{
			yyVAL.node = &ParamRef{
				Number: yyDollar[1].int,
			}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1226
		{
			yyVAL.node = yyDollar[2].node
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1229
		{
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1231
		{
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1233
		{
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1234
		{
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1237
		{
			yyVAL.node = yyDollar[1].node
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1239
		{
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1267
		{
			yyVAL.node = yyDollar[2].node
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1269
		{
			yyVAL.node = yyDollar[2].node
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1271
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1279
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1287
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1295
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1303
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1311
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1319
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1327
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1335
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1343
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1351
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1359
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1368
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1381
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1389
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1397
		{
			yyVAL.node = yyDollar[2].node
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1507
		{
			yyVAL.node = yyDollar[1].node
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1509
		{
			yyVAL.node = yyDollar[1].node
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1511
		{
			yyVAL.node = yyDollar[1].node
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1513
		{
			yyVAL.node = yyDollar[1].node
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1532
		{
			yyVAL.node = yyDollar[1].node
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1534
		{
			yyVAL.node = yyDollar[1].node
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1536
		{
			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1538
		{
			yyVAL.node = yyDollar[1].node
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1558
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[5].node,
				Op:    yyDollar[3].str,
			}
		}
	case 285:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1566
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[6].node,
				Op:    yyDollar[3].str,
			}
		}
	case 286:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1574
		{
			yyVAL.node = &AExprOp{
				Left: yyDollar[1].node,
				Right: &AExprList{
					List: []Node{
						yyDollar[4].node,
						yyDollar[6].node,
					},
				},
				Op: "BETWEEN",
			}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1690
		{
			yyVAL.node = yyDollar[1].node
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1692
		{
			yyVAL.node = yyDollar[1].node
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1694
		{
			yyVAL.node = yyDollar[1].node
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1698
		{
			yyVAL.node = yyDollar[1].node
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1708
		{
			/*
			 * The SQL spec only allows DEFAULT in "contextually typed
			 * expressions", but for us, it's easier to allow it in
			 * any a_expr and then throw error during parse analysis
			 * if it's in an inappropriate context.  This way also
			 * lets us say something smarter than "syntax error".
			 */

		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1722
		{
			yyVAL.node = &ColumnRef{
				ColName:    yyDollar[3].str,
				TableAlias: yyDollar[1].str,
			}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1730
		{
			yyVAL.node = &ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1734
		{
			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1739
		{
			yyVAL.str = yyDollar[1].str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1752
		{
			yyVAL.node = yyDollar[1].node
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1754
		{
			yyVAL.node = yyDollar[2].node
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1756
		{
			yyVAL.node = yyDollar[2].node
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1758
		{ /* result not matter */
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1760
		{ /* result not matter */
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1762
		{ /* result not matter */
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1764
		{ /* result not matter */
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1766
		{ /* result not matter */
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1768
		{ /* result not matter */
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1770
		{ /* result not matter */
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1772
		{ /* result not matter */
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1774
		{ /* result not matter */
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1776
		{ /* result not matter */
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1778
		{ /* result not matter */
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1780
		{ /* result not matter */
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1781
		{ /* result not matter */
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1786
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1790
		{
			yyVAL.node = yyDollar[2].node
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1795
		{
			yyVAL.nodeList = yyDollar[1].nodeList
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1796
		{
			yyVAL.nodeList = nil
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1800
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1801
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1805
		{
			yyVAL.node = yyDollar[1].node
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1809
		{
			yyVAL.node = yyDollar[1].node
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1813
		{
			yyVAL.node = yyDollar[1].node
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1817
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1824
		{
			yyVAL.node = &VarSet{
				Name:  yyDollar[2].str,
				Value: yyDollar[4].str,
			}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1830
		{
			yyVAL.node = &VarSet{
				IsLocal: true,
				Name:    yyDollar[3].str,
				Value:   yyDollar[5].str,
			}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1837
		{
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1838
		{
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1843
		{
			yyVAL.node = &Begin{}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1852
		{
			yyVAL.node = &Commit{}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1861
		{
			yyVAL.node = &Rollback{}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1868
		{
			yyVAL.node = yyDollar[1].node
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1870
		{
			yyVAL.node = yyDollar[1].node
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1872
		{
			yyVAL.node = yyDollar[1].node
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1874
		{
			yyVAL.node = yyDollar[1].node
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1876
		{
			yyVAL.node = yyDollar[1].node
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1878
		{
			yyVAL.node = &Explain{
				Stmt: yyDollar[2].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1885
		{
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1886
		{
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1889
		{
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1890
		{
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1893
		{
			yyVAL.tableelt = []TableElt{{
				ColName: yyDollar[1].str,
				ColType: yyDollar[2].str,
			},
			}
		}
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1900
		{
			yyVAL.tableelt = nil
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1903
		{
			yyVAL.tableelt = append(yyDollar[1].tableelt, yyDollar[3].tableelt...)
		}
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1908
		{
			yyVAL.node = &CreateTable{
				TableName: yyDollar[3].str,
				TableElts: yyDollar[5].tableelt,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1913
		{
			yyVAL.node = &Index{}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1917
		{
			yyVAL.node = &CreateRole{}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1921
		{
			yyVAL.node = &CreateDatabase{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1928
		{
			yyVAL.node = &Alter{}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1935
		{
			yyVAL.node = &Vacuum{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1942
		{
			yyVAL.node = &Cluster{}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1950
		{
			yyVAL.node = &Analyze{}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1957
		{
			yyVAL.node = &Drop{}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1965
		{
			yyVAL.node = &Truncate{}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1973
		{
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1974
		{
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1975
		{
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1979
		{
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1980
		{
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1981
		{
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1987
		{
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1988
		{
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1992
		{
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1996
		{
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1997
		{
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2006
		{
			/* no operator */
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2013
		{
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2013
		{
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2014
		{
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2014
		{
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2015
		{
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2015
		{
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2016
		{
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2016
		{
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2017
		{
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2017
		{
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2018
		{
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2018
		{
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2033
		{
			yyVAL.str = yyDollar[1].str
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2040
		{
			yyVAL.str = yyDollar[1].str
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2047
		{
			yyVAL.str = yyDollar[1].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2056
		{
			yyVAL.str = yyDollar[1].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2060
		{
			yyVAL.str = yyDollar[1].str
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2071
		{
			yyVAL.from = &RangeVar{
				SchemaName:   "",
				RelationName: yyDollar[1].str,
				Alias:        "",
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2079
		{
			yyVAL.from = &RangeVar{
				SchemaName:   yyDollar[1].str,
				RelationName: yyDollar[3].str,
				Alias:        "",
			}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2094
		{
			yyVAL.from_list = yyDollar[2].from_list
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2095
		{
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2099
		{
			yyVAL.from_list = []FromClauseNode{yyDollar[1].from}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2100
		{
			yyVAL.from_list = append(yyDollar[1].from_list, yyDollar[3].from)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2105
		{
			/* inheritance query, implicitly */
			yyVAL.tableref = yyDollar[1].from
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2116
		{
			yyVAL.str = yyDollar[2].str
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2120
		{
			yyVAL.str = yyDollar[1].str
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2126
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2137
		{
			yyVAL.node = yyDollar[1].node
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2142
		{
			yyVAL.bool = true
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2143
		{
			yyVAL.bool = false
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2154
		{
			yyVAL.node = nil
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2158
		{
			yyVAL.node = nil
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2162
		{

		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2166
		{

		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2170
		{
			yyVAL.node = nil
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2188
		{
			yyVAL.node = yyDollar[1].node
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2196
		{
			yyDollar[1].tableref.SetAlias(yyDollar[2].str)
			yyVAL.from = yyDollar[1].tableref
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2201
		{

		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2205
		{

		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2209
		{
			yyVAL.from = yyDollar[1].tableref
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2213
		{
			yyDollar[2].tableref.SetAlias(yyDollar[4].str)
			yyVAL.from = yyDollar[2].tableref
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2221
		{
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2222
		{
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2226
		{
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2227
		{
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2228
		{
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2229
		{
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2240
		{

		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2248
		{
			yyVAL.tableref = yyDollar[2].tableref
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2252
		{
			/* CROSS JOIN is same as unqualified inner join */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2260
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2267
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[3].from,
			}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2275
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[5].from,
			}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2282
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 419:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lyx/gram.y:2297
		{
			yyVAL.node = &Select{
				FromClause: yyDollar[3].from_list,
				Where:      yyDollar[4].node,
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2303
		{
			yyVAL.node = &Select{
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2311
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2312
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2317
		{
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2317
		{
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2320
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2326
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2327
		{
			yyVAL.strlist = nil
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2332
		{
			yyVAL.str = yyDollar[1].str
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2338
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2339
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2344
		{
			yyVAL.strlist = nil
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2347
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2355
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2357
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2362
		{
			yyVAL.nodeList = yyDollar[2].nodeList
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2368
		{
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2369
		{
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2380
		{

			yyVAL.node = &PrepareStmt{
				Name:      yyDollar[2].str,
				Statement: yyDollar[5].node,
			}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2389
		{
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2390
		{
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2408
		{
			yyVAL.node = &ExecuteStmt{
				Name: yyDollar[2].str,
			}
		}
	case 446:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lyx/gram.y:2415
		{
		}
	case 447:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lyx/gram.y:2419
		{

		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2424
		{
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2425
		{
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2436
		{
			yyVAL.node = &DeallocateStmt{
				yyDollar[2].str,
			}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2442
		{
			yyVAL.node = &DeallocateStmt{
				yyDollar[3].str,
			}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2448
		{
			yyVAL.node = &DeallocateStmt{}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2453
		{
			yyVAL.node = &DeallocateStmt{}
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:2464
		{
			yyVAL.node = &Insert{
				TableRef: yyDollar[3].tableref,
				Columns:  yyDollar[4].strlist,
				Values:   yyDollar[6].nodeList,
			}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2470
		{
			yyVAL.node = &Insert{
				TableRef:  yyDollar[3].tableref,
				Columns:   yyDollar[4].strlist,
				SubSelect: yyDollar[5].node,
			}
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2479
		{
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2480
		{
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2486
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2487
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2492
		{
			yyVAL.str = yyDollar[1].str
		}
	case 461:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lyx/gram.y:2502
		{
			yyVAL.node = &Update{
				TableRef: yyDollar[3].tableref,
				Where:    yyDollar[7].node,
			}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2513
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2514
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2519
		{
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2520
		{
		}
	case 466:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:2524
		{
			yyVAL.node = &Delete{
				TableRef: yyDollar[4].tableref,
				Where:    yyDollar[6].node,
			}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2533
		{
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2534
		{
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2535
		{
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2541
		{
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2546
		{
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2548
		{
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2554
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2558
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2565
		{

		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2571
		{
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2573
		{
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2574
		{
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2575
		{
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2580
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2584
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2591
		{
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2595
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2596
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2601
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2602
		{
			yyVAL.strlist = nil
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2611
		{
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2614
		{
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2617
		{
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2620
		{
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2623
		{
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2626
		{
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2629
		{
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2632
		{
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2635
		{
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2638
		{
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2641
		{
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2644
		{
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2647
		{
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2653
		{
			yyVAL.bool = true
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2654
		{
			yyVAL.bool = false
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2658
		{
			yyVAL.bool = true
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2659
		{
			yyVAL.bool = false
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2663
		{
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2664
		{
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2665
		{
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2671
		{
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2672
		{
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2673
		{
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2674
		{
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2677
		{
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2678
		{
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2679
		{
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2680
		{
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2683
		{
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2684
		{
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2687
		{
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2688
		{
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2691
		{
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2696
		{
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2697
		{
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2698
		{
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2704
		{
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2706
		{
		}
	case 527:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lyx/gram.y:2714
		{
			yyVAL.node = &Copy{
				TableRef: yyDollar[3].from,
				Where:    yyDollar[11].node,
				IsFrom:   yyDollar[5].bool,
			}
		}
	case 528:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lyx/gram.y:2722
		{
			yyVAL.node = &Copy{
				IsFrom:  false,
				SubStmt: yyDollar[3].node,
			}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2733
		{
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2735
		{
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2739
		{
			yyVAL.str = yyDollar[1].str
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2742
		{
			yyVAL.str = yyDollar[1].str
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2745
		{
			yyVAL.str = yyDollar[1].str
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2747
		{
			yyVAL.str = yyDollar[1].str
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2749
		{
			yyVAL.str = yyDollar[1].str
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2751
		{
			yyVAL.str = yyDollar[1].str
		}
	}
	goto yystack /* stack new state and value */
}
