// Code generated by goyacc -o lyx/gram.go -p yy lyx/gram.y. DO NOT EDIT.

//line lyx/gram.y:3
package lyx

import __yyfmt__ "fmt"

//line lyx/gram.y:3

import (
	"crypto/rand"
	"encoding/hex"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

//line lyx/gram.y:21
type yySymType struct {
	yys     int
	str     string
	strlist []string
	byte    byte
	bytes   []byte
	int     int
	bool    bool
	empty   struct{}

	statement Statement
	from_list []FromClauseNode
	from      FromClauseNode
	tableelt  []TableElt
	tableref  FromClauseNode

	selectStmt *Select

	statementList []Statement
}

const SCONST = 57346
const IDENT = 57347
const CREATE = 57348
const ALTER = 57349
const ROLE = 57350
const DATABASE = 57351
const NATURAL = 57352
const TABLE = 57353
const INDEX = 57354
const SELECT = 57355
const UPDATE = 57356
const INSERT = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const AND = 57361
const VALUES = 57362
const OR = 57363
const EXPLAIN = 57364
const EXECUTE = 57365
const PREPARE = 57366
const BEGIN = 57367
const COMMIT = 57368
const ROLLBACK = 57369
const VACUUM = 57370
const CLUSTER = 57371
const ANALYZE = 57372
const INTO = 57373
const OUTER_P = 57374
const FULL = 57375
const RIGHT = 57376
const LEFT = 57377
const INNER_P = 57378
const DROP = 57379
const TRUNCATE = 57380
const FETCH = 57381
const FOR = 57382
const ORDER = 57383
const GROUP = 57384
const BY = 57385
const OFFSET = 57386
const LIMIT = 57387
const WINDOW = 57388
const CROSS = 57389
const SET = 57390
const RESET = 57391
const LOCAL = 57392
const ALL = 57393
const PRIMARY = 57394
const KEY = 57395
const FOREIGN = 57396
const REFERENCES = 57397
const USING = 57398
const TCOLON = 57399
const TCOMMA = 57400
const TOPENBR = 57401
const TCLOSEBR = 57402
const TSQOPENBR = 57403
const TSQCLOSEBR = 57404
const TSEMICOLON = 57405
const TNOT_EQUALS = 57406
const TDOT = 57407
const NULL_P = 57408
const ISNULL = 57409
const ON = 57410
const JOIN = 57411
const TPLUS = 57412
const TMINUS = 57413
const TMUL = 57414
const TDIV = 57415
const TGREATER = 57416
const TGREATER_EQUALS = 57417
const TLESS = 57418
const TLESS_EQUALS = 57419
const TMOD = 57420
const TPOW = 57421
const FALSE_P = 57422
const TRUE_P = 57423
const TEQ = 57424
const OP = 57425
const ONLY = 57426
const RETURNING = 57427
const COPY = 57428
const IS = 57429
const NOT = 57430
const NULL = 57431
const DISTINCT = 57432
const DEFAULT = 57433
const NORMALIZED = 57434
const NOTNULL = 57435
const DOCUMENT_P = 57436
const TO = 57437
const STDOUT = 57438
const AS = 57439

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SCONST",
	"IDENT",
	"CREATE",
	"ALTER",
	"ROLE",
	"DATABASE",
	"NATURAL",
	"TABLE",
	"INDEX",
	"SELECT",
	"UPDATE",
	"INSERT",
	"DELETE",
	"FROM",
	"WHERE",
	"AND",
	"VALUES",
	"OR",
	"EXPLAIN",
	"EXECUTE",
	"PREPARE",
	"BEGIN",
	"COMMIT",
	"ROLLBACK",
	"VACUUM",
	"CLUSTER",
	"ANALYZE",
	"INTO",
	"OUTER_P",
	"FULL",
	"RIGHT",
	"LEFT",
	"INNER_P",
	"DROP",
	"TRUNCATE",
	"FETCH",
	"FOR",
	"ORDER",
	"GROUP",
	"BY",
	"OFFSET",
	"LIMIT",
	"WINDOW",
	"CROSS",
	"SET",
	"RESET",
	"LOCAL",
	"ALL",
	"PRIMARY",
	"KEY",
	"FOREIGN",
	"REFERENCES",
	"USING",
	"TCOLON",
	"TCOMMA",
	"TOPENBR",
	"TCLOSEBR",
	"TSQOPENBR",
	"TSQCLOSEBR",
	"TSEMICOLON",
	"TNOT_EQUALS",
	"TDOT",
	"NULL_P",
	"ISNULL",
	"ON",
	"JOIN",
	"TPLUS",
	"TMINUS",
	"TMUL",
	"TDIV",
	"TGREATER",
	"TGREATER_EQUALS",
	"TLESS",
	"TLESS_EQUALS",
	"TMOD",
	"TPOW",
	"FALSE_P",
	"TRUE_P",
	"TEQ",
	"OP",
	"ONLY",
	"RETURNING",
	"COPY",
	"IS",
	"NOT",
	"NULL",
	"DISTINCT",
	"DEFAULT",
	"NORMALIZED",
	"NOTNULL",
	"DOCUMENT_P",
	"TO",
	"STDOUT",
	"AS",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lyx/gram.y:1475

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 152,
	59, 91,
	-2, 151,
}

const yyPrivate = 57344

const yyLast = 735

var yyAct = [...]int{

	155, 347, 326, 353, 340, 217, 214, 167, 291, 274,
	258, 310, 266, 17, 57, 205, 59, 139, 157, 218,
	51, 295, 254, 219, 354, 158, 324, 50, 52, 54,
	56, 51, 211, 208, 188, 163, 189, 342, 269, 271,
	270, 272, 161, 306, 236, 305, 129, 130, 131, 132,
	207, 137, 199, 140, 164, 43, 387, 369, 239, 238,
	364, 160, 188, 320, 189, 162, 237, 297, 240, 298,
	242, 165, 241, 166, 309, 51, 315, 286, 384, 186,
	151, 152, 191, 333, 319, 175, 176, 177, 178, 182,
	185, 181, 184, 179, 180, 251, 323, 183, 187, 212,
	200, 365, 190, 174, 151, 152, 297, 186, 192, 355,
	191, 264, 193, 175, 176, 177, 178, 182, 185, 181,
	184, 179, 180, 275, 255, 183, 187, 294, 279, 220,
	190, 356, 376, 259, 300, 149, 192, 321, 51, 332,
	252, 194, 281, 280, 172, 302, 143, 144, 141, 169,
	170, 171, 282, 359, 284, 51, 283, 161, 161, 149,
	246, 206, 371, 360, 145, 303, 262, 146, 335, 382,
	143, 144, 311, 378, 156, 161, 201, 202, 203, 3,
	209, 287, 260, 53, 37, 39, 38, 40, 145, 316,
	213, 146, 42, 22, 243, 215, 285, 195, 196, 197,
	159, 55, 49, 198, 161, 37, 51, 168, 256, 299,
	44, 45, 46, 47, 48, 245, 322, 204, 375, 276,
	331, 161, 150, 253, 154, 1, 278, 381, 209, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 277, 257, 135, 136, 377, 133,
	134, 370, 206, 292, 248, 358, 206, 41, 334, 301,
	261, 268, 273, 290, 288, 161, 293, 289, 161, 263,
	304, 296, 58, 307, 250, 318, 314, 249, 153, 148,
	21, 308, 312, 313, 269, 271, 270, 272, 147, 14,
	13, 12, 11, 10, 16, 327, 151, 152, 265, 15,
	325, 6, 328, 5, 4, 9, 161, 161, 329, 8,
	161, 338, 339, 330, 20, 343, 276, 336, 337, 341,
	267, 19, 292, 18, 7, 344, 142, 247, 138, 350,
	349, 351, 216, 346, 357, 173, 2, 0, 0, 317,
	0, 0, 0, 161, 361, 0, 0, 0, 363, 0,
	0, 149, 0, 0, 366, 0, 327, 0, 368, 0,
	0, 0, 143, 144, 0, 0, 0, 374, 0, 367,
	345, 0, 0, 348, 372, 373, 0, 380, 352, 0,
	145, 0, 0, 146, 0, 386, 379, 0, 0, 0,
	0, 0, 0, 383, 0, 362, 0, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 61, 82, 83, 90, 91, 348,
	71, 89, 62, 63, 64, 65, 66, 67, 68, 70,
	69, 72, 73, 74, 75, 76, 77, 84, 85, 86,
	95, 0, 0, 0, 0, 0, 87, 88, 99, 98,
	92, 93, 94, 97, 96, 0, 118, 78, 79, 80,
	81, 110, 108, 109, 111, 0, 103, 102, 100, 101,
	0, 0, 105, 127, 0, 0, 0, 122, 117, 113,
	0, 112, 116, 125, 126, 123, 124, 114, 115, 121,
	120, 0, 128, 104, 107, 0, 119, 0, 0, 0,
	210, 0, 82, 83, 90, 91, 106, 71, 89, 62,
	63, 64, 65, 66, 67, 68, 70, 69, 72, 73,
	74, 75, 76, 77, 84, 85, 86, 95, 0, 0,
	0, 0, 0, 87, 88, 99, 98, 92, 93, 94,
	97, 96, 0, 118, 78, 79, 80, 81, 110, 108,
	109, 111, 0, 103, 102, 100, 101, 0, 0, 105,
	127, 188, 0, 189, 122, 117, 113, 0, 112, 116,
	125, 126, 123, 124, 114, 115, 121, 120, 0, 128,
	104, 107, 0, 119, 0, 188, 0, 189, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 186, 0, 0, 191,
	0, 0, 175, 176, 177, 178, 182, 185, 181, 184,
	179, 180, 0, 0, 183, 187, 0, 0, 0, 190,
	186, 0, 0, 191, 0, 192, 175, 176, 177, 178,
	182, 185, 181, 184, 179, 180, 0, 0, 183, 187,
	0, 0, 0, 190, 35, 36, 268, 0, 0, 192,
	0, 37, 39, 38, 40, 0, 0, 0, 0, 0,
	22, 26, 29, 23, 24, 25, 30, 31, 32, 269,
	271, 270, 272, 0, 0, 34, 33, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 27, 28, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41,
}
var yyPact = [...]int{

	648, -1000, -8, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -8, -8, -8,
	-8, -8, 171, -1000, -1000, -1000, 201, 133, 150, 201,
	409, 409, 409, 409, 409, 238, 409, 76, 143, -59,
	183, 201, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	409, -1000, -47, 201, -1000, -1000, 409, -1000, 409, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 202, 409, 409, 409, -1000, 86, -1000,
	15, -1000, -1000, 292, 292, 292, -1000, -1000, -1000, 292,
	-1000, -1000, -13, -1000, -1000, 41, 201, 201, -1000, -59,
	201, -15, -1000, 496, -50, -1000, -1000, 40, -1000, -1000,
	-1000, -1000, 76, 177, 70, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	-22, -1000, -1000, 201, -1000, 566, 566, 566, 542, 210,
	100, 36, 92, 201, -73, -1000, 66, 201, -1000, -1000,
	-1000, 496, 128, -1000, 124, 292, 53, 646, 26, -1000,
	70, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, -1000, 62, -1000, -1000,
	179, -1000, -1000, -1000, -1000, -1000, -1000, 17, 566, 161,
	192, 201, 201, 71, -75, 201, -1000, -1000, 9, 204,
	81, 99, 122, 566, 70, -24, -26, 70, 5, 140,
	140, 140, -1000, -1000, -1000, 201, -1000, 16, 646, -1000,
	-1000, -1000, 172, -1000, -1000, 292, -1000, 25, -1000, 3,
	79, -1000, -56, 177, 201, 177, -1000, 128, 409, 87,
	24, 127, 409, 409, 646, 70, 70, 251, -32, 70,
	-1000, -1000, -1000, -1000, -1000, 26, 292, 566, 409, 292,
	-1000, 201, 177, 202, 292, -61, -1000, 51, -1000, 48,
	-1000, -1000, 78, 201, 108, 120, -1000, -1000, 646, 251,
	-1000, 292, 70, 646, -1000, 566, -1000, 0, 43, -1000,
	-61, -1000, 566, -1000, 409, 201, -1000, -3, 118, 409,
	409, -1000, 566, 646, -1000, 292, -1000, -1000, -1000, 77,
	134, 409, -1000, -1000, -1000, -1000, 201, 129, 409, -1000,
	19, -1000, 409, -1000, 201, -1000, -4, -1000,
}
var yyPgo = [...]int{

	0, 336, 179, 0, 33, 7, 6, 335, 332, 5,
	19, 23, 328, 328, 327, 53, 326, 326, 16, 324,
	13, 323, 321, 314, 309, 305, 304, 303, 301, 299,
	294, 293, 292, 291, 290, 289, 192, 288, 280, 279,
	278, 15, 277, 1, 275, 274, 272, 266, 2, 263,
	10, 18, 262, 9, 14, 8, 262, 260, 259, 258,
	255, 251, 248, 227, 225, 224, 222, 222, 17, 220,
	218, 11, 12, 4, 217, 3, 216,
}
var yyR1 = [...]int{

	0, 64, 36, 36, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 46, 46, 46, 54, 54, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 5, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 65, 65, 14, 13, 13,
	37, 66, 16, 16, 16, 16, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	40, 39, 39, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 6, 6,
	67, 67, 12, 12, 68, 68, 68, 68, 24, 24,
	24, 24, 26, 27, 28, 19, 25, 2, 2, 2,
	2, 2, 2, 69, 69, 70, 70, 50, 50, 50,
	29, 29, 29, 29, 30, 31, 32, 33, 35, 34,
	57, 57, 58, 58, 59, 59, 60, 60, 61, 61,
	62, 62, 63, 63, 7, 7, 8, 8, 10, 10,
	53, 53, 52, 52, 9, 9, 9, 71, 71, 72,
	72, 72, 72, 73, 11, 11, 11, 11, 11, 11,
	20, 20, 41, 41, 74, 74, 42, 45, 45, 43,
	43, 44, 75, 75, 21, 21, 51, 51, 76, 76,
	49, 49, 55, 22, 48, 48, 47, 47, 23, 38,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 3,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 2, 4, 2, 3,
	4, 3, 4, 5, 6, 3, 4, 3, 4, 1,
	3, 1, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 4, 5,
	2, 2, 1, 1, 1, 3, 3, 2, 2, 2,
	2, 2, 2, 0, 2, 0, 5, 3, 6, 3,
	7, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	0, 3, 0, 2, 0, 3, 0, 2, 0, 2,
	0, 2, 0, 2, 2, 0, 1, 3, 1, 3,
	2, 1, 0, 1, 2, 1, 4, 1, 0, 2,
	2, 2, 1, 2, 3, 4, 5, 4, 5, 4,
	11, 2, 1, 3, 0, 1, 3, 0, 1, 1,
	3, 3, 0, 2, 7, 5, 0, 1, 0, 2,
	1, 3, 3, 8, 1, 3, 0, 2, 7, 6,
}
var yyChk = [...]int{

	-1000, -64, -1, -2, -26, -27, -28, -19, -24, -25,
	-31, -32, -33, -34, -35, -29, -30, -20, -21, -22,
	-23, -38, 22, 25, 26, 27, 23, 48, 49, 24,
	28, 29, 30, 38, 37, 6, 7, 13, 15, 14,
	16, 86, -36, 63, -36, -36, -36, -36, -36, -2,
	-3, 5, -3, 50, -3, 51, -3, -54, -46, -18,
	4, 5, 13, 14, 15, 16, 17, 18, 19, 21,
	20, 11, 22, 23, 24, 25, 26, 27, 48, 49,
	50, 51, 6, 7, 28, 29, 30, 37, 38, 12,
	8, 9, 41, 42, 43, 31, 45, 44, 40, 39,
	59, 60, 58, 57, 84, 63, 97, 85, 53, 54,
	52, 55, 72, 70, 78, 79, 73, 69, 47, 87,
	81, 80, 68, 76, 77, 74, 75, 64, 83, -54,
	-54, -54, -54, 11, 12, 8, 9, -54, -12, -68,
	-15, 72, -16, 70, 71, 88, 91, -37, -39, 59,
	-66, 4, 5, -40, -65, -3, 31, -51, 84, 17,
	-10, -3, -54, 82, -3, -54, -54, -5, 5, -54,
	-54, -54, 58, -7, 17, 70, 71, 72, 73, 78,
	79, 76, 74, 82, 77, 75, 64, 83, 19, 21,
	87, 67, 93, 97, -3, -15, -15, -15, -15, 65,
	59, -10, -10, -51, -74, -41, -3, 65, -4, -18,
	4, 82, 59, -68, -6, 18, -8, -9, -10, -11,
	59, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, 66, 88, 81, 80,
	90, 94, 92, -3, 60, 5, 60, -14, -15, -42,
	-45, 59, 48, -10, 95, 58, -3, -4, -50, 5,
	54, -57, 42, -15, 58, 47, -72, 69, 10, 33,
	35, 34, 36, -52, -53, 97, -3, -11, -9, 66,
	81, 80, 90, 94, 92, 17, 60, 20, -20, -41,
	-49, -55, -3, -47, 56, 96, -41, 58, 60, 5,
	53, -58, 46, 43, -9, 69, 69, -9, -72, 69,
	-71, 32, -71, -71, -3, 60, 17, -15, -44, 59,
	60, 58, -76, 17, 82, -6, -48, -3, -6, -50,
	-54, -69, 52, 59, -59, 41, -54, -54, -9, -9,
	-73, 68, 69, -9, -53, -15, -54, -43, -15, -55,
	-6, -5, -15, -75, 85, 58, 53, -3, -60, 45,
	43, -73, -15, -9, 60, 58, -75, -54, -48, 60,
	-61, 44, -54, -54, -43, -70, 55, -62, 39, -54,
	-3, -63, 40, -54, 59, -54, -3, 60,
}
var yyDef = [...]int{

	76, -2, 2, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 2, 2, 2,
	2, 2, 0, 182, 183, 184, 0, 0, 0, 0,
	74, 74, 74, 74, 74, 0, 74, 0, 0, 266,
	0, 0, 1, 3, 187, 188, 189, 190, 191, 192,
	74, 91, 0, 0, 180, 181, 74, 205, 74, 71,
	72, 73, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 206,
	207, 209, 208, 0, 74, 74, 74, 204, 225, 172,
	176, 177, 116, 0, 0, 0, 149, 112, 113, 0,
	115, 110, -2, 152, 111, 0, 0, 0, 267, 266,
	254, 228, 185, 0, 0, 186, 75, 0, 94, 201,
	202, 203, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 138, 0, 175, 117, 118, 134, 0, 0,
	0, 257, 0, 0, 0, 255, 252, 0, 178, 92,
	93, 0, 0, 173, 210, 0, 224, 226, 232, 235,
	0, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 135, 0, 139, 141,
	0, 145, 147, 174, 114, 150, 105, 0, 107, 258,
	0, 0, 0, 276, 0, 0, 229, 179, 0, 0,
	0, 212, 0, 169, 0, 0, 0, 0, 0, 238,
	238, 238, 242, 234, 233, 0, 231, 235, 0, 137,
	140, 142, 0, 146, 148, 0, 106, 0, 265, 0,
	268, 270, 0, 168, 0, 168, 253, 0, 74, 193,
	0, 214, 74, 74, 227, 0, 0, 0, 0, 0,
	239, 237, 240, 241, 230, 244, 0, 143, 74, 0,
	256, 0, 168, 0, 0, 262, 277, 274, 279, 199,
	200, 197, 0, 0, 216, 0, 213, 211, 245, 0,
	247, 0, 0, 249, 236, 144, 264, 0, 259, 271,
	262, 269, 272, 278, 74, 0, 194, 0, 218, 74,
	74, 246, 243, 248, 261, 0, 273, 263, 275, 195,
	220, 74, 217, 215, 260, 198, 0, 222, 74, 219,
	0, 250, 74, 221, 0, 223, 0, 196,
}
var yyTok1 = [...]int{

	1,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:235
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:236
		{

		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:242
		{
			yyVAL.str = yyDollar[1].str
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:243
		{
			yyVAL.str = yyDollar[1].str
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:244
		{
			yyVAL.str = yyDollar[1].str
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:245
		{
			yyVAL.str = yyDollar[1].str
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:246
		{
			yyVAL.str = yyDollar[1].str
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:247
		{
			yyVAL.str = yyDollar[1].str
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:248
		{
			yyVAL.str = yyDollar[1].str
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:249
		{
			yyVAL.str = yyDollar[1].str
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:250
		{
			yyVAL.str = yyDollar[1].str
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:251
		{
			yyVAL.str = yyDollar[1].str
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:252
		{
			yyVAL.str = yyDollar[1].str
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:253
		{
			yyVAL.str = yyDollar[1].str
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:254
		{
			yyVAL.str = yyDollar[1].str
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:255
		{
			yyVAL.str = yyDollar[1].str
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:256
		{
			yyVAL.str = yyDollar[1].str
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:257
		{
			yyVAL.str = yyDollar[1].str
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:258
		{
			yyVAL.str = yyDollar[1].str
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:259
		{
			yyVAL.str = yyDollar[1].str
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:260
		{
			yyVAL.str = yyDollar[1].str
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:261
		{
			yyVAL.str = yyDollar[1].str
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:262
		{
			yyVAL.str = yyDollar[1].str
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:263
		{
			yyVAL.str = yyDollar[1].str
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:264
		{
			yyVAL.str = yyDollar[1].str
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:265
		{
			yyVAL.str = yyDollar[1].str
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:266
		{
			yyVAL.str = yyDollar[1].str
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:267
		{
			yyVAL.str = yyDollar[1].str
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:268
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:269
		{
			yyVAL.str = yyDollar[1].str
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:270
		{
			yyVAL.str = yyDollar[1].str
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:271
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:273
		{
			yyVAL.str = yyDollar[1].str
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:274
		{
			yyVAL.str = yyDollar[1].str
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:275
		{
			yyVAL.str = yyDollar[1].str
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:276
		{
			yyVAL.str = yyDollar[1].str
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:277
		{
			yyVAL.str = yyDollar[1].str
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:278
		{
			yyVAL.str = yyDollar[1].str
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:279
		{
			yyVAL.str = yyDollar[1].str
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:280
		{
			yyVAL.str = yyDollar[1].str
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:281
		{
			yyVAL.str = yyDollar[1].str
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:282
		{
			yyVAL.str = yyDollar[1].str
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:283
		{
			yyVAL.str = yyDollar[1].str
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:284
		{
			yyVAL.str = yyDollar[1].str
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:285
		{
			yyVAL.str = yyDollar[1].str
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:286
		{
			yyVAL.str = yyDollar[1].str
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:287
		{
			yyVAL.str = yyDollar[1].str
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:288
		{
			yyVAL.str = yyDollar[1].str
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:289
		{
			yyVAL.str = yyDollar[1].str
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:290
		{
			yyVAL.str = yyDollar[1].str
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:292
		{
			yyVAL.str = yyDollar[1].str
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:293
		{
			yyVAL.str = yyDollar[1].str
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:294
		{
			yyVAL.str = yyDollar[1].str
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:295
		{
			yyVAL.str = yyDollar[1].str
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:296
		{
			yyVAL.str = yyDollar[1].str
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:297
		{
			yyVAL.str = yyDollar[1].str
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:298
		{
			yyVAL.str = yyDollar[1].str
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:300
		{
			yyVAL.str = yyDollar[1].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:301
		{
			yyVAL.str = yyDollar[1].str
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:302
		{
			yyVAL.str = yyDollar[1].str
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:303
		{
			yyVAL.str = yyDollar[1].str
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:304
		{
			yyVAL.str = yyDollar[1].str
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:305
		{
			yyVAL.str = yyDollar[1].str
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:306
		{
			yyVAL.str = yyDollar[1].str
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:307
		{
			yyVAL.str = yyDollar[1].str
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:308
		{
			yyVAL.str = yyDollar[1].str
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:311
		{
			yyVAL.str = yyDollar[1].str
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:311
		{
			yyVAL.str = yyDollar[1].str
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:311
		{
			yyVAL.str = yyDollar[1].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:315
		{
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:316
		{
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:322
		{
			yyVAL.statement = nil
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:324
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:326
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:328
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:330
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:332
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:334
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:336
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:338
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:340
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:342
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:344
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:346
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:348
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:350
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:356
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:376
		{
			yyVAL.str = yyDollar[1].str
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:378
		{
			yyVAL.str = "AND"
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:380
		{
			yyVAL.str = "OR"
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:382
		{
			yyVAL.str = "!="
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:384
		{
			yyVAL.str = "="
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:386
		{
			yyVAL.str = "<"
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:388
		{
			yyVAL.str = ">"
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:390
		{
			yyVAL.str = ">="
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:392
		{
			yyVAL.str = "<="
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:421
		{
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:421
		{
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:423
		{
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:426
		{
			yyVAL.str = ""
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:430
		{
			yyVAL.str = ""
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:438
		{
			yyVAL.statement = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:446
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:452
		{
			yyVAL.statement = yyDollar[2].statement
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:455
		{
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:458
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:488
		{
			yyVAL.statement = yyDollar[2].statement
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:490
		{
			yyVAL.statement = yyDollar[2].statement
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:492
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:500
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:508
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:516
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:524
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:532
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:540
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:548
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:556
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:564
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:572
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:580
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:589
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:602
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:610
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[3].statement,
				Op:    yyDollar[2].str,
			}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:618
		{
			yyVAL.statement = yyDollar[2].statement
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:728
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:730
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:732
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:734
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:753
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:755
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:757
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:759
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:779
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[5].statement,
				Op:    yyDollar[3].str,
			}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:787
		{
			yyVAL.statement = &AExprOp{
				Left:  yyDollar[1].statement,
				Right: yyDollar[6].statement,
				Op:    yyDollar[3].str,
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:906
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:908
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:910
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:914
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:924
		{
			/*
			 * The SQL spec only allows DEFAULT in "contextually typed
			 * expressions", but for us, it's easier to allow it in
			 * any a_expr and then throw error during parse analysis
			 * if it's in an inappropriate context.  This way also
			 * lets us say something smarter than "syntax error".
			 */

		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:938
		{
			yyVAL.statement = &ColumnRef{
				ColName:    yyDollar[3].str,
				TableAlias: yyDollar[1].str,
			}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:946
		{
			yyVAL.statement = &ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:950
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:958
		{ /* result not matter */
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:960
		{ /* result not matter */
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:962
		{ /* result not matter */
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:964
		{ /* result not matter */
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:966
		{ /* result not matter */
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:968
		{ /* result not matter */
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:970
		{ /* result not matter */
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:972
		{ /* result not matter */
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:974
		{ /* result not matter */
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:976
		{ /* result not matter */
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:978
		{ /* result not matter */
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:980
		{ /* result not matter */
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:982
		{ /* result not matter */
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:984
		{ /* result not matter */
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:985
		{ /* result not matter */
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:990
		{
			yyVAL.statement = &AExprEmpty{}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:994
		{
			yyVAL.statement = yyDollar[2].statement
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:999
		{
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1000
		{
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1004
		{
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1005
		{
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1009
		{

		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1013
		{

		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1017
		{

		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1021
		{

		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1028
		{
			yyVAL.statement = &VarSet{
				Name:  yyDollar[2].str,
				Value: yyDollar[4].str,
			}
		}
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1034
		{
			yyVAL.statement = &VarSet{
				IsLocal: true,
				Name:    yyDollar[3].str,
				Value:   yyDollar[5].str,
			}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1041
		{
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1042
		{
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1047
		{
			yyVAL.statement = &Begin{}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1056
		{
			yyVAL.statement = &Commit{}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1065
		{
			yyVAL.statement = &Rollback{}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1073
		{
			yyVAL.statement = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1081
		{
			yyVAL.statement = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1088
		{
			yyVAL.statement = yyDollar[1].selectStmt
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1090
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1092
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1094
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1096
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1098
		{
			yyVAL.statement = &Explain{
				Stmt: yyDollar[2].statement,
			}
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1105
		{
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1106
		{
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1109
		{
		}
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1110
		{
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1113
		{
			yyVAL.tableelt = []TableElt{{
				ColName: yyDollar[1].str,
				ColType: yyDollar[2].str,
			},
			}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1120
		{
			yyVAL.tableelt = nil
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1123
		{
			yyVAL.tableelt = append(yyDollar[1].tableelt, yyDollar[3].tableelt...)
		}
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1128
		{
			yyVAL.statement = &CreateTable{
				TableName: yyDollar[3].str,
				TableElts: yyDollar[5].tableelt,
			}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1133
		{
			yyVAL.statement = &Index{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1137
		{
			yyVAL.statement = &CreateRole{}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1141
		{
			yyVAL.statement = &CreateDatabase{}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1148
		{
			yyVAL.statement = &Alter{}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1155
		{
			yyVAL.statement = &Vacuum{}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1162
		{
			yyVAL.statement = &Cluster{}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1170
		{
			yyVAL.statement = &Analyze{}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1177
		{
			yyVAL.statement = &Drop{}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1185
		{
			yyVAL.statement = &Truncate{}
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1192
		{
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1192
		{
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1193
		{
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1193
		{
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1194
		{
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1194
		{
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1195
		{
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1195
		{
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1196
		{
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1196
		{
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1197
		{
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1197
		{
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1198
		{
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1198
		{
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1204
		{
			yyVAL.from_list = yyDollar[2].from_list
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1205
		{
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1209
		{
			yyVAL.from_list = []FromClauseNode{yyDollar[1].from}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1210
		{
			yyVAL.from_list = append(yyDollar[1].from_list, yyDollar[3].from)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1214
		{
			yyVAL.tableref = &RangeVar{
				SchemaName:   "",
				RelationName: yyDollar[1].str,
				Alias:        "",
			}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1221
		{
			yyVAL.tableref = &RangeVar{
				SchemaName:   yyDollar[1].str,
				RelationName: yyDollar[3].str,
				Alias:        "",
			}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1231
		{
			yyVAL.str = yyDollar[2].str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1235
		{
			yyVAL.str = yyDollar[1].str
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1241
		{
			yyVAL.str = ""
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1249
		{
			yyDollar[1].tableref.SetAlias(yyDollar[2].str)
			yyVAL.from = yyDollar[1].tableref
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1254
		{
			yyVAL.from = yyDollar[1].tableref
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1258
		{
			yyDollar[2].tableref.SetAlias(yyDollar[4].str)
			yyVAL.from = yyDollar[2].tableref
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1266
		{
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1267
		{
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1271
		{
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1272
		{
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1273
		{
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1274
		{
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1285
		{

		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1293
		{
			yyVAL.tableref = yyDollar[2].tableref
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1297
		{
			/* CROSS JOIN is same as unqualified inner join */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1305
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1312
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[3].from,
			}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1320
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[5].from,
			}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1327
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lyx/gram.y:1342
		{
			yyVAL.selectStmt = &Select{
				FromClause: yyDollar[3].from_list,
				Where:      yyDollar[4].statement,
			}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1347
		{
			yyVAL.selectStmt = &Select{}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1354
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1355
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1360
		{
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1360
		{
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1363
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1369
		{
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1370
		{
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1375
		{
			yyVAL.statementList = []Statement{yyDollar[1].statement}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1377
		{
			yyVAL.statementList = append(yyDollar[3].statementList, yyDollar[1].statement)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1382
		{
			yyVAL.statementList = yyDollar[2].statementList
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1388
		{
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1389
		{
		}
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1395
		{
			yyVAL.statement = &Insert{
				TableRef: yyDollar[3].tableref,
				Columns:  yyDollar[4].strlist,
				Values:   yyDollar[6].statementList,
			}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1401
		{
			yyVAL.statement = &Insert{
				TableRef:  yyDollar[3].tableref,
				SubSelect: yyDollar[5].selectStmt,
			}
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1409
		{
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1410
		{
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1413
		{
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1414
		{
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1420
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1421
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1426
		{
			yyVAL.str = yyDollar[1].str
		}
	case 273:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lyx/gram.y:1436
		{
			yyVAL.statement = &Update{
				TableRef: yyDollar[3].tableref,
				Where:    yyDollar[7].statement,
			}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1447
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1448
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1453
		{
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1454
		{
		}
	case 278:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1458
		{
			yyVAL.statement = &Delete{
				TableRef: yyDollar[4].tableref,
				Where:    yyDollar[6].statement,
			}
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1467
		{
			yyVAL.statement = &Copy{
				TableRef: yyDollar[2].tableref,
				Where:    yyDollar[6].statement,
				IsFrom:   false,
			}
		}
	}
	goto yystack /* stack new state and value */
}
