// Code generated by goyacc -o lyx/gram.go -p yy lyx/gram.y. DO NOT EDIT.

//line lyx/gram.y:3
package lyx

import __yyfmt__ "fmt"

//line lyx/gram.y:3

import (
	"crypto/rand"
	"encoding/hex"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

//line lyx/gram.y:21
type yySymType struct {
	yys     int
	str     string
	strlist []string
	byte    byte
	bytes   []byte
	int     int
	bool    bool
	empty   struct{}

	node      Node
	from_list []FromClauseNode
	from      FromClauseNode
	tableelt  []TableElt
	tableref  FromClauseNode

	selectStmt *Select

	nodeList []Node
}

const SCONST = 57346
const IDENT = 57347
const CREATE = 57348
const ALTER = 57349
const ROLE = 57350
const DATABASE = 57351
const NATURAL = 57352
const TABLE = 57353
const INDEX = 57354
const SELECT = 57355
const UPDATE = 57356
const INSERT = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const AND = 57361
const VALUES = 57362
const OR = 57363
const EXPLAIN = 57364
const EXECUTE = 57365
const PREPARE = 57366
const BEGIN = 57367
const COMMIT = 57368
const ROLLBACK = 57369
const VACUUM = 57370
const CLUSTER = 57371
const ANALYZE = 57372
const INTO = 57373
const OUTER_P = 57374
const FULL = 57375
const RIGHT = 57376
const LEFT = 57377
const INNER_P = 57378
const DROP = 57379
const TRUNCATE = 57380
const FETCH = 57381
const FOR = 57382
const ORDER = 57383
const GROUP = 57384
const BY = 57385
const OFFSET = 57386
const LIMIT = 57387
const WINDOW = 57388
const CROSS = 57389
const SET = 57390
const RESET = 57391
const LOCAL = 57392
const ALL = 57393
const PRIMARY = 57394
const KEY = 57395
const FOREIGN = 57396
const REFERENCES = 57397
const USING = 57398
const TCOLON = 57399
const TCOMMA = 57400
const TOPENBR = 57401
const TCLOSEBR = 57402
const TSQOPENBR = 57403
const TSQCLOSEBR = 57404
const TSEMICOLON = 57405
const TNOT_EQUALS = 57406
const TDOT = 57407
const NULL_P = 57408
const ISNULL = 57409
const ON = 57410
const JOIN = 57411
const TPLUS = 57412
const TMINUS = 57413
const TMUL = 57414
const TDIV = 57415
const TGREATER = 57416
const TGREATER_EQUALS = 57417
const TLESS = 57418
const TLESS_EQUALS = 57419
const TMOD = 57420
const TPOW = 57421
const FALSE_P = 57422
const TRUE_P = 57423
const TEQ = 57424
const OP = 57425
const ONLY = 57426
const RETURNING = 57427
const COPY = 57428
const IS = 57429
const NOT = 57430
const NULL = 57431
const DISTINCT = 57432
const DEFAULT = 57433
const NORMALIZED = 57434
const NOTNULL = 57435
const DOCUMENT_P = 57436
const TO = 57437
const STDOUT = 57438
const AS = 57439
const UNION = 57440
const EXCEPT = 57441
const INTERSECT = 57442
const BETWEEN = 57443
const IN_P = 57444
const LIKE = 57445
const ILIKE = 57446
const SIMILAR = 57447
const NOT_LA = 57448
const ESCAPE = 57449
const UNBOUNDED = 57450
const PARTITION = 57451
const RANGE = 57452
const ROWS = 57453
const GROUPS = 57454
const PRECEDING = 57455
const FOLLOWING = 57456
const CUBE = 57457
const ROLLUP = 57458
const Op = 57459
const OPERATOR = 57460
const AT = 57461
const COLLATE = 57462
const UMINUS = 57463
const TYPECAST = 57464

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SCONST",
	"IDENT",
	"CREATE",
	"ALTER",
	"ROLE",
	"DATABASE",
	"NATURAL",
	"TABLE",
	"INDEX",
	"SELECT",
	"UPDATE",
	"INSERT",
	"DELETE",
	"FROM",
	"WHERE",
	"AND",
	"VALUES",
	"OR",
	"EXPLAIN",
	"EXECUTE",
	"PREPARE",
	"BEGIN",
	"COMMIT",
	"ROLLBACK",
	"VACUUM",
	"CLUSTER",
	"ANALYZE",
	"INTO",
	"OUTER_P",
	"FULL",
	"RIGHT",
	"LEFT",
	"INNER_P",
	"DROP",
	"TRUNCATE",
	"FETCH",
	"FOR",
	"ORDER",
	"GROUP",
	"BY",
	"OFFSET",
	"LIMIT",
	"WINDOW",
	"CROSS",
	"SET",
	"RESET",
	"LOCAL",
	"ALL",
	"PRIMARY",
	"KEY",
	"FOREIGN",
	"REFERENCES",
	"USING",
	"TCOLON",
	"TCOMMA",
	"TOPENBR",
	"TCLOSEBR",
	"TSQOPENBR",
	"TSQCLOSEBR",
	"TSEMICOLON",
	"TNOT_EQUALS",
	"TDOT",
	"NULL_P",
	"ISNULL",
	"ON",
	"JOIN",
	"TPLUS",
	"TMINUS",
	"TMUL",
	"TDIV",
	"TGREATER",
	"TGREATER_EQUALS",
	"TLESS",
	"TLESS_EQUALS",
	"TMOD",
	"TPOW",
	"FALSE_P",
	"TRUE_P",
	"TEQ",
	"OP",
	"ONLY",
	"RETURNING",
	"COPY",
	"IS",
	"NOT",
	"NULL",
	"DISTINCT",
	"DEFAULT",
	"NORMALIZED",
	"NOTNULL",
	"DOCUMENT_P",
	"TO",
	"STDOUT",
	"AS",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"BETWEEN",
	"IN_P",
	"LIKE",
	"ILIKE",
	"SIMILAR",
	"NOT_LA",
	"ESCAPE",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"CUBE",
	"ROLLUP",
	"Op",
	"OPERATOR",
	"AT",
	"COLLATE",
	"UMINUS",
	"TYPECAST",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lyx/gram.y:1553

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 152,
	59, 105,
	-2, 153,
	-1, 227,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 127,
	-1, 228,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 128,
	-1, 229,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 129,
	-1, 230,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 130,
	-1, 231,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 131,
	-1, 232,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	82, 0,
	-2, 132,
	-1, 319,
	67, 0,
	87, 0,
	93, 0,
	-2, 145,
	-1, 347,
	67, 0,
	87, 0,
	93, 0,
	-2, 146,
}

const yyPrivate = 57344

const yyLast = 760

var yyAct = [...]int{

	57, 161, 349, 328, 342, 140, 217, 355, 167, 293,
	275, 214, 259, 312, 267, 17, 205, 219, 208, 218,
	157, 51, 297, 139, 194, 255, 356, 158, 50, 52,
	54, 56, 129, 130, 131, 132, 59, 137, 188, 187,
	189, 175, 176, 177, 178, 326, 211, 163, 236, 179,
	180, 162, 180, 344, 187, 164, 187, 165, 308, 166,
	307, 160, 239, 238, 207, 199, 188, 43, 189, 299,
	237, 300, 240, 389, 242, 371, 241, 366, 51, 270,
	272, 271, 273, 186, 322, 317, 191, 288, 287, 175,
	176, 177, 178, 182, 185, 181, 184, 179, 180, 386,
	335, 183, 187, 325, 321, 367, 190, 252, 212, 200,
	299, 186, 192, 276, 191, 311, 193, 175, 176, 177,
	178, 182, 185, 181, 184, 179, 180, 357, 280, 183,
	187, 174, 220, 265, 190, 169, 170, 171, 256, 296,
	192, 358, 282, 281, 323, 378, 302, 151, 152, 195,
	196, 197, 283, 334, 285, 198, 284, 177, 178, 260,
	51, 51, 206, 179, 180, 253, 304, 361, 187, 151,
	152, 373, 172, 151, 152, 362, 201, 202, 305, 263,
	203, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 213, 380, 337, 384,
	209, 156, 149, 246, 313, 53, 249, 55, 261, 257,
	3, 289, 215, 143, 144, 248, 37, 39, 38, 40,
	277, 264, 318, 254, 149, 22, 286, 279, 149, 159,
	258, 145, 37, 49, 146, 143, 144, 141, 278, 143,
	144, 135, 136, 42, 133, 134, 51, 168, 209, 301,
	245, 243, 324, 145, 206, 294, 146, 145, 206, 204,
	146, 44, 45, 46, 47, 48, 377, 290, 333, 291,
	150, 269, 306, 298, 154, 309, 155, 1, 316, 383,
	379, 372, 360, 336, 310, 314, 315, 303, 262, 41,
	274, 292, 319, 295, 270, 272, 271, 273, 329, 58,
	251, 332, 320, 250, 153, 338, 339, 327, 266, 330,
	148, 138, 331, 21, 340, 341, 269, 147, 345, 277,
	14, 348, 13, 12, 347, 294, 11, 350, 346, 343,
	268, 10, 354, 351, 353, 16, 352, 359, 15, 270,
	272, 271, 273, 6, 5, 4, 363, 9, 8, 364,
	20, 365, 19, 266, 18, 7, 142, 369, 247, 329,
	368, 370, 374, 375, 216, 173, 2, 0, 0, 0,
	376, 0, 0, 350, 381, 268, 0, 0, 0, 0,
	382, 385, 0, 0, 0, 387, 0, 0, 388, 60,
	61, 82, 83, 90, 91, 0, 71, 89, 62, 63,
	64, 65, 66, 67, 68, 70, 69, 72, 73, 74,
	75, 76, 77, 84, 85, 86, 95, 0, 0, 0,
	0, 0, 87, 88, 99, 98, 92, 93, 94, 97,
	96, 0, 118, 78, 79, 80, 81, 110, 108, 109,
	111, 0, 103, 102, 100, 101, 0, 0, 105, 127,
	0, 0, 0, 122, 117, 113, 0, 112, 116, 125,
	126, 123, 124, 114, 115, 121, 120, 0, 128, 104,
	107, 0, 119, 0, 0, 0, 210, 0, 82, 83,
	90, 91, 106, 71, 89, 62, 63, 64, 65, 66,
	67, 68, 70, 69, 72, 73, 74, 75, 76, 77,
	84, 85, 86, 95, 0, 0, 0, 0, 0, 87,
	88, 99, 98, 92, 93, 94, 97, 96, 0, 118,
	78, 79, 80, 81, 110, 108, 109, 111, 0, 103,
	102, 100, 101, 0, 0, 105, 127, 188, 0, 189,
	122, 117, 113, 0, 112, 116, 125, 126, 123, 124,
	114, 115, 121, 120, 0, 128, 104, 107, 0, 119,
	0, 188, 0, 189, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 186, 0, 0, 191, 188, 0, 175, 176,
	177, 178, 182, 185, 181, 184, 179, 180, 0, 0,
	183, 187, 0, 0, 0, 190, 186, 0, 0, 191,
	0, 192, 175, 176, 177, 178, 182, 185, 181, 184,
	179, 180, 0, 0, 183, 187, 0, 0, 0, 190,
	0, 186, 0, 0, 191, 192, 0, 175, 176, 177,
	178, 182, 185, 181, 184, 179, 180, 0, 0, 183,
	187, 0, 0, 0, 190, 186, 0, 0, 191, 0,
	192, 175, 176, 177, 178, 182, 185, 181, 184, 179,
	180, 0, 0, 183, 187, 0, 0, 0, 190, 35,
	36, 0, 0, 0, 192, 0, 37, 39, 38, 40,
	0, 0, 0, 0, 0, 22, 26, 29, 23, 24,
	25, 30, 31, 32, 0, 0, 0, 0, 0, 0,
	34, 33, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 27, 28, 175, 176, 177, 178, 182, 185, 181,
	184, 179, 180, 0, 0, 183, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 41,
}
var yyPact = [...]int{

	673, -1000, 4, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4, 4, 4,
	4, 4, 203, -1000, -1000, -1000, 241, 155, 156, 241,
	385, 385, 385, 385, 385, 233, 385, 165, 170, -57,
	212, 241, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	385, -1000, -35, 241, -1000, -1000, 385, -1000, 385, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 242, 385, 385, 385, -1000, 114, -1000,
	19, -1000, -1000, 169, 169, 169, -1000, -1000, -1000, 169,
	-1000, -1000, 0, -1000, -1000, 50, 241, 241, -1000, -57,
	241, -1, -1000, 472, -36, -1000, -1000, 49, -1000, -1000,
	-1000, -1000, 165, 194, 73, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	-18, -1000, -1000, 246, -1000, 85, 85, 591, 518, 245,
	143, 48, 117, 241, -70, -1000, 80, 241, -1000, -1000,
	-1000, 472, 154, -1000, 137, 169, 75, 306, 16, -1000,
	73, 85, 85, -27, -27, -27, -44, -29, -29, -29,
	-29, -29, -29, 542, 591, 567, -1000, 62, -1000, -1000,
	209, -1000, -1000, -1000, -1000, -1000, -1000, 28, 27, 542,
	191, 219, 241, 241, 83, -74, 241, -1000, -1000, 11,
	244, 93, 120, 135, 542, 73, -9, -11, 73, 46,
	172, 172, 172, -1000, -1000, -1000, 241, -1000, 25, 306,
	-1000, -1000, -1000, 205, -1000, -1000, 169, -1000, -1000, 45,
	-1000, 24, 86, -1000, -37, 194, 241, 194, -1000, 154,
	385, 101, 41, 157, 385, 385, 306, 73, 73, 261,
	-16, 73, -1000, -1000, -1000, -1000, -1000, 16, 169, 653,
	385, 169, -1000, 241, 194, 242, 169, -59, -1000, 69,
	-1000, 52, -1000, -1000, 88, 241, 122, 132, -1000, -1000,
	-1000, 261, -1000, 169, 73, -1000, -1000, 653, -1000, 17,
	47, -1000, -59, -1000, 542, -1000, 385, 241, -1000, 15,
	127, 385, 385, -1000, 542, -1000, -1000, 169, -1000, -1000,
	-1000, 90, 158, 385, -1000, -1000, -1000, -1000, 241, 159,
	385, -1000, 40, -1000, 385, -1000, 241, -1000, 13, -1000,
}
var yyPgo = [...]int{

	0, 366, 210, 1, 18, 8, 11, 365, 364, 6,
	19, 17, 364, 358, 5, 356, 356, 36, 355, 15,
	354, 352, 350, 348, 347, 345, 344, 343, 338, 335,
	331, 326, 323, 322, 320, 243, 317, 313, 23, 313,
	311, 310, 304, 16, 303, 2, 302, 300, 299, 293,
	3, 291, 12, 20, 290, 10, 0, 9, 290, 288,
	287, 283, 282, 281, 280, 279, 277, 276, 274, 270,
	268, 266, 13, 14, 4, 259, 7, 252,
}
var yyR1 = [...]int{

	0, 66, 35, 35, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 48, 48, 48, 56, 56, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 5, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 67, 68, 68, 68, 13,
	12, 12, 36, 69, 15, 15, 15, 15, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 42, 41, 41, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	6, 6, 39, 39, 40, 40, 38, 38, 38, 38,
	23, 23, 23, 23, 25, 26, 27, 18, 24, 2,
	2, 2, 2, 2, 2, 70, 70, 71, 71, 52,
	52, 52, 28, 28, 28, 28, 29, 30, 31, 32,
	34, 33, 59, 59, 60, 60, 61, 61, 62, 62,
	63, 63, 64, 64, 65, 65, 7, 7, 8, 8,
	10, 10, 55, 55, 54, 54, 9, 9, 9, 72,
	72, 73, 73, 73, 73, 74, 11, 11, 11, 11,
	11, 11, 19, 19, 43, 43, 75, 75, 44, 47,
	47, 45, 45, 46, 76, 76, 20, 20, 53, 53,
	77, 77, 51, 51, 57, 21, 50, 50, 49, 49,
	22, 37,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 1,
	1, 3, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 2, 4,
	2, 3, 4, 3, 4, 5, 6, 3, 4, 3,
	4, 1, 3, 1, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	4, 5, 2, 2, 1, 1, 1, 3, 3, 2,
	2, 2, 2, 2, 2, 0, 2, 0, 5, 3,
	6, 3, 7, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 0, 3, 0, 2, 0, 3, 0, 2,
	0, 2, 0, 2, 0, 2, 2, 0, 1, 3,
	1, 3, 2, 1, 0, 1, 2, 1, 4, 1,
	0, 2, 2, 2, 1, 2, 3, 4, 5, 4,
	5, 4, 11, 2, 1, 3, 0, 1, 3, 0,
	1, 1, 3, 3, 0, 2, 7, 5, 0, 1,
	0, 2, 1, 3, 3, 8, 1, 3, 0, 2,
	7, 6,
}
var yyChk = [...]int{

	-1000, -66, -1, -2, -25, -26, -27, -18, -23, -24,
	-30, -31, -32, -33, -34, -28, -29, -19, -20, -21,
	-22, -37, 22, 25, 26, 27, 23, 48, 49, 24,
	28, 29, 30, 38, 37, 6, 7, 13, 15, 14,
	16, 86, -35, 63, -35, -35, -35, -35, -35, -2,
	-3, 5, -3, 50, -3, 51, -3, -56, -48, -17,
	4, 5, 13, 14, 15, 16, 17, 18, 19, 21,
	20, 11, 22, 23, 24, 25, 26, 27, 48, 49,
	50, 51, 6, 7, 28, 29, 30, 37, 38, 12,
	8, 9, 41, 42, 43, 31, 45, 44, 40, 39,
	59, 60, 58, 57, 84, 63, 97, 85, 53, 54,
	52, 55, 72, 70, 78, 79, 73, 69, 47, 87,
	81, 80, 68, 76, 77, 74, 75, 64, 83, -56,
	-56, -56, -56, 11, 12, 8, 9, -56, -40, -38,
	-14, 72, -15, 70, 71, 88, 91, -36, -41, 59,
	-69, 4, 5, -42, -68, -67, 31, -53, 84, 17,
	-10, -3, -56, 82, -3, -56, -56, -5, 5, -56,
	-56, -56, 58, -7, 17, 70, 71, 72, 73, 78,
	79, 76, 74, 82, 77, 75, 64, 83, 19, 21,
	87, 67, 93, 97, 5, -14, -14, -14, -14, 65,
	59, -10, -10, -53, -75, -43, -3, 65, -4, -17,
	4, 82, 59, -38, -6, 18, -8, -9, -10, -11,
	59, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, 66, 88, 81, 80,
	90, 94, 92, 5, 60, 5, 60, -13, 72, -14,
	-44, -47, 59, 48, -10, 95, 58, -3, -4, -52,
	5, 54, -59, 42, -14, 58, 47, -73, 69, 10,
	33, 35, 34, 36, -54, -55, 97, -3, -11, -9,
	66, 81, 80, 90, 94, 92, 17, 60, 60, 20,
	-19, -43, -51, -57, -3, -49, 56, 96, -43, 58,
	60, 5, 53, -60, 46, 43, -9, 69, 69, -9,
	-73, 69, -72, 32, -72, -72, -3, 60, 17, -14,
	-46, 59, 60, 58, -77, 17, 82, -6, -50, -3,
	-6, -52, -56, -70, 52, 59, -61, 41, -56, -56,
	-9, -9, -74, 68, 69, -9, -55, -14, -56, -45,
	-14, -57, -6, -5, -14, -76, 85, 58, 53, -3,
	-62, 45, 43, -74, -14, -9, 60, 58, -76, -56,
	-50, 60, -63, 44, -56, -56, -45, -71, 55, -64,
	39, -56, -3, -65, 40, -56, 59, -56, -3, 60,
}
var yyDef = [...]int{

	76, -2, 2, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 2, 2, 2,
	2, 2, 0, 184, 185, 186, 0, 0, 0, 0,
	74, 74, 74, 74, 74, 0, 74, 0, 0, 268,
	0, 0, 1, 3, 189, 190, 191, 192, 193, 194,
	74, 91, 0, 0, 182, 183, 74, 207, 74, 71,
	72, 73, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 208,
	209, 211, 210, 0, 74, 74, 74, 206, 227, 174,
	178, 179, 118, 0, 0, 0, 151, 114, 115, 0,
	117, 112, -2, 154, 113, 0, 0, 0, 269, 268,
	256, 230, 187, 0, 0, 188, 75, 0, 94, 203,
	204, 205, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 140, 0, 177, 119, 120, 136, 0, 0,
	0, 259, 0, 0, 0, 257, 254, 0, 180, 92,
	93, 0, 0, 175, 212, 0, 226, 228, 234, 237,
	0, 121, 122, 123, 124, 125, 126, -2, -2, -2,
	-2, -2, -2, 133, 134, 135, 137, 0, 141, 143,
	0, 147, 149, 176, 116, 152, 106, 0, 0, 109,
	260, 0, 0, 0, 278, 0, 0, 231, 181, 0,
	0, 0, 214, 0, 171, 0, 0, 0, 0, 0,
	240, 240, 240, 244, 236, 235, 0, 233, 237, 0,
	139, 142, 144, 0, 148, 150, 0, 107, 108, 0,
	267, 0, 270, 272, 0, 170, 0, 170, 255, 0,
	74, 195, 0, 216, 74, 74, 229, 0, 0, 0,
	0, 0, 241, 239, 242, 243, 232, 246, 0, -2,
	74, 0, 258, 0, 170, 0, 0, 264, 279, 276,
	281, 201, 202, 199, 0, 0, 218, 0, 215, 213,
	247, 0, 249, 0, 0, 251, 238, -2, 266, 0,
	261, 273, 264, 271, 274, 280, 74, 0, 196, 0,
	220, 74, 74, 248, 245, 250, 263, 0, 275, 265,
	277, 197, 222, 74, 219, 217, 262, 200, 0, 224,
	74, 221, 0, 252, 74, 223, 0, 225, 0, 198,
}
var yyTok1 = [...]int{

	1,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 5
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:299
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:300
		{

		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:306
		{
			yyVAL.str = yyDollar[1].str
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:307
		{
			yyVAL.str = yyDollar[1].str
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:308
		{
			yyVAL.str = yyDollar[1].str
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:309
		{
			yyVAL.str = yyDollar[1].str
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:310
		{
			yyVAL.str = yyDollar[1].str
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:311
		{
			yyVAL.str = yyDollar[1].str
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:312
		{
			yyVAL.str = yyDollar[1].str
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:313
		{
			yyVAL.str = yyDollar[1].str
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:314
		{
			yyVAL.str = yyDollar[1].str
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:315
		{
			yyVAL.str = yyDollar[1].str
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:316
		{
			yyVAL.str = yyDollar[1].str
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:317
		{
			yyVAL.str = yyDollar[1].str
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:318
		{
			yyVAL.str = yyDollar[1].str
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:319
		{
			yyVAL.str = yyDollar[1].str
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:320
		{
			yyVAL.str = yyDollar[1].str
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:321
		{
			yyVAL.str = yyDollar[1].str
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:322
		{
			yyVAL.str = yyDollar[1].str
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:323
		{
			yyVAL.str = yyDollar[1].str
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:324
		{
			yyVAL.str = yyDollar[1].str
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:325
		{
			yyVAL.str = yyDollar[1].str
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:326
		{
			yyVAL.str = yyDollar[1].str
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:327
		{
			yyVAL.str = yyDollar[1].str
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:328
		{
			yyVAL.str = yyDollar[1].str
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:329
		{
			yyVAL.str = yyDollar[1].str
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:330
		{
			yyVAL.str = yyDollar[1].str
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:331
		{
			yyVAL.str = yyDollar[1].str
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:332
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:333
		{
			yyVAL.str = yyDollar[1].str
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:334
		{
			yyVAL.str = yyDollar[1].str
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:335
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:336
		{
			yyVAL.str = yyDollar[1].str
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:337
		{
			yyVAL.str = yyDollar[1].str
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:338
		{
			yyVAL.str = yyDollar[1].str
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:339
		{
			yyVAL.str = yyDollar[1].str
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:340
		{
			yyVAL.str = yyDollar[1].str
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:341
		{
			yyVAL.str = yyDollar[1].str
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:342
		{
			yyVAL.str = yyDollar[1].str
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:343
		{
			yyVAL.str = yyDollar[1].str
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:344
		{
			yyVAL.str = yyDollar[1].str
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:345
		{
			yyVAL.str = yyDollar[1].str
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:346
		{
			yyVAL.str = yyDollar[1].str
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:347
		{
			yyVAL.str = yyDollar[1].str
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:348
		{
			yyVAL.str = yyDollar[1].str
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:349
		{
			yyVAL.str = yyDollar[1].str
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:350
		{
			yyVAL.str = yyDollar[1].str
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:351
		{
			yyVAL.str = yyDollar[1].str
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:352
		{
			yyVAL.str = yyDollar[1].str
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:353
		{
			yyVAL.str = yyDollar[1].str
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:354
		{
			yyVAL.str = yyDollar[1].str
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:355
		{
			yyVAL.str = yyDollar[1].str
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:356
		{
			yyVAL.str = yyDollar[1].str
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:357
		{
			yyVAL.str = yyDollar[1].str
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:358
		{
			yyVAL.str = yyDollar[1].str
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:359
		{
			yyVAL.str = yyDollar[1].str
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:360
		{
			yyVAL.str = yyDollar[1].str
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:362
		{
			yyVAL.str = yyDollar[1].str
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:364
		{
			yyVAL.str = yyDollar[1].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:365
		{
			yyVAL.str = yyDollar[1].str
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:366
		{
			yyVAL.str = yyDollar[1].str
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:368
		{
			yyVAL.str = yyDollar[1].str
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:369
		{
			yyVAL.str = yyDollar[1].str
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:370
		{
			yyVAL.str = yyDollar[1].str
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:371
		{
			yyVAL.str = yyDollar[1].str
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:372
		{
			yyVAL.str = yyDollar[1].str
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:379
		{
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:380
		{
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:386
		{
			yyVAL.node = nil
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:388
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:390
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:392
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:394
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:396
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:398
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:400
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:402
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:404
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:406
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:408
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:410
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:412
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:414
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:420
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:435
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:442
		{
			yyVAL.str = "AND"
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:444
		{
			yyVAL.str = "OR"
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:446
		{
			yyVAL.str = "!="
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:448
		{
			yyVAL.str = "="
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:450
		{
			yyVAL.str = "<"
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:452
		{
			yyVAL.str = ">"
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:454
		{
			yyVAL.str = ">="
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:456
		{
			yyVAL.str = "<="
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:458
		{
			yyVAL.str = yyDollar[1].str
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:488
		{
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:489
		{
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:493
		{
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:496
		{
			yyVAL.str = ""
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:500
		{
			yyVAL.str = ""
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:508
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:516
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:519
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:522
		{
			yyVAL.node = yyDollar[2].node
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:525
		{
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:528
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:558
		{
			yyVAL.node = yyDollar[2].node
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:560
		{
			yyVAL.node = yyDollar[2].node
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:562
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:570
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:578
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:586
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:594
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:602
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:610
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:618
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:626
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:634
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:642
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:650
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:659
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:672
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:680
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:688
		{
			yyVAL.node = yyDollar[2].node
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:798
		{
			yyVAL.node = yyDollar[1].node
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:800
		{
			yyVAL.node = yyDollar[1].node
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:802
		{
			yyVAL.node = yyDollar[1].node
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:804
		{
			yyVAL.node = yyDollar[1].node
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:823
		{
			yyVAL.node = yyDollar[1].node
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:825
		{
			yyVAL.node = yyDollar[1].node
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:827
		{
			yyVAL.node = yyDollar[1].node
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:829
		{
			yyVAL.node = yyDollar[1].node
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:849
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[5].node,
				Op:    yyDollar[3].str,
			}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:857
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[6].node,
				Op:    yyDollar[3].str,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:976
		{
			yyVAL.node = yyDollar[1].node
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:978
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:980
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:984
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:994
		{
			/*
			 * The SQL spec only allows DEFAULT in "contextually typed
			 * expressions", but for us, it's easier to allow it in
			 * any a_expr and then throw error during parse analysis
			 * if it's in an inappropriate context.  This way also
			 * lets us say something smarter than "syntax error".
			 */

		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1008
		{
			yyVAL.node = &ColumnRef{
				ColName:    yyDollar[3].str,
				TableAlias: yyDollar[1].str,
			}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1016
		{
			yyVAL.node = &ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1020
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1028
		{ /* result not matter */
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1030
		{ /* result not matter */
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1032
		{ /* result not matter */
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1034
		{ /* result not matter */
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1036
		{ /* result not matter */
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1038
		{ /* result not matter */
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1040
		{ /* result not matter */
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1042
		{ /* result not matter */
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1044
		{ /* result not matter */
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1046
		{ /* result not matter */
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1048
		{ /* result not matter */
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1050
		{ /* result not matter */
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1052
		{ /* result not matter */
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1054
		{ /* result not matter */
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1055
		{ /* result not matter */
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1060
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1064
		{
			yyVAL.node = yyDollar[2].node
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1069
		{
			yyVAL.nodeList = yyDollar[1].nodeList
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1070
		{
			yyVAL.nodeList = nil
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1074
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1075
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1079
		{
			yyVAL.node = yyDollar[1].node
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1083
		{
			yyVAL.node = yyDollar[1].node
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1087
		{
			yyVAL.node = yyDollar[1].node
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1091
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1098
		{
			yyVAL.node = &VarSet{
				Name:  yyDollar[2].str,
				Value: yyDollar[4].str,
			}
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1104
		{
			yyVAL.node = &VarSet{
				IsLocal: true,
				Name:    yyDollar[3].str,
				Value:   yyDollar[5].str,
			}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1111
		{
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1112
		{
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1117
		{
			yyVAL.node = &Begin{}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1126
		{
			yyVAL.node = &Commit{}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1135
		{
			yyVAL.node = &Rollback{}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1143
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1151
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1158
		{
			yyVAL.node = yyDollar[1].node
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1160
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1162
		{
			yyVAL.node = yyDollar[1].node
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1164
		{
			yyVAL.node = yyDollar[1].node
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1166
		{
			yyVAL.node = yyDollar[1].node
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1168
		{
			yyVAL.node = &Explain{
				Stmt: yyDollar[2].node,
			}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1175
		{
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1176
		{
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1179
		{
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1180
		{
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1183
		{
			yyVAL.tableelt = []TableElt{{
				ColName: yyDollar[1].str,
				ColType: yyDollar[2].str,
			},
			}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1190
		{
			yyVAL.tableelt = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1193
		{
			yyVAL.tableelt = append(yyDollar[1].tableelt, yyDollar[3].tableelt...)
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1198
		{
			yyVAL.node = &CreateTable{
				TableName: yyDollar[3].str,
				TableElts: yyDollar[5].tableelt,
			}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1203
		{
			yyVAL.node = &Index{}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1207
		{
			yyVAL.node = &CreateRole{}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1211
		{
			yyVAL.node = &CreateDatabase{}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1218
		{
			yyVAL.node = &Alter{}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1225
		{
			yyVAL.node = &Vacuum{}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1232
		{
			yyVAL.node = &Cluster{}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1240
		{
			yyVAL.node = &Analyze{}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1247
		{
			yyVAL.node = &Drop{}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1255
		{
			yyVAL.node = &Truncate{}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1262
		{
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1262
		{
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1263
		{
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1263
		{
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1264
		{
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1264
		{
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1265
		{
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1265
		{
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1266
		{
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1266
		{
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1267
		{
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1267
		{
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1268
		{
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1268
		{
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1274
		{
			yyVAL.from_list = yyDollar[2].from_list
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1275
		{
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1279
		{
			yyVAL.from_list = []FromClauseNode{yyDollar[1].from}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1280
		{
			yyVAL.from_list = append(yyDollar[1].from_list, yyDollar[3].from)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1284
		{
			yyVAL.tableref = &RangeVar{
				SchemaName:   "",
				RelationName: yyDollar[1].str,
				Alias:        "",
			}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1291
		{
			yyVAL.tableref = &RangeVar{
				SchemaName:   yyDollar[1].str,
				RelationName: yyDollar[3].str,
				Alias:        "",
			}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1301
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1305
		{
			yyVAL.str = yyDollar[1].str
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1311
		{
			yyVAL.str = ""
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1319
		{
			yyDollar[1].tableref.SetAlias(yyDollar[2].str)
			yyVAL.from = yyDollar[1].tableref
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1324
		{
			yyVAL.from = yyDollar[1].tableref
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1328
		{
			yyDollar[2].tableref.SetAlias(yyDollar[4].str)
			yyVAL.from = yyDollar[2].tableref
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1336
		{
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1337
		{
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1341
		{
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1342
		{
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1343
		{
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1344
		{
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1355
		{

		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1363
		{
			yyVAL.tableref = yyDollar[2].tableref
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1367
		{
			/* CROSS JOIN is same as unqualified inner join */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1375
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1382
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[3].from,
			}
		}
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1390
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[5].from,
			}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1397
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lyx/gram.y:1412
		{
			yyVAL.node = &Select{
				FromClause: yyDollar[3].from_list,
				Where:      yyDollar[4].node,
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1418
		{
			yyVAL.node = &Select{
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1426
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1427
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1432
		{
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1432
		{
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1435
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1441
		{
			yyVAL.strlist = nil
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1444
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1452
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1454
		{
			yyVAL.nodeList = append(yyDollar[3].nodeList, yyDollar[1].node)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1459
		{
			yyVAL.nodeList = yyDollar[2].nodeList
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1465
		{
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1466
		{
		}
	case 266:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1472
		{
			yyVAL.node = &Insert{
				TableRef: yyDollar[3].tableref,
				Columns:  yyDollar[4].strlist,
				Values:   yyDollar[6].nodeList,
			}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1478
		{
			yyVAL.node = &Insert{
				TableRef:  yyDollar[3].tableref,
				Columns:   yyDollar[4].strlist,
				SubSelect: yyDollar[5].node,
			}
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1487
		{
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1488
		{
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1491
		{
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1492
		{
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1498
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1499
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1504
		{
			yyVAL.str = yyDollar[1].str
		}
	case 275:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lyx/gram.y:1514
		{
			yyVAL.node = &Update{
				TableRef: yyDollar[3].tableref,
				Where:    yyDollar[7].node,
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1525
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1526
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1531
		{
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1532
		{
		}
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1536
		{
			yyVAL.node = &Delete{
				TableRef: yyDollar[4].tableref,
				Where:    yyDollar[6].node,
			}
		}
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1545
		{
			yyVAL.node = &Copy{
				TableRef: yyDollar[2].tableref,
				Where:    yyDollar[6].node,
				IsFrom:   false,
			}
		}
	}
	goto yystack /* stack new state and value */
}
