// Code generated by goyacc -o lyx/gram.go -p yy lyx/gram.y. DO NOT EDIT.

//line lyx/gram.y:3
package lyx

import __yyfmt__ "fmt"

//line lyx/gram.y:3

import (
	"crypto/rand"
	"encoding/hex"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

//line lyx/gram.y:21
type yySymType struct {
	yys     int
	str     string
	strlist []string
	byte    byte
	bytes   []byte
	int     int
	bool    bool
	empty   struct{}

	node      Node
	from_list []FromClauseNode
	from      FromClauseNode
	tableelt  []TableElt
	tableref  FromClauseNode

	selectStmt *Select

	nodeList []Node
}

const SCONST = 57346
const IDENT = 57347
const CREATE = 57348
const ALTER = 57349
const ROLE = 57350
const DATABASE = 57351
const NATURAL = 57352
const TABLE = 57353
const INDEX = 57354
const SELECT = 57355
const UPDATE = 57356
const INSERT = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const AND = 57361
const VALUES = 57362
const OR = 57363
const EXPLAIN = 57364
const EXECUTE = 57365
const PREPARE = 57366
const BEGIN = 57367
const COMMIT = 57368
const ROLLBACK = 57369
const VACUUM = 57370
const CLUSTER = 57371
const ANALYZE = 57372
const INTO = 57373
const OUTER_P = 57374
const FULL = 57375
const RIGHT = 57376
const LEFT = 57377
const INNER_P = 57378
const DROP = 57379
const TRUNCATE = 57380
const FETCH = 57381
const FOR = 57382
const ORDER = 57383
const GROUP = 57384
const BY = 57385
const OFFSET = 57386
const LIMIT = 57387
const WINDOW = 57388
const CROSS = 57389
const SET = 57390
const RESET = 57391
const LOCAL = 57392
const ALL = 57393
const PRIMARY = 57394
const KEY = 57395
const FOREIGN = 57396
const REFERENCES = 57397
const USING = 57398
const TCOLON = 57399
const TCOMMA = 57400
const TOPENBR = 57401
const TCLOSEBR = 57402
const TSQOPENBR = 57403
const TSQCLOSEBR = 57404
const TSEMICOLON = 57405
const TNOT_EQUALS = 57406
const TDOT = 57407
const NULL_P = 57408
const ISNULL = 57409
const ON = 57410
const JOIN = 57411
const TPLUS = 57412
const TMINUS = 57413
const TMUL = 57414
const TDIV = 57415
const TGREATER = 57416
const TGREATER_EQUALS = 57417
const TLESS = 57418
const TLESS_EQUALS = 57419
const TMOD = 57420
const TPOW = 57421
const DELIMITERS = 57422
const PROGRAM = 57423
const STDIN = 57424
const FALSE_P = 57425
const TRUE_P = 57426
const copy_generic_opt_list = 57427
const BINARY = 57428
const FREEZE = 57429
const DELIMITER = 57430
const CSV = 57431
const HEADER_P = 57432
const QUOTE = 57433
const ESCAPE = 57434
const FORCE = 57435
const ENCODING = 57436
const TEQ = 57437
const OP = 57438
const ONLY = 57439
const RETURNING = 57440
const COPY = 57441
const ARRAY = 57442
const IS = 57443
const NOT = 57444
const NULL = 57445
const DISTINCT = 57446
const DEFAULT = 57447
const NORMALIZED = 57448
const NOTNULL = 57449
const DOCUMENT_P = 57450
const ASYMMETRIC = 57451
const ASC = 57452
const DESC = 57453
const NULLS_LA = 57454
const FIRST_P = 57455
const LAST_P = 57456
const TO = 57457
const STDOUT = 57458
const LATERAL_P = 57459
const ORDINALITY = 57460
const WITH_LA = 57461
const COLLATE = 57462
const AS = 57463
const UNION = 57464
const EXCEPT = 57465
const INTERSECT = 57466
const BETWEEN = 57467
const IN_P = 57468
const LIKE = 57469
const ILIKE = 57470
const SIMILAR = 57471
const NOT_LA = 57472
const UNBOUNDED = 57473
const PARTITION = 57474
const RANGE = 57475
const ROWS = 57476
const GROUPS = 57477
const PRECEDING = 57478
const FOLLOWING = 57479
const CUBE = 57480
const ROLLUP = 57481
const Op = 57482
const OPERATOR = 57483
const AT = 57484
const UMINUS = 57485
const TYPECAST = 57486

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SCONST",
	"IDENT",
	"CREATE",
	"ALTER",
	"ROLE",
	"DATABASE",
	"NATURAL",
	"TABLE",
	"INDEX",
	"SELECT",
	"UPDATE",
	"INSERT",
	"DELETE",
	"FROM",
	"WHERE",
	"AND",
	"VALUES",
	"OR",
	"EXPLAIN",
	"EXECUTE",
	"PREPARE",
	"BEGIN",
	"COMMIT",
	"ROLLBACK",
	"VACUUM",
	"CLUSTER",
	"ANALYZE",
	"INTO",
	"OUTER_P",
	"FULL",
	"RIGHT",
	"LEFT",
	"INNER_P",
	"DROP",
	"TRUNCATE",
	"FETCH",
	"FOR",
	"ORDER",
	"GROUP",
	"BY",
	"OFFSET",
	"LIMIT",
	"WINDOW",
	"CROSS",
	"SET",
	"RESET",
	"LOCAL",
	"ALL",
	"PRIMARY",
	"KEY",
	"FOREIGN",
	"REFERENCES",
	"USING",
	"TCOLON",
	"TCOMMA",
	"TOPENBR",
	"TCLOSEBR",
	"TSQOPENBR",
	"TSQCLOSEBR",
	"TSEMICOLON",
	"TNOT_EQUALS",
	"TDOT",
	"NULL_P",
	"ISNULL",
	"ON",
	"JOIN",
	"TPLUS",
	"TMINUS",
	"TMUL",
	"TDIV",
	"TGREATER",
	"TGREATER_EQUALS",
	"TLESS",
	"TLESS_EQUALS",
	"TMOD",
	"TPOW",
	"DELIMITERS",
	"PROGRAM",
	"STDIN",
	"FALSE_P",
	"TRUE_P",
	"copy_generic_opt_list",
	"BINARY",
	"FREEZE",
	"DELIMITER",
	"CSV",
	"HEADER_P",
	"QUOTE",
	"ESCAPE",
	"FORCE",
	"ENCODING",
	"TEQ",
	"OP",
	"ONLY",
	"RETURNING",
	"COPY",
	"ARRAY",
	"IS",
	"NOT",
	"NULL",
	"DISTINCT",
	"DEFAULT",
	"NORMALIZED",
	"NOTNULL",
	"DOCUMENT_P",
	"ASYMMETRIC",
	"ASC",
	"DESC",
	"NULLS_LA",
	"FIRST_P",
	"LAST_P",
	"TO",
	"STDOUT",
	"LATERAL_P",
	"ORDINALITY",
	"WITH_LA",
	"COLLATE",
	"AS",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"BETWEEN",
	"IN_P",
	"LIKE",
	"ILIKE",
	"SIMILAR",
	"NOT_LA",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"CUBE",
	"ROLLUP",
	"Op",
	"OPERATOR",
	"AT",
	"UMINUS",
	"TYPECAST",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lyx/gram.y:2070

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 160,
	59, 107,
	-2, 258,
	-1, 241,
	59, 107,
	-2, 258,
	-1, 248,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 147,
	-1, 249,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 148,
	-1, 250,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 149,
	-1, 251,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 150,
	-1, 252,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 151,
	-1, 253,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 152,
	-1, 310,
	59, 258,
	-2, 91,
	-1, 378,
	67, 0,
	101, 0,
	107, 0,
	-2, 165,
	-1, 433,
	67, 0,
	101, 0,
	107, 0,
	-2, 166,
	-1, 434,
	125, 0,
	-2, 167,
	-1, 441,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 185,
	-1, 442,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 186,
	-1, 443,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 187,
	-1, 444,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 188,
	-1, 445,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 189,
	-1, 446,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 190,
	-1, 457,
	80, 329,
	-2, 377,
}

const yyPrivate = 57344

const yyLast = 1272

var yyAct = [...]int{

	157, 57, 305, 349, 534, 490, 230, 500, 484, 140,
	59, 493, 428, 416, 224, 344, 454, 404, 427, 233,
	423, 457, 342, 350, 307, 287, 180, 406, 159, 50,
	52, 54, 56, 129, 130, 131, 132, 306, 137, 295,
	17, 366, 237, 206, 139, 235, 163, 20, 19, 18,
	234, 535, 169, 213, 51, 494, 171, 310, 172, 485,
	173, 316, 241, 376, 458, 548, 549, 532, 347, 195,
	193, 196, 352, 198, 265, 455, 182, 183, 184, 185,
	189, 192, 188, 191, 186, 187, 182, 183, 184, 185,
	164, 194, 317, 402, 186, 187, 227, 170, 187, 525,
	499, 190, 194, 407, 385, 215, 425, 197, 541, 319,
	318, 150, 194, 199, 193, 194, 238, 198, 43, 556,
	182, 183, 184, 185, 189, 192, 188, 191, 186, 187,
	320, 200, 322, 539, 321, 167, 176, 177, 178, 362,
	361, 200, 459, 280, 540, 190, 194, 37, 39, 38,
	40, 197, 210, 203, 204, 205, 22, 199, 209, 207,
	509, 510, 168, 214, 214, 561, 348, 214, 153, 160,
	304, 543, 555, 308, 236, 200, 460, 380, 381, 382,
	383, 225, 214, 142, 330, 384, 385, 471, 331, 496,
	486, 375, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 324, 220, 310,
	240, 272, 217, 212, 216, 223, 222, 221, 214, 271,
	218, 276, 333, 149, 229, 477, 270, 478, 332, 471,
	154, 476, 285, 41, 143, 144, 309, 409, 225, 214,
	544, 292, 286, 471, 409, 472, 408, 156, 155, 502,
	184, 185, 430, 269, 382, 383, 186, 187, 314, 303,
	384, 385, 415, 371, 151, 240, 145, 240, 282, 146,
	182, 183, 184, 185, 194, 397, 181, 329, 186, 187,
	337, 313, 311, 373, 343, 351, 284, 398, 257, 399,
	353, 181, 354, 279, 214, 228, 194, 214, 298, 300,
	299, 301, 211, 507, 353, 260, 259, 370, 456, 372,
	293, 370, 309, 360, 267, 504, 363, 400, 345, 335,
	288, 463, 240, 356, 258, 240, 261, 414, 263, 51,
	262, 281, 179, 378, 365, 358, 466, 364, 51, 506,
	395, 368, 369, 467, 359, 291, 418, 546, 405, 374,
	528, 403, 367, 162, 3, 334, 412, 231, 377, 323,
	419, 420, 214, 214, 165, 37, 214, 215, 401, 289,
	51, 355, 429, 340, 429, 55, 328, 49, 312, 411,
	410, 421, 422, 53, 266, 426, 175, 433, 553, 434,
	240, 240, 431, 552, 240, 42, 551, 550, 447, 450,
	432, 542, 513, 343, 297, 482, 166, 449, 452, 489,
	351, 531, 453, 44, 45, 46, 47, 48, 464, 37,
	39, 38, 40, 451, 508, 503, 214, 298, 300, 299,
	301, 429, 462, 461, 469, 413, 152, 208, 328, 328,
	225, 294, 264, 468, 473, 470, 161, 1, 325, 475,
	545, 527, 135, 136, 240, 133, 134, 480, 505, 405,
	465, 417, 424, 296, 357, 290, 302, 341, 488, 479,
	339, 338, 429, 483, 481, 514, 58, 491, 501, 487,
	283, 278, 396, 448, 492, 277, 495, 497, 336, 158,
	148, 498, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 138, 225, 512, 526, 529, 511,
	325, 325, 21, 530, 147, 239, 219, 491, 14, 533,
	13, 12, 11, 536, 10, 16, 537, 538, 15, 6,
	547, 5, 4, 9, 392, 393, 8, 7, 346, 315,
	351, 274, 351, 554, 232, 557, 174, 558, 559, 2,
	0, 0, 0, 0, 0, 0, 518, 351, 0, 0,
	560, 0, 0, 0, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 515, 516, 517, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	60, 61, 82, 83, 90, 91, 0, 71, 89, 62,
	63, 64, 65, 66, 67, 68, 70, 69, 72, 73,
	74, 75, 76, 77, 84, 85, 86, 95, 0, 0,
	0, 379, 0, 87, 88, 99, 98, 92, 93, 94,
	97, 96, 0, 118, 78, 79, 80, 81, 110, 108,
	109, 111, 0, 103, 102, 100, 101, 0, 0, 105,
	127, 0, 0, 0, 122, 117, 113, 0, 112, 116,
	125, 126, 123, 124, 114, 115, 391, 0, 0, 121,
	120, 0, 380, 381, 382, 383, 387, 390, 386, 389,
	384, 385, 128, 104, 107, 0, 0, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 226, 474, 82, 83, 90, 91, 106, 71, 89,
	62, 63, 64, 65, 66, 67, 68, 70, 69, 72,
	73, 74, 75, 76, 77, 84, 85, 86, 95, 0,
	0, 0, 0, 0, 87, 88, 99, 98, 92, 93,
	94, 97, 96, 0, 118, 78, 79, 80, 81, 110,
	108, 109, 111, 0, 103, 102, 100, 101, 0, 0,
	105, 127, 0, 0, 0, 122, 117, 113, 0, 112,
	116, 125, 126, 123, 124, 114, 115, 0, 0, 0,
	121, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 104, 107, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 82, 83, 90, 91, 106, 71,
	89, 62, 63, 64, 65, 66, 67, 68, 70, 69,
	72, 73, 74, 75, 76, 77, 84, 85, 86, 95,
	0, 153, 160, 0, 0, 87, 88, 99, 98, 92,
	93, 94, 97, 96, 0, 118, 78, 79, 80, 81,
	110, 108, 109, 111, 0, 103, 102, 100, 101, 0,
	0, 105, 127, 0, 202, 297, 122, 117, 113, 0,
	112, 116, 125, 126, 123, 124, 114, 115, 195, 0,
	196, 121, 120, 0, 0, 0, 149, 0, 298, 300,
	299, 301, 0, 154, 128, 104, 107, 326, 327, 119,
	0, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	156, 155, 0, 0, 0, 0, 195, 0, 196, 106,
	0, 0, 0, 193, 296, 0, 198, 151, 0, 182,
	183, 184, 185, 189, 192, 188, 191, 186, 187, 0,
	0, 0, 0, 0, 0, 0, 153, 160, 0, 0,
	0, 0, 0, 0, 190, 194, 0, 394, 0, 0,
	197, 193, 0, 0, 198, 0, 199, 182, 183, 184,
	185, 189, 192, 188, 191, 186, 187, 0, 0, 195,
	201, 196, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 190, 194, 0, 0, 0, 0, 197, 0,
	0, 149, 273, 0, 199, 0, 0, 0, 154, 0,
	0, 0, 143, 144, 275, 0, 0, 195, 0, 196,
	268, 0, 200, 0, 193, 156, 155, 198, 0, 0,
	182, 183, 184, 185, 189, 192, 188, 191, 186, 187,
	0, 0, 151, 0, 145, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 190, 194, 0, 195, 0,
	0, 197, 193, 0, 0, 198, 0, 199, 182, 183,
	184, 185, 189, 192, 188, 191, 186, 187, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 190, 194, 0, 0, 0, 0, 197,
	0, 0, 0, 193, 0, 199, 198, 0, 0, 182,
	183, 184, 185, 189, 192, 188, 191, 186, 187, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 153,
	160, 0, 0, 0, 190, 194, 0, 153, 160, 0,
	197, 193, 0, 0, 0, 0, 199, 182, 183, 184,
	185, 189, 192, 188, 191, 186, 187, 0, 35, 36,
	0, 0, 0, 0, 200, 37, 39, 38, 40, 0,
	0, 0, 190, 194, 22, 26, 29, 23, 24, 25,
	30, 31, 32, 0, 149, 0, 0, 0, 0, 34,
	33, 154, 149, 0, 0, 143, 144, 141, 0, 154,
	27, 28, 200, 143, 144, 0, 0, 0, 156, 155,
	0, 0, 0, 0, 0, 0, 156, 155, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 145, 0, 0,
	146, 0, 0, 151, 0, 145, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41,
}
var yyPact = [...]int{

	1172, -1000, 55, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55, 55, 55,
	55, 55, 134, -1000, -1000, -1000, 365, 333, 324, 365,
	596, 596, 596, 596, 596, 444, 596, 1145, 322, -7,
	347, 76, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	596, -1000, 2, 365, -1000, -1000, 596, -1000, 596, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 381, 596, 596, 596, -1000, 274, -1000,
	879, -1000, -1000, 1153, 1153, 1153, -1000, -1000, -1000, 1153,
	-1000, 97, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	87, 243, 362, 362, -1000, -7, 362, 406, -1000, -1000,
	818, 1, -1000, -1000, 236, -1000, -1000, -1000, -1000, 1145,
	339, 57, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153,
	1153, 1153, 1153, 1153, 1153, 1153, 1153, 222, -1000, -1000,
	-35, 379, -1000, 178, 178, 6, 256, 980, -1000, 164,
	362, 962, 234, -1000, 78, -1000, 283, 362, 227, 172,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 818, 315, -1000,
	303, 1153, 252, 875, 49, 52, 373, -1000, 57, -58,
	-1000, -1000, 178, 178, 19, 19, 19, -5, 16, 16,
	16, 16, 16, 16, 1018, 6, 1059, -1000, 26, -1000,
	-1000, 342, -1000, -1000, 847, -1000, -1000, 1153, -1000, 126,
	-1000, 1018, -1000, -1000, 168, 162, 1018, 335, 352, 362,
	368, 365, 262, 51, 362, -43, -1000, 232, 366, 270,
	289, 301, 1018, 57, 71, 70, 57, 265, 320, 320,
	320, -1000, -1000, -1000, 365, -1000, -1000, -1000, 204, 224,
	-1000, 52, -1000, 131, 875, -1000, -55, -1000, -1000, -1000,
	341, -1000, -1000, 1153, 612, -1000, 847, 847, -1000, 917,
	1153, -1000, -1000, -1000, 216, -1000, 229, -1000, -1000, -1000,
	-1000, 259, -1000, -2, 339, 365, 22, -1000, -1000, 186,
	-1000, -1000, 22, 315, 596, 275, 203, 305, 596, 596,
	875, 57, 57, 394, 37, 57, -1000, -1000, -1000, -1000,
	-1000, 362, 193, 362, -1000, 49, -1000, 1153, 1097, 1153,
	847, 847, 847, 847, 847, 847, 847, 847, 847, 847,
	847, 847, 182, 182, -1000, 1018, 596, 1153, 362, -1000,
	365, 339, 1153, -23, -1000, 250, 60, -1000, -1000, 362,
	60, 246, -1000, -1000, 268, 365, 291, -1000, 300, -1000,
	-1000, -1000, 394, -1000, 1153, 57, -1000, 185, -1000, 707,
	362, 171, -1000, 1097, 200, 182, 182, 25, 25, 25,
	-1000, 107, 107, 107, 107, 107, 107, -1000, 167, 1018,
	-1000, -1000, -23, 1018, -1000, 596, 365, 262, -1000, -1000,
	-1000, -1000, -60, -1000, 130, 305, 596, 1153, -1000, 1018,
	-1000, 362, -1000, -65, -65, 129, -1000, 1153, -1000, -1000,
	-1000, -1000, -60, 20, 190, -1000, 260, 295, -1000, 245,
	-1000, 50, -1000, -1000, 818, -1000, -1000, 1018, 190, 398,
	-1000, 490, 14, -1000, 365, 311, 596, 1153, -45, -1000,
	-1000, -1000, 339, -1000, -1000, -1000, -1000, -70, -70, -1000,
	-1000, -70, -70, 42, 397, 111, 181, 307, 596, -1000,
	-1000, -1000, -48, -1000, 393, -1000, 392, 389, 384, 100,
	53, 362, -1000, -1000, 365, -1000, 596, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 179, -1000, 362, 179, 105, -1000,
	179, -1000,
}
var yyPgo = [...]int{

	0, 549, 354, 2, 14, 546, 27, 6, 26, 544,
	19, 50, 42, 541, 539, 538, 538, 37, 9, 183,
	207, 10, 537, 40, 49, 48, 47, 536, 533, 532,
	531, 529, 528, 525, 524, 522, 521, 520, 518, 395,
	516, 11, 28, 45, 515, 514, 512, 44, 512, 504,
	490, 489, 43, 0, 488, 485, 483, 482, 481, 3,
	480, 480, 480, 478, 476, 23, 476, 476, 475, 7,
	471, 470, 470, 53, 15, 17, 467, 25, 46, 466,
	24, 1, 22, 466, 12, 18, 466, 465, 464, 461,
	460, 458, 451, 450, 447, 446, 111, 442, 437, 436,
	435, 425, 424, 411, 13, 409, 5, 41, 39, 20,
	409, 16, 409, 406, 406, 4, 8, 21, 405,
}
var yyR1 = [...]int{

	0, 94, 39, 39, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 64, 64, 64, 81, 81, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 5, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 41, 41, 95, 86, 86,
	85, 85, 84, 84, 42, 42, 42, 13, 16, 16,
	45, 45, 45, 45, 96, 52, 52, 97, 97, 98,
	98, 99, 19, 19, 19, 19, 19, 19, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 51, 50, 50, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 7, 7, 48, 48, 49, 49, 47, 47,
	47, 47, 27, 27, 27, 27, 29, 30, 31, 22,
	28, 2, 2, 2, 2, 2, 2, 100, 100, 101,
	101, 77, 77, 77, 32, 32, 32, 32, 33, 34,
	35, 36, 38, 37, 102, 102, 102, 103, 103, 103,
	104, 104, 89, 105, 105, 106, 87, 87, 88, 88,
	90, 90, 91, 91, 92, 92, 93, 93, 53, 71,
	70, 72, 73, 73, 8, 8, 9, 9, 11, 80,
	80, 79, 79, 44, 14, 14, 17, 17, 17, 17,
	17, 43, 10, 10, 10, 10, 10, 107, 107, 108,
	108, 108, 108, 109, 12, 12, 12, 12, 12, 12,
	23, 23, 54, 54, 110, 110, 55, 60, 60, 65,
	59, 59, 58, 58, 56, 56, 57, 111, 111, 24,
	24, 78, 78, 76, 76, 82, 25, 75, 75, 74,
	74, 26, 112, 112, 112, 112, 113, 113, 61, 61,
	66, 114, 114, 114, 114, 62, 62, 67, 69, 69,
	63, 63, 115, 115, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 15, 15, 6,
	6, 116, 116, 117, 117, 117, 118, 118, 40, 40,
	40, 40, 46, 46,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 0, 1, 1, 0,
	1, 3, 3, 3, 3, 4, 4, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 3, 1, 0, 3,
	2, 5, 1, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 2, 4,
	2, 3, 4, 3, 4, 5, 6, 6, 3, 4,
	3, 4, 1, 3, 1, 1, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 4, 5, 2, 2, 1, 1, 1, 3,
	3, 2, 2, 2, 2, 2, 2, 0, 2, 0,
	5, 3, 6, 3, 7, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 2, 0,
	1, 0, 3, 1, 3, 3, 0, 3, 0, 2,
	0, 2, 0, 2, 0, 2, 0, 2, 1, 1,
	1, 1, 1, 3, 2, 0, 1, 3, 1, 2,
	1, 0, 1, 1, 2, 0, 1, 4, 5, 4,
	0, 2, 2, 2, 3, 1, 4, 1, 0, 2,
	2, 2, 1, 2, 3, 4, 5, 4, 5, 4,
	12, 2, 1, 3, 0, 1, 3, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 0, 2, 7,
	5, 0, 1, 1, 3, 3, 8, 1, 3, 0,
	2, 7, 1, 1, 1, 1, 1, 0, 1, 3,
	2, 1, 1, 3, 0, 1, 3, 1, 1, 3,
	2, 0, 1, 0, 1, 1, 3, 3, 1, 1,
	3, 3, 3, 3, 4, 3, 2, 1, 1, 1,
	0, 1, 0, 1, 1, 1, 3, 0, 1, 1,
	1, 1, 11, 9,
}
var yyChk = [...]int{

	-1000, -94, -1, -2, -29, -30, -31, -22, -27, -28,
	-34, -35, -36, -37, -38, -32, -33, -23, -24, -25,
	-26, -46, 22, 25, 26, 27, 23, 48, 49, 24,
	28, 29, 30, 38, 37, 6, 7, 13, 15, 14,
	16, 99, -39, 63, -39, -39, -39, -39, -39, -2,
	-3, 5, -3, 50, -3, 51, -3, -81, -64, -21,
	4, 5, 13, 14, 15, 16, 17, 18, 19, 21,
	20, 11, 22, 23, 24, 25, 26, 27, 48, 49,
	50, 51, 6, 7, 28, 29, 30, 37, 38, 12,
	8, 9, 41, 42, 43, 31, 45, 44, 40, 39,
	59, 60, 58, 57, 97, 63, 121, 98, 53, 54,
	52, 55, 72, 70, 78, 79, 73, 69, 47, 101,
	84, 83, 68, 76, 77, 74, 75, 64, 96, -81,
	-81, -81, -81, 11, 12, 8, 9, -81, -49, -47,
	-18, 72, -19, 70, 71, 102, 105, -45, -50, 59,
	-96, 100, -99, 4, 66, 84, 83, -53, -51, -42,
	5, -95, 31, -78, 97, 17, -113, 59, 86, -81,
	95, -3, -81, -81, -5, 5, -81, -81, -81, 58,
	-8, 17, 70, 71, 72, 73, 78, 79, 76, 74,
	95, 77, 75, 64, 96, 19, 21, 101, 67, 107,
	125, 121, 5, -18, -18, -18, -52, -18, -98, 61,
	65, 59, -11, -73, -53, 5, -11, -78, -73, -40,
	-23, -24, -25, -26, -4, -21, 4, 95, 59, -47,
	-7, 18, -9, -10, -11, -43, 117, -12, 59, -44,
	-42, 5, -18, -18, -18, -18, -18, -18, -18, -18,
	-18, -18, -18, -18, -18, -18, -18, 66, 102, 84,
	83, 104, 108, 106, -97, 109, 5, 58, 60, -52,
	62, -18, -53, 60, -13, 72, -18, -55, -58, 59,
	65, 48, -11, -60, 59, 60, -4, -77, 5, 54,
	-87, 42, -18, 58, 47, -108, 69, 10, 33, 35,
	34, 36, -79, -80, 121, -3, -17, -80, 121, -53,
	5, -43, 5, -12, -10, -14, 119, 66, 84, 83,
	104, 108, 106, 17, -20, -19, 70, 71, -96, -18,
	58, 62, 60, 60, 20, -23, -54, -53, -70, -71,
	5, -76, -82, -3, -74, 56, -15, 17, 115, -59,
	-65, -53, 115, 58, 60, 5, 53, -88, 46, 43,
	-10, 69, 69, -10, -108, 69, -107, 32, -107, -107,
	-3, 59, -53, 59, -17, 60, 118, 17, -18, 19,
	70, 71, 72, 73, 78, 79, 76, 74, 95, 77,
	75, 64, -20, -20, 60, -18, -57, 59, 58, 60,
	58, -8, 95, -7, -75, -3, -6, 81, 60, 58,
	-6, -77, -81, -100, 52, 59, -104, -89, 41, -81,
	-81, -10, -10, -109, 68, 69, -10, -85, -84, -53,
	59, -85, -80, -18, -18, -20, -20, -20, -20, -20,
	-20, -20, -20, -20, -20, -20, -20, -81, -56, -18,
	-53, -82, -7, -18, -111, 98, 58, -117, 4, 82,
	116, -65, -117, 53, -3, -90, 45, 43, -109, -18,
	-10, 58, 60, -4, 5, -85, 60, 58, 60, -111,
	-81, -75, -118, -74, -116, 119, 60, -104, -81, -105,
	-106, -18, -84, -41, 120, -41, 60, -18, -116, 80,
	-69, -63, 59, -101, 55, -91, 44, 58, -102, 110,
	111, -4, -69, 4, -68, 86, 87, 88, 66, 89,
	90, 91, 92, 93, 94, 85, -3, -92, 39, -81,
	-106, -103, 112, -7, -115, 121, -115, -115, -115, 91,
	102, 66, 4, 60, 59, -93, 40, -81, 113, 114,
	4, 4, 4, 4, -59, 72, 66, -59, -3, -81,
	-59, 60,
}
var yyDef = [...]int{

	76, -2, 2, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 2, 2, 2,
	2, 2, 0, 206, 207, 208, 0, 0, 0, 0,
	74, 74, 74, 74, 74, 0, 74, 0, 0, 321,
	0, 337, 1, 3, 211, 212, 213, 214, 215, 216,
	74, 91, 0, 0, 204, 205, 74, 229, 74, 71,
	72, 73, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 230,
	231, 233, 232, 0, 74, 74, 74, 228, 265, 196,
	200, 201, 138, 0, 0, 0, 172, 132, 133, 0,
	135, 0, 137, 120, 121, 122, 123, 174, 175, 124,
	-2, 0, 0, 0, 322, 321, 0, 0, 336, 209,
	0, 0, 210, 75, 0, 94, 225, 226, 227, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 160,
	128, 0, 199, 139, 140, 156, 0, 125, 136, 0,
	0, 0, 312, 268, 262, 258, 0, 0, 308, 0,
	378, 379, 380, 381, 202, 92, 93, 0, 0, 197,
	246, 0, 264, 266, 271, 280, 0, 285, 0, 275,
	273, -2, 141, 142, 143, 144, 145, 146, -2, -2,
	-2, -2, -2, -2, 153, 154, 155, 157, 0, 161,
	163, 0, 168, 170, 0, 127, 198, 0, 134, 0,
	130, 125, 173, 114, 0, 0, 117, 313, 0, 0,
	0, 0, 329, 0, 0, 0, 203, 0, 0, 0,
	248, 0, 193, 0, 0, 0, 0, 0, 288, 288,
	288, 292, 282, 272, 0, 270, 283, 276, 0, 0,
	-2, 280, 107, 285, 0, 281, 0, 159, 162, 164,
	0, 169, 171, 0, 0, 176, 0, 0, 135, 126,
	0, 129, 115, 116, 0, 320, 0, 302, 263, 260,
	259, 265, 323, 0, 192, 0, 370, 367, 368, 0,
	310, 309, 370, 0, 74, 217, 0, 241, 74, 74,
	267, 0, 0, 0, 0, 0, 289, 287, 290, 291,
	269, 0, 0, 0, 284, 294, 274, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 178, 131, 126, 74, 0, 0, 306,
	0, 192, 0, 317, 330, 327, 0, 369, 307, 0,
	0, 223, 224, 221, 0, 0, 250, 240, 0, 249,
	247, 295, 0, 297, 0, 0, 299, 0, 110, 0,
	0, 0, 286, -2, -2, 179, 180, 181, 182, 183,
	184, -2, -2, -2, -2, -2, -2, 319, 0, 314,
	303, 324, 317, 325, 331, 74, 0, -2, 373, 374,
	375, 311, 372, 218, 0, 241, 74, 0, 296, 293,
	298, 0, 277, 106, 106, 0, 279, 0, 316, 326,
	318, 328, 372, 0, 351, 371, 219, 252, 251, 242,
	243, 236, 111, 112, 0, 113, 278, 315, 351, 0,
	383, 348, 0, 222, 0, 254, 74, 0, 239, 234,
	235, 105, 192, 376, 350, 354, 355, 353, 353, 358,
	359, 353, 353, 0, 0, 0, 0, 256, 74, 253,
	244, 245, 0, 382, 0, 352, 0, 0, 0, 0,
	0, 0, 366, 349, 0, 300, 74, 255, 237, 238,
	356, 357, 360, 361, 362, 363, 0, 365, 0, 257,
	364, 220,
}
var yyTok1 = [...]int{

	1,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:349
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:350
		{

		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:356
		{
			yyVAL.str = yyDollar[1].str
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:357
		{
			yyVAL.str = yyDollar[1].str
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:358
		{
			yyVAL.str = yyDollar[1].str
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:359
		{
			yyVAL.str = yyDollar[1].str
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:360
		{
			yyVAL.str = yyDollar[1].str
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:362
		{
			yyVAL.str = yyDollar[1].str
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:364
		{
			yyVAL.str = yyDollar[1].str
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:365
		{
			yyVAL.str = yyDollar[1].str
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:366
		{
			yyVAL.str = yyDollar[1].str
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:368
		{
			yyVAL.str = yyDollar[1].str
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:369
		{
			yyVAL.str = yyDollar[1].str
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:370
		{
			yyVAL.str = yyDollar[1].str
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:371
		{
			yyVAL.str = yyDollar[1].str
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:372
		{
			yyVAL.str = yyDollar[1].str
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:374
		{
			yyVAL.str = yyDollar[1].str
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:376
		{
			yyVAL.str = yyDollar[1].str
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:377
		{
			yyVAL.str = yyDollar[1].str
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:378
		{
			yyVAL.str = yyDollar[1].str
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:379
		{
			yyVAL.str = yyDollar[1].str
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:380
		{
			yyVAL.str = yyDollar[1].str
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:381
		{
			yyVAL.str = yyDollar[1].str
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:385
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:386
		{
			yyVAL.str = yyDollar[1].str
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:387
		{
			yyVAL.str = yyDollar[1].str
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:388
		{
			yyVAL.str = yyDollar[1].str
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:389
		{
			yyVAL.str = yyDollar[1].str
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:390
		{
			yyVAL.str = yyDollar[1].str
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:391
		{
			yyVAL.str = yyDollar[1].str
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:392
		{
			yyVAL.str = yyDollar[1].str
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:393
		{
			yyVAL.str = yyDollar[1].str
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:397
		{
			yyVAL.str = yyDollar[1].str
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:398
		{
			yyVAL.str = yyDollar[1].str
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:399
		{
			yyVAL.str = yyDollar[1].str
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:400
		{
			yyVAL.str = yyDollar[1].str
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:401
		{
			yyVAL.str = yyDollar[1].str
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:402
		{
			yyVAL.str = yyDollar[1].str
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:404
		{
			yyVAL.str = yyDollar[1].str
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:405
		{
			yyVAL.str = yyDollar[1].str
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:406
		{
			yyVAL.str = yyDollar[1].str
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:407
		{
			yyVAL.str = yyDollar[1].str
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:409
		{
			yyVAL.str = yyDollar[1].str
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:410
		{
			yyVAL.str = yyDollar[1].str
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:411
		{
			yyVAL.str = yyDollar[1].str
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:412
		{
			yyVAL.str = yyDollar[1].str
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:413
		{
			yyVAL.str = yyDollar[1].str
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:414
		{
			yyVAL.str = yyDollar[1].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:415
		{
			yyVAL.str = yyDollar[1].str
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:416
		{
			yyVAL.str = yyDollar[1].str
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:417
		{
			yyVAL.str = yyDollar[1].str
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:418
		{
			yyVAL.str = yyDollar[1].str
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:419
		{
			yyVAL.str = yyDollar[1].str
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:420
		{
			yyVAL.str = yyDollar[1].str
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:421
		{
			yyVAL.str = yyDollar[1].str
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:422
		{
			yyVAL.str = yyDollar[1].str
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:429
		{
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:430
		{
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:436
		{
			yyVAL.node = nil
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:438
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:440
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:442
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:444
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:446
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:448
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:450
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:452
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:454
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:456
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:458
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:460
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:462
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:464
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:490
		{
			yyVAL.str = yyDollar[1].str
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:492
		{
			yyVAL.str = "AND"
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:494
		{
			yyVAL.str = "OR"
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:496
		{
			yyVAL.str = "!="
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:498
		{
			yyVAL.str = "="
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:500
		{
			yyVAL.str = "<"
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:502
		{
			yyVAL.str = ">"
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:504
		{
			yyVAL.str = ">="
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:506
		{
			yyVAL.str = "<="
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:508
		{
			yyVAL.str = yyDollar[1].str
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:537
		{

		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:540
		{
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:548
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:549
		{
			yyVAL.strlist = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:554
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:558
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:564
		{
			yyVAL.str = yyDollar[1].str
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:568
		{
			yyVAL.str = yyDollar[1].str
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:576
		{
			yyVAL.node = nil
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:579
		{
			yyVAL.node = nil
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:583
		{
			yyVAL.node = nil
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:587
		{
			yyVAL.node = nil
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:592
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:596
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:604
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:608
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:612
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:616
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:625
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:629
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:639
		{

		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:647
		{

		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:652
		{
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:656
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:659
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:662
		{
			yyVAL.node = yyDollar[2].node
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:665
		{
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:667
		{
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:669
		{
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:672
		{
			yyVAL.node = yyDollar[1].node
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:702
		{
			yyVAL.node = yyDollar[2].node
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:704
		{
			yyVAL.node = yyDollar[2].node
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:706
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:714
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:722
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:730
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:738
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:746
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:754
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:762
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:770
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:778
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:786
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:794
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:803
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:816
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:824
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:832
		{
			yyVAL.node = yyDollar[2].node
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:942
		{
			yyVAL.node = yyDollar[1].node
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:944
		{
			yyVAL.node = yyDollar[1].node
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:946
		{
			yyVAL.node = yyDollar[1].node
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:948
		{
			yyVAL.node = yyDollar[1].node
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:967
		{
			yyVAL.node = yyDollar[1].node
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:969
		{
			yyVAL.node = yyDollar[1].node
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:971
		{
			yyVAL.node = yyDollar[1].node
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:973
		{
			yyVAL.node = yyDollar[1].node
		}
	case 165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:993
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[5].node,
				Op:    yyDollar[3].str,
			}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1001
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[6].node,
				Op:    yyDollar[3].str,
			}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1009
		{
			yyVAL.node = &AExprOp{
				Left: yyDollar[1].node,
				Right: &AExprList{
					List: []Node{
						yyDollar[4].node,
						yyDollar[6].node,
					},
				},
				Op: "BETWEEN",
			}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1125
		{
			yyVAL.node = yyDollar[1].node
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1127
		{
			yyVAL.node = yyDollar[1].node
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1129
		{
			yyVAL.node = yyDollar[1].node
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1133
		{
			yyVAL.node = yyDollar[1].node
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1143
		{
			/*
			 * The SQL spec only allows DEFAULT in "contextually typed
			 * expressions", but for us, it's easier to allow it in
			 * any a_expr and then throw error during parse analysis
			 * if it's in an inappropriate context.  This way also
			 * lets us say something smarter than "syntax error".
			 */

		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1157
		{
			yyVAL.node = &ColumnRef{
				ColName:    yyDollar[3].str,
				TableAlias: yyDollar[1].str,
			}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1165
		{
			yyVAL.node = &ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1169
		{
			yyVAL.node = yyDollar[1].node
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1177
		{
			yyVAL.node = yyDollar[1].node
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1179
		{
			yyVAL.node = yyDollar[2].node
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1181
		{
			yyVAL.node = yyDollar[2].node
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1183
		{ /* result not matter */
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1185
		{ /* result not matter */
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1187
		{ /* result not matter */
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1189
		{ /* result not matter */
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1191
		{ /* result not matter */
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1193
		{ /* result not matter */
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1195
		{ /* result not matter */
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1197
		{ /* result not matter */
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1199
		{ /* result not matter */
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1201
		{ /* result not matter */
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1203
		{ /* result not matter */
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1205
		{ /* result not matter */
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1206
		{ /* result not matter */
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1211
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1215
		{
			yyVAL.node = yyDollar[2].node
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1220
		{
			yyVAL.nodeList = yyDollar[1].nodeList
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1221
		{
			yyVAL.nodeList = nil
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1225
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1226
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1230
		{
			yyVAL.node = yyDollar[1].node
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1234
		{
			yyVAL.node = yyDollar[1].node
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1238
		{
			yyVAL.node = yyDollar[1].node
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1242
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1249
		{
			yyVAL.node = &VarSet{
				Name:  yyDollar[2].str,
				Value: yyDollar[4].str,
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1255
		{
			yyVAL.node = &VarSet{
				IsLocal: true,
				Name:    yyDollar[3].str,
				Value:   yyDollar[5].str,
			}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1262
		{
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1263
		{
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1268
		{
			yyVAL.node = &Begin{}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1277
		{
			yyVAL.node = &Commit{}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1286
		{
			yyVAL.node = &Rollback{}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1294
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1302
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1309
		{
			yyVAL.node = yyDollar[1].node
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1311
		{
			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1313
		{
			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1315
		{
			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1317
		{
			yyVAL.node = yyDollar[1].node
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1319
		{
			yyVAL.node = &Explain{
				Stmt: yyDollar[2].node,
			}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1326
		{
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1327
		{
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1330
		{
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1331
		{
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1334
		{
			yyVAL.tableelt = []TableElt{{
				ColName: yyDollar[1].str,
				ColType: yyDollar[2].str,
			},
			}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1341
		{
			yyVAL.tableelt = nil
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1344
		{
			yyVAL.tableelt = append(yyDollar[1].tableelt, yyDollar[3].tableelt...)
		}
	case 224:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1349
		{
			yyVAL.node = &CreateTable{
				TableName: yyDollar[3].str,
				TableElts: yyDollar[5].tableelt,
			}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1354
		{
			yyVAL.node = &Index{}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1358
		{
			yyVAL.node = &CreateRole{}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1362
		{
			yyVAL.node = &CreateDatabase{}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1369
		{
			yyVAL.node = &Alter{}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1376
		{
			yyVAL.node = &Vacuum{}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1383
		{
			yyVAL.node = &Cluster{}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1391
		{
			yyVAL.node = &Analyze{}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1398
		{
			yyVAL.node = &Drop{}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1406
		{
			yyVAL.node = &Truncate{}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1414
		{
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1415
		{
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1416
		{
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1420
		{
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1421
		{
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1422
		{
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1428
		{
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1429
		{
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1433
		{
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1437
		{
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1438
		{
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1447
		{
			/* no operator */
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1454
		{
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1454
		{
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1455
		{
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1455
		{
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1456
		{
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1456
		{
		}
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1457
		{
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1457
		{
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1458
		{
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1458
		{
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1459
		{
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1459
		{
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1473
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1480
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1482
		{
			yyVAL.str = yyDollar[1].str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1521
		{
			yyVAL.from = &RangeVar{
				SchemaName:   "",
				RelationName: yyDollar[1].str,
				Alias:        "",
			}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1529
		{
			yyVAL.from = &RangeVar{
				SchemaName:   yyDollar[1].str,
				RelationName: yyDollar[3].str,
				Alias:        "",
			}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1544
		{
			yyVAL.from_list = yyDollar[2].from_list
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1545
		{
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1549
		{
			yyVAL.from_list = []FromClauseNode{yyDollar[1].from}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1550
		{
			yyVAL.from_list = append(yyDollar[1].from_list, yyDollar[3].from)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1555
		{
			/* inheritance query, implicitly */
			yyVAL.tableref = yyDollar[1].from
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1566
		{
			yyVAL.str = yyDollar[2].str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1570
		{
			yyVAL.str = yyDollar[1].str
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1576
		{
			yyVAL.str = ""
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1587
		{
			yyVAL.node = yyDollar[1].node
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1592
		{
			yyVAL.bool = true
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1593
		{
			yyVAL.bool = false
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1604
		{
			yyVAL.node = nil
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1608
		{
			yyVAL.node = nil
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1612
		{

		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1616
		{

		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1620
		{
			yyVAL.node = nil
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1638
		{
			yyVAL.node = yyDollar[1].node
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1646
		{
			yyDollar[1].tableref.SetAlias(yyDollar[2].str)
			yyVAL.from = yyDollar[1].tableref
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1651
		{

		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1655
		{

		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1659
		{
			yyVAL.from = yyDollar[1].tableref
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1663
		{
			yyDollar[2].tableref.SetAlias(yyDollar[4].str)
			yyVAL.from = yyDollar[2].tableref
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1671
		{
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1672
		{
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1676
		{
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1677
		{
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1678
		{
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1679
		{
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1690
		{

		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1698
		{
			yyVAL.tableref = yyDollar[2].tableref
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1702
		{
			/* CROSS JOIN is same as unqualified inner join */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1710
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1717
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[3].from,
			}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1725
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[5].from,
			}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1732
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 300:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lyx/gram.y:1747
		{
			yyVAL.node = &Select{
				FromClause: yyDollar[3].from_list,
				Where:      yyDollar[4].node,
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1753
		{
			yyVAL.node = &Select{
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1761
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1762
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1767
		{
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1767
		{
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1770
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1776
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1777
		{
			yyVAL.strlist = nil
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1782
		{
			yyVAL.str = yyDollar[1].str
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1788
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1789
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1794
		{
			yyVAL.strlist = nil
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1797
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1805
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1807
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1812
		{
			yyVAL.nodeList = yyDollar[2].nodeList
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1818
		{
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1819
		{
		}
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1825
		{
			yyVAL.node = &Insert{
				TableRef: yyDollar[3].tableref,
				Columns:  yyDollar[4].strlist,
				Values:   yyDollar[6].nodeList,
			}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1831
		{
			yyVAL.node = &Insert{
				TableRef:  yyDollar[3].tableref,
				Columns:   yyDollar[4].strlist,
				SubSelect: yyDollar[5].node,
			}
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1840
		{
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1841
		{
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1847
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1848
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1853
		{
			yyVAL.str = yyDollar[1].str
		}
	case 326:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lyx/gram.y:1863
		{
			yyVAL.node = &Update{
				TableRef: yyDollar[3].tableref,
				Where:    yyDollar[7].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1874
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1875
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1880
		{
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1881
		{
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1885
		{
			yyVAL.node = &Delete{
				TableRef: yyDollar[4].tableref,
				Where:    yyDollar[6].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1894
		{
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1895
		{
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1896
		{
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1902
		{
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1907
		{
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1909
		{
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1915
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1919
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1926
		{

		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1932
		{
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1934
		{
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1935
		{
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1936
		{
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1941
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1945
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1952
		{
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1956
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1957
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1962
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[2].str)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1963
		{
			yyVAL.strlist = nil
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1972
		{
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1975
		{
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1978
		{
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1981
		{
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1984
		{
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1987
		{
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1990
		{
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1993
		{
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1996
		{
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1999
		{
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2002
		{
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2005
		{
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2008
		{
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2014
		{
			yyVAL.bool = true
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2015
		{
			yyVAL.bool = false
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2019
		{
			yyVAL.bool = true
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2020
		{
			yyVAL.bool = false
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2028
		{
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2029
		{
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2030
		{
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2036
		{
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2038
		{
		}
	case 382:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lyx/gram.y:2053
		{
			yyVAL.node = &Copy{
				TableRef: yyDollar[3].from,
				Where:    yyDollar[11].node,
				IsFrom:   yyDollar[5].bool,
			}
		}
	case 383:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lyx/gram.y:2061
		{
			yyVAL.node = &Copy{
				IsFrom:  false,
				SubStmt: yyDollar[3].node,
			}
		}
	}
	goto yystack /* stack new state and value */
}
