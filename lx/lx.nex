/[0-9]+/          { lval.TokType = "INTEGER"; return 1; }
/[0-9]+\.[0-9]*/  { lval.TokType = "FLOAT"; return 2; }
/if|then|begin|end|procedure|function/
                  {  }
/[a-z][a-z0-9]*/  { lval.TokType = "IDENT"; return 3; }
/\+|-|\*|\//      { }
/[ \t\n]+/        { /* eat up whitespace */ }
/./               { }
/{[^\{\}\n]*}/    { /* eat up one-line comments */ }
//

package lx
type yySymType struct { 
  TokType string
}

type Tokenizer struct {
  v *yySymType
  l *Lexer
}

func NewTokenizer(reader io.Reader) *Tokenizer {
  return &Tokenizer{
    v: new(yySymType),
    l: NewLexer(reader),
  }
}

func (t *Tokenizer) Tok() int {
  return t.l.Lex(t.v)
}